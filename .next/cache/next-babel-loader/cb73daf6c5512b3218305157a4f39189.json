{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\n\nvar _jsxFileName = \"/Users/salahabdallah/Desktop/Dev/Jargon/pages/main.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport Head from 'next/head';\nimport Appbar from '../components/appbar';\nimport Searchbar from '../components/search';\nimport Addbtn from '../components/addword';\nimport react, { useEffect, useState } from 'react';\nimport { firestore } from \"../utils/firebase\";\nexport default function Home() {\n  _s();\n\n  var _useState = useState([]),\n      addedword = _useState[0],\n      setWord = _useState[1];\n\n  var _useState2 = useState(false),\n      clear = _useState2[0],\n      setClear = _useState2[1];\n\n  var getData = /*#__PURE__*/function () {\n    var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2(word) {\n      var clear, shouldclear, sendtofb, _sendtofb;\n\n      return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              _sendtofb = function _sendtofb3() {\n                _sendtofb = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n                  var _word, isAvailable;\n\n                  return _regeneratorRuntime.wrap(function _callee$(_context) {\n                    while (1) {\n                      switch (_context.prev = _context.next) {\n                        case 0:\n                          if (!(addedword.length != 0 & addedword.word != \"\")) {\n                            _context.next = 6;\n                            break;\n                          }\n\n                          _word = addedword.word;\n                          isAvailable = false;\n                          console.log(_word);\n                          _context.next = 6;\n                          return firestore.collection(\"words\").doc(_word).get().then(function (doc) {\n                            if (doc.exists) {\n                              isAvailable = true;\n                              setClear(false);\n                              console.log(shouldclear);\n                            } else {\n                              var _shouldclear = true;\n                              console.log(_shouldclear);\n                            }\n                          })[\"catch\"](function (error) {\n                            console.log(\"Error getting document:\", error);\n                          });\n\n                        case 6:\n                        case \"end\":\n                          return _context.stop();\n                      }\n                    }\n                  }, _callee);\n                }));\n                return _sendtofb.apply(this, arguments);\n              };\n\n              sendtofb = function _sendtofb2() {\n                return _sendtofb.apply(this, arguments);\n              };\n\n              clear = false;\n              setClear(clear);\n              setWord(word);\n              shouldclear = false;\n              setClear(shouldclear);\n\n            case 7:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, _callee2);\n    }));\n\n    return function getData(_x) {\n      return _ref.apply(this, arguments);\n    };\n  }();\n\n  useEffect(function () {//sendtofb();\n    //setClear(shouldclear)\n  }, []);\n  return __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 5\n    }\n  }, __jsx(Head, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 7\n    }\n  }, __jsx(\"link\", {\n    rel: \"stylesheet\",\n    href: \"https://fonts.googleapis.com/icon?family=Material+Icons\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 9\n    }\n  })), __jsx(\"main\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 7\n    }\n  }, __jsx(Appbar, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 9\n    }\n  }), __jsx(Searchbar, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 9\n    }\n  }), __jsx(Addbtn, {\n    returnData: getData,\n    clear: clear,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 9\n    }\n  })));\n}\n\n_s(Home, \"Vpyh76YZQBOBhu2W1hl40RjUfS8=\");\n\n_c = Home;\n\nvar _c;\n\n$RefreshReg$(_c, \"Home\");","map":{"version":3,"sources":["/Users/salahabdallah/Desktop/Dev/Jargon/pages/main.js"],"names":["Head","Appbar","Searchbar","Addbtn","react","useEffect","useState","firestore","Home","addedword","setWord","clear","setClear","getData","word","sendtofb","length","isAvailable","console","log","collection","doc","get","then","exists","shouldclear","error"],"mappings":"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","sourcesContent":["import Head from 'next/head'\nimport Appbar from '../components/appbar'\nimport Searchbar from '../components/search'\nimport Addbtn from '../components/addword'\nimport react, { useEffect, useState } from 'react'\nimport { firestore } from \"../utils/firebase\"\n\n\nexport default function Home() {\n\n  const [addedword, setWord] = useState([])\n  const [clear, setClear] = useState(false)\n\n  const getData = async (word) => {\n\n    var clear  = false\n\n    setClear(clear)\n\n    setWord(word)\n\n    let shouldclear = false;\n\n    async function sendtofb() {\n\n      if (addedword.length != 0 & addedword.word != \"\") {\n\n        let word = addedword.word\n        let isAvailable = false\n    \n      console.log(word)\n       await firestore.collection(\"words\").doc(word).get().then(function (doc) {\n          if (doc.exists) {\n            isAvailable = true\n            setClear(false)\n            console.log(shouldclear)\n            \n          }else{\n            let shouldclear = true;\n            \n            console.log(shouldclear)\n          }\n        }).catch(function (error) {\n          console.log(\"Error getting document:\", error);\n        }); \n\n        \n/*\n        if (isAvailable == false) {\n\n          await firestore.collection(\"words\").doc(word).set({\n            definition: addedword.definition,\n            industry: \"Construction\",\n            sub_industry: \"Construction\",\n            user: \"Salah\",\n            word: addedword.word\n          })\n            .then(function () {\n              console.log(\"Document successfully written!\");\n              \n\n            })\n            .catch(function (error) {\n              console.error(\"Error writing document: \", error);\n            })\n        }*/\n      }\n    }\n\nsetClear(shouldclear)\n  }\n\n  useEffect(() => {\n\n \n    //sendtofb();\n    //setClear(shouldclear)\n   \n\n  \n  \n  }, []);\n\n  \n\n\n\n  return (\n    <div>\n      <Head>\n        <link rel=\"stylesheet\" href=\"https://fonts.googleapis.com/icon?family=Material+Icons\" />\n      </Head>\n      <main>\n        <Appbar></Appbar>\n        <Searchbar></Searchbar>\n        <Addbtn returnData={getData} clear = {clear} ></Addbtn>\n      </main>\n    </div>\n  )\n}"]},"metadata":{},"sourceType":"module"}