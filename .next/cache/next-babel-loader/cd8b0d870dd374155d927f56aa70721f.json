{"ast":null,"code":"import React from \"react\";\nvar __jsx = React.createElement;\nimport SignIn from \"../components/signin\";\nimport axios from \"axios\";\nimport { useContext } from \"react\";\nimport { UserContext } from \"../providers/userProvider\";\nimport router from \"next/router\";\nimport Card from \"@material-ui/core/Card\";\nimport Box from \"@material-ui/core/Box\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nconst useStyles = makeStyles(theme => ({\n  box: {\n    display: \"flex\",\n    flexDirection: \"column\",\n    justifyContent: \"center\",\n    marginTop: \"5%\",\n    marginLeft: \"20%\",\n    marginRight: \"20%\",\n    textAlign: \"center\"\n  },\n  card: {\n    display: \"flex\",\n    flexDirection: \"column\",\n    justifyContent: \"center\",\n    marginTop: \"5%\",\n    marginLeft: \"20%\",\n    marginRight: \"20%\",\n    textAlign: \"center\"\n  }\n}));\nexport default function Signin() {\n  const classes = useStyles();\n  const {\n    user,\n    setUser\n  } = useContext(UserContext);\n\n  const signInWithEmailAndPassword = async (email, password) => {\n    try {\n      const useruid = await axios.get(`/api/auth/signin`, {\n        params: {\n          email,\n          password\n        }\n      }, {\n        headers: {\n          \"Content-Type\": \"application/json\"\n        }\n      }).then(response => response);\n\n      if (useruid.data.userInfo.uid.length > 0) {\n        router.push({\n          pathname: \"/console\",\n          query: {\n            data: useruid.data.userInfo.displayName\n          }\n        });\n        router.reload();\n      }\n\n      console.log(useruid.data);\n    } catch (error) {}\n  };\n\n  return __jsx(\"div\", null, __jsx(Box, {\n    Container: true,\n    className: classes.box\n  }, __jsx(Card, null, __jsx(SignIn, {\n    Signin: signInWithEmailAndPassword\n  }))));\n}","map":{"version":3,"sources":["/Users/salahabdallah/Desktop/Dev/Jargon/pages/login.js"],"names":["SignIn","axios","useContext","UserContext","router","Card","Box","makeStyles","useStyles","theme","box","display","flexDirection","justifyContent","marginTop","marginLeft","marginRight","textAlign","card","Signin","classes","user","setUser","signInWithEmailAndPassword","email","password","useruid","get","params","headers","then","response","data","userInfo","uid","length","push","pathname","query","displayName","reload","console","log","error"],"mappings":";;AAAA,OAAOA,MAAP,MAAmB,sBAAnB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,UAAT,QAA2B,OAA3B;AACA,SAASC,WAAT,QAA4B,2BAA5B;AACA,OAAOC,MAAP,MAAmB,aAAnB;AACA,OAAOC,IAAP,MAAiB,wBAAjB;AACA,OAAOC,GAAP,MAAgB,uBAAhB;AACA,SAASC,UAAT,QAA2B,0BAA3B;AAEA,MAAMC,SAAS,GAAGD,UAAU,CAAEE,KAAD,KAAY;AACvCC,EAAAA,GAAG,EAAE;AACHC,IAAAA,OAAO,EAAE,MADN;AAEHC,IAAAA,aAAa,EAAE,QAFZ;AAGHC,IAAAA,cAAc,EAAE,QAHb;AAIHC,IAAAA,SAAS,EAAE,IAJR;AAKHC,IAAAA,UAAU,EAAE,KALT;AAMHC,IAAAA,WAAW,EAAE,KANV;AAOHC,IAAAA,SAAS,EAAE;AAPR,GADkC;AAUvCC,EAAAA,IAAI,EAAE;AACJP,IAAAA,OAAO,EAAE,MADL;AAEJC,IAAAA,aAAa,EAAE,QAFX;AAGJC,IAAAA,cAAc,EAAE,QAHZ;AAIJC,IAAAA,SAAS,EAAE,IAJP;AAKJC,IAAAA,UAAU,EAAE,KALR;AAMJC,IAAAA,WAAW,EAAE,KANT;AAOJC,IAAAA,SAAS,EAAE;AAPP;AAViC,CAAZ,CAAD,CAA5B;AAqBA,eAAe,SAASE,MAAT,GAAkB;AAC/B,QAAMC,OAAO,GAAGZ,SAAS,EAAzB;AAEA,QAAM;AAAEa,IAAAA,IAAF;AAAQC,IAAAA;AAAR,MAAoBpB,UAAU,CAACC,WAAD,CAApC;;AAEA,QAAMoB,0BAA0B,GAAG,OAAOC,KAAP,EAAcC,QAAd,KAA2B;AAC5D,QAAI;AACF,YAAMC,OAAO,GAAG,MAAMzB,KAAK,CACxB0B,GADmB,CAEjB,kBAFiB,EAGlB;AAAEC,QAAAA,MAAM,EAAE;AAAEJ,UAAAA,KAAF;AAASC,UAAAA;AAAT;AAAV,OAHkB,EAIlB;AAAEI,QAAAA,OAAO,EAAE;AAAE,0BAAgB;AAAlB;AAAX,OAJkB,EAMnBC,IANmB,CAMbC,QAAD,IAAcA,QANA,CAAtB;;AAQA,UAAIL,OAAO,CAACM,IAAR,CAAaC,QAAb,CAAsBC,GAAtB,CAA0BC,MAA1B,GAAmC,CAAvC,EAA0C;AACxC/B,QAAAA,MAAM,CAACgC,IAAP,CAAY;AACVC,UAAAA,QAAQ,EAAE,UADA;AAEVC,UAAAA,KAAK,EAAE;AAAEN,YAAAA,IAAI,EAAEN,OAAO,CAACM,IAAR,CAAaC,QAAb,CAAsBM;AAA9B;AAFG,SAAZ;AAIAnC,QAAAA,MAAM,CAACoC,MAAP;AACD;;AAEDC,MAAAA,OAAO,CAACC,GAAR,CAAYhB,OAAO,CAACM,IAApB;AACD,KAlBD,CAkBE,OAAOW,KAAP,EAAc,CAAE;AACnB,GApBD;;AAsBA,SACE,mBACE,MAAC,GAAD;AAAK,IAAA,SAAS,MAAd;AAAe,IAAA,SAAS,EAAEvB,OAAO,CAACV;AAAlC,KACE,MAAC,IAAD,QACE,MAAC,MAAD;AAAQ,IAAA,MAAM,EAAEa;AAAhB,IADF,CADF,CADF,CADF;AASD","sourcesContent":["import SignIn from \"../components/signin\";\nimport axios from \"axios\";\nimport { useContext } from \"react\";\nimport { UserContext } from \"../providers/userProvider\";\nimport router from \"next/router\";\nimport Card from \"@material-ui/core/Card\";\nimport Box from \"@material-ui/core/Box\";\nimport { makeStyles } from \"@material-ui/core/styles\";\n\nconst useStyles = makeStyles((theme) => ({\n  box: {\n    display: \"flex\",\n    flexDirection: \"column\",\n    justifyContent: \"center\",\n    marginTop: \"5%\",\n    marginLeft: \"20%\",\n    marginRight: \"20%\",\n    textAlign: \"center\",\n  },\n  card: {\n    display: \"flex\",\n    flexDirection: \"column\",\n    justifyContent: \"center\",\n    marginTop: \"5%\",\n    marginLeft: \"20%\",\n    marginRight: \"20%\",\n    textAlign: \"center\",\n  },\n}));\n\nexport default function Signin() {\n  const classes = useStyles();\n\n  const { user, setUser } = useContext(UserContext);\n\n  const signInWithEmailAndPassword = async (email, password) => {\n    try {\n      const useruid = await axios\n        .get(\n          `/api/auth/signin`,\n          { params: { email, password } },\n          { headers: { \"Content-Type\": \"application/json\" } }\n        )\n        .then((response) => response);\n\n      if (useruid.data.userInfo.uid.length > 0) {\n        router.push({\n          pathname: \"/console\",\n          query: { data: useruid.data.userInfo.displayName },\n        });\n        router.reload();\n      }\n\n      console.log(useruid.data);\n    } catch (error) {}\n  };\n\n  return (\n    <div>\n      <Box Container className={classes.box}>\n        <Card>\n          <SignIn Signin={signInWithEmailAndPassword}></SignIn>\n        </Card>\n      </Box>\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}