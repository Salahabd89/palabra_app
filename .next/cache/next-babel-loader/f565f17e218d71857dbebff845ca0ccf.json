{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\n\nvar _s = $RefreshSig$();\n\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { useState } from 'react';\nimport Addwordform from '../components/add';\nimport axios from 'axios';\nexport default function addword() {\n  _s();\n\n  var _useState = useState({\n    word: '',\n    definition: ''\n  }),\n      wordanddef = _useState[0],\n      setWordandDef = _useState[1];\n\n  var getData = /*#__PURE__*/function () {\n    var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(word) {\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              setWordandDef({\n                word: word.word,\n                definition: word.definition\n              });\n              console.log(word);\n              _context.next = 4;\n              return axios.get(\"/api/add\", JSON.stringify(word), {\n                headers: {\n                  'Content-Type': 'application/json'\n                }\n              }).then(function (response) {})[\"catch\"](function (error) {\n                console.log(error);\n              });\n\n            case 4:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    return function getData(_x) {\n      return _ref.apply(this, arguments);\n    };\n  }();\n\n  return __jsx(\"div\", null, __jsx(Addwordform, {\n    returnData: getData\n  }));\n}\n/*\n\n db.collection(\"words\").add({\n          \n          definition: \"\",\n          industry: \"\",\n          sub_industry: \"\",\n          user: \"Salah\",\n          word: \"\" ,\n          })\n          .then(function (docRef) {\n            console.log(\"Document written with ID: \", docRef.id);\n          })\n          .catch(function (error) {\n            console.error(\"Error adding document: \", error);\n          });\n\n      })\n      .catch(function (error) {\n        console.log(error);\n      });\n\n*/\n\n_s(addword, \"YXLTbSSOW79FBMQp5gi5rSI7LYA=\");","map":{"version":3,"sources":["/Users/salahabdallah/Desktop/Dev/Jargon/pages/addword.js"],"names":["useState","Addwordform","axios","addword","word","definition","wordanddef","setWordandDef","getData","console","log","get","JSON","stringify","headers","then","response","error"],"mappings":";;;;;;;AACA,SAASA,QAAT,QAAyB,OAAzB;AACA,OAAOC,WAAP,MAAwB,mBAAxB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AAEA,eAAe,SAASC,OAAT,GAAmB;AAAA;;AAAA,kBAEIH,QAAQ,CAAC;AAACI,IAAAA,IAAI,EAAC,EAAN;AAAUC,IAAAA,UAAU,EAAC;AAArB,GAAD,CAFZ;AAAA,MAEzBC,UAFyB;AAAA,MAEbC,aAFa;;AAIhC,MAAMC,OAAO;AAAA,wEAAG,iBAAOJ,IAAP;AAAA;AAAA;AAAA;AAAA;AAEdG,cAAAA,aAAa,CAAC;AAACH,gBAAAA,IAAI,EAACA,IAAI,CAACA,IAAX;AAAiBC,gBAAAA,UAAU,EAACD,IAAI,CAACC;AAAjC,eAAD,CAAb;AACAI,cAAAA,OAAO,CAACC,GAAR,CAAYN,IAAZ;AAHc;AAAA,qBAKRF,KAAK,CAACS,GAAN,aAAsBC,IAAI,CAACC,SAAL,CAAeT,IAAf,CAAtB,EAA4C;AAAEU,gBAAAA,OAAO,EAAE;AAAE,kCAAgB;AAAlB;AAAX,eAA5C,EACHC,IADG,CACE,UAAUC,QAAV,EAAoB,CAGzB,CAJG,WAKG,UAAUC,KAAV,EAAiB;AACtBR,gBAAAA,OAAO,CAACC,GAAR,CAAYO,KAAZ;AACD,eAPG,CALQ;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAH;;AAAA,oBAAPT,OAAO;AAAA;AAAA;AAAA,KAAb;;AAeA,SAEE,mBACE,MAAC,WAAD;AAAa,IAAA,UAAU,EAAEA;AAAzB,IADF,CAFF;AAOD;AAGD;;;;;;;;;;;;;;;;;;;;;;;;GA7BwBL,O","sourcesContent":["\nimport { useState } from 'react'\nimport Addwordform from '../components/add'\nimport axios from 'axios';\n\nexport default function addword() {\n\n  const [wordanddef ,setWordandDef] = useState({word:'', definition:''});\n\n  const getData = async (word) => {\n\n    setWordandDef({word:word.word, definition:word.definition})\n    console.log(word)\n\n    await axios.get(`/api/add`, JSON.stringify(word), { headers: { 'Content-Type': 'application/json' } })\n      .then(function (response) {\n        \n\n      })\n      .catch(function (error) {\n        console.log(error);\n      });\n}\n\n  return (\n\n    <div>\n      <Addwordform returnData={getData} ></Addwordform>\n    </div>\n\n  )\n}\n\n\n/*\n\n db.collection(\"words\").add({\n          \n          definition: \"\",\n          industry: \"\",\n          sub_industry: \"\",\n          user: \"Salah\",\n          word: \"\" ,\n          })\n          .then(function (docRef) {\n            console.log(\"Document written with ID: \", docRef.id);\n          })\n          .catch(function (error) {\n            console.error(\"Error adding document: \", error);\n          });\n\n      })\n      .catch(function (error) {\n        console.log(error);\n      });\n\n*/"]},"metadata":{},"sourceType":"module"}