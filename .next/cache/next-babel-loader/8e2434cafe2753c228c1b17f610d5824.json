{"ast":null,"code":"var _jsxFileName = \"/Users/salahabdallah/Desktop/Dev/Jargon/pages/main.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport Head from 'next/head';\nimport Appbar from '../components/appbar';\nimport Searchbar from '../components/search';\nimport Addbtn from '../components/addword';\nimport react, { useEffect, useState } from 'react';\nimport { firestore } from \"../utils/firebase\";\nexport default function Home() {\n  const {\n    0: addedword,\n    1: setWord\n  } = useState([]);\n  const {\n    0: clearwords,\n    1: setClear\n  } = useState(false);\n\n  const getData = async word => {\n    setWord(word);\n    console.log(word);\n    let shouldclear = false;\n\n    if (addedword.length != 0 & addedword.word != \"\") {\n      let word = addedword.word;\n      let isAvailable = false;\n\n      if (word == 'a') {\n        setClear(false);\n        console.log(shouldclear);\n      } else {\n        let shouldclear = true;\n      }\n      /* await firestore.collection(\"words\").doc(word).get().then(function (doc) {\n          if (doc.exists) {\n            isAvailable = true\n            setClear(false)\n            console.log(shouldclear)\n            \n          }else{\n            let shouldclear = true;\n            \n            console.log(shouldclear)\n          }\n        }).catch(function (error) {\n          console.log(\"Error getting document:\", error);\n        }); */\n\n      /*\n              if (isAvailable == false) {\n      \n                await firestore.collection(\"words\").doc(word).set({\n                  definition: addedword.definition,\n                  industry: \"Construction\",\n                  sub_industry: \"Construction\",\n                  user: \"Salah\",\n                  word: addedword.word\n                })\n                  .then(function () {\n                    console.log(\"Document successfully written!\");\n                    \n      \n                  })\n                  .catch(function (error) {\n                    console.error(\"Error writing document: \", error);\n                  })\n              }*/\n\n    }\n\n    setClear(shouldclear);\n  };\n\n  return __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 5\n    }\n  }, __jsx(Head, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 7\n    }\n  }, __jsx(\"link\", {\n    rel: \"stylesheet\",\n    href: \"https://fonts.googleapis.com/icon?family=Material+Icons\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 9\n    }\n  })), __jsx(\"main\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 7\n    }\n  }, __jsx(Appbar, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 9\n    }\n  }), __jsx(Searchbar, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 9\n    }\n  }), __jsx(Addbtn, {\n    returnData: getData,\n    clear: clearwords,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 9\n    }\n  })));\n}","map":{"version":3,"sources":["/Users/salahabdallah/Desktop/Dev/Jargon/pages/main.js"],"names":["Head","Appbar","Searchbar","Addbtn","react","useEffect","useState","firestore","Home","addedword","setWord","clearwords","setClear","getData","word","console","log","shouldclear","length","isAvailable"],"mappings":";;;AAAA,OAAOA,IAAP,MAAiB,WAAjB;AACA,OAAOC,MAAP,MAAmB,sBAAnB;AACA,OAAOC,SAAP,MAAsB,sBAAtB;AACA,OAAOC,MAAP,MAAmB,uBAAnB;AACA,OAAOC,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,SAASC,SAAT,QAA0B,mBAA1B;AAGA,eAAe,SAASC,IAAT,GAAgB;AAE7B,QAAM;AAAA,OAACC,SAAD;AAAA,OAAYC;AAAZ,MAAuBJ,QAAQ,CAAC,EAAD,CAArC;AACA,QAAM;AAAA,OAACK,UAAD;AAAA,OAAaC;AAAb,MAAyBN,QAAQ,CAAC,KAAD,CAAvC;;AAEA,QAAMO,OAAO,GAAG,MAAOC,IAAP,IAAgB;AAG9BJ,IAAAA,OAAO,CAACI,IAAD,CAAP;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAYF,IAAZ;AACA,QAAIG,WAAW,GAAG,KAAlB;;AAGE,QAAIR,SAAS,CAACS,MAAV,IAAoB,CAApB,GAAwBT,SAAS,CAACK,IAAV,IAAkB,EAA9C,EAAkD;AAEhD,UAAIA,IAAI,GAAGL,SAAS,CAACK,IAArB;AACA,UAAIK,WAAW,GAAG,KAAlB;;AAEA,UAAIL,IAAI,IAAI,GAAZ,EAAgB;AACdF,QAAAA,QAAQ,CAAC,KAAD,CAAR;AACAG,QAAAA,OAAO,CAACC,GAAR,CAAYC,WAAZ;AACD,OAHD,MAGK;AACH,YAAIA,WAAW,GAAG,IAAlB;AACD;AACH;;;;;;;;;;;;;;;AAgBN;;;;;;;;;;;;;;;;;;;;AAmBO;;AAEDL,IAAAA,QAAQ,CAACK,WAAD,CAAR;AACD,GAzDH;;AA2DA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAM,IAAA,GAAG,EAAC,YAAV;AAAuB,IAAA,IAAI,EAAC,yDAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADF,EAIE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAEE,MAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,EAGE,MAAC,MAAD;AAAQ,IAAA,UAAU,EAAEJ,OAApB;AAA6B,IAAA,KAAK,EAAIF,UAAtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAHF,CAJF,CADF;AAYD","sourcesContent":["import Head from 'next/head'\nimport Appbar from '../components/appbar'\nimport Searchbar from '../components/search'\nimport Addbtn from '../components/addword'\nimport react, { useEffect, useState } from 'react'\nimport { firestore } from \"../utils/firebase\"\n\n\nexport default function Home() {\n\n  const [addedword, setWord] = useState([])\n  const [clearwords, setClear] = useState(false)\n\n  const getData = async (word) => {\n\n\n    setWord(word)\n    console.log(word)\n    let shouldclear = false;\n\n\n      if (addedword.length != 0 & addedword.word != \"\") {\n\n        let word = addedword.word\n        let isAvailable = false\n    \n        if (word == 'a'){\n          setClear(false)\n          console.log(shouldclear)\n        }else{\n          let shouldclear = true;\n        }\n      /* await firestore.collection(\"words\").doc(word).get().then(function (doc) {\n          if (doc.exists) {\n            isAvailable = true\n            setClear(false)\n            console.log(shouldclear)\n            \n          }else{\n            let shouldclear = true;\n            \n            console.log(shouldclear)\n          }\n        }).catch(function (error) {\n          console.log(\"Error getting document:\", error);\n        }); */\n\n        \n/*\n        if (isAvailable == false) {\n\n          await firestore.collection(\"words\").doc(word).set({\n            definition: addedword.definition,\n            industry: \"Construction\",\n            sub_industry: \"Construction\",\n            user: \"Salah\",\n            word: addedword.word\n          })\n            .then(function () {\n              console.log(\"Document successfully written!\");\n              \n\n            })\n            .catch(function (error) {\n              console.error(\"Error writing document: \", error);\n            })\n        }*/\n      }\n\n      setClear(shouldclear)\n    }\n\n  return (\n    <div>\n      <Head>\n        <link rel=\"stylesheet\" href=\"https://fonts.googleapis.com/icon?family=Material+Icons\" />\n      </Head>\n      <main>\n        <Appbar></Appbar>\n        <Searchbar></Searchbar>\n        <Addbtn returnData={getData} clear = {clearwords} ></Addbtn>\n      </main>\n    </div>\n  )\n}"]},"metadata":{},"sourceType":"module"}