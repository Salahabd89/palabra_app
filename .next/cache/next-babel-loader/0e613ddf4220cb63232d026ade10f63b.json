{"ast":null,"code":"import React from \"react\";\nvar __jsx = React.createElement;\nimport { UserContext } from '../providers/userProvider';\nimport { useState, useMemo, useContext } from 'react';\n\nfunction MyApp({\n  Component,\n  pageProps\n}) {\n  const user = useContext(UserContext);\n  return __jsx(UserContext.Provider, {\n    value: user\n  }, __jsx(Component, pageProps), JSON.stringify({\n    user\n  }));\n} // Only uncomment this method if you have blocking data requirements for\n// every single page in your application. This disables the ability to\n// perform automatic static optimization, causing every page in your app to\n// be server-side rendered.\n//\n// MyApp.getInitialProps = async (appContext) => {\n//   // calls page's `getInitialProps` and fills `appProps.pageProps`\n//   const appProps = await App.getInitialProps(appContext);\n//\n//   return { ...appProps }\n// }\n\n\nexport default MyApp;","map":{"version":3,"sources":["/Users/salahabdallah/Desktop/Dev/Jargon/pages/_app.js"],"names":["UserContext","useState","useMemo","useContext","MyApp","Component","pageProps","user","JSON","stringify"],"mappings":";;AACA,SAAQA,WAAR,QAA0B,2BAA1B;AACA,SAASC,QAAT,EAAmBC,OAAnB,EAA4BC,UAA5B,QAA8C,OAA9C;;AAGA,SAASC,KAAT,CAAe;AAAEC,EAAAA,SAAF;AAAaC,EAAAA;AAAb,CAAf,EAAyC;AAErC,QAAMC,IAAI,GAAGJ,UAAU,CAACH,WAAD,CAAvB;AAGA,SAAO,MAAC,WAAD,CAAa,QAAb;AAAsB,IAAA,KAAK,EAAEO;AAA7B,KAAoC,MAAC,SAAD,EAAeD,SAAf,CAApC,EACCE,IAAI,CAACC,SAAL,CAAe;AAACF,IAAAA;AAAD,GAAf,CADD,CAAP;AAGD,C,CAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAEA,eAAeH,KAAf","sourcesContent":["\nimport {UserContext} from '../providers/userProvider';\nimport { useState, useMemo, useContext } from 'react'\n\n\nfunction MyApp({ Component, pageProps }) {\n\n    const user = useContext(UserContext);\n\n\n    return <UserContext.Provider value={user} ><Component {...pageProps} />\n           {JSON.stringify({user}) }\n           </UserContext.Provider>\n  }\n  \n  // Only uncomment this method if you have blocking data requirements for\n  // every single page in your application. This disables the ability to\n  // perform automatic static optimization, causing every page in your app to\n  // be server-side rendered.\n  //\n  // MyApp.getInitialProps = async (appContext) => {\n  //   // calls page's `getInitialProps` and fills `appProps.pageProps`\n  //   const appProps = await App.getInitialProps(appContext);\n  //\n  //   return { ...appProps }\n  // }\n  \n  export default MyApp"]},"metadata":{},"sourceType":"module"}