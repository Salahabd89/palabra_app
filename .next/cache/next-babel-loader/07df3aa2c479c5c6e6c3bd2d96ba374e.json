{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\n\nvar _jsxFileName = \"/Users/salahabdallah/Desktop/Dev/Jargon/pages/main.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport Head from 'next/head';\nimport Appbar from '../components/appbar';\nimport Searchbar from '../components/search';\nimport Addbtn from '../components/addword';\nimport react, { useEffect, useState } from 'react';\nimport { firestore } from \"../utils/firebase\";\nexport default function Home() {\n  _s();\n\n  var _useState = useState([]),\n      addedword = _useState[0],\n      setWord = _useState[1];\n\n  var _useState2 = useState(false),\n      clear = _useState2[0],\n      setClear = _useState2[1];\n\n  var getData = /*#__PURE__*/function () {\n    var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(word) {\n      var shouldclear, _word, isAvailable;\n\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              setWord(word);\n              console.log(word);\n              shouldclear = false;\n\n              if (!(addedword.length != 0 & addedword.word != \"\")) {\n                _context.next = 8;\n                break;\n              }\n\n              _word = addedword.word;\n              isAvailable = false;\n              _context.next = 8;\n              return firestore.collection(\"words\").doc(_word).get().then(function (doc) {\n                if (doc.exists) {\n                  isAvailable = true;\n                  setClear(false);\n                  console.log(shouldclear);\n                } else {\n                  var _shouldclear = true;\n                  console.log(_shouldclear);\n                }\n              })[\"catch\"](function (error) {\n                console.log(\"Error getting document:\", error);\n              });\n\n            case 8:\n              setClear(shouldclear);\n\n            case 9:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    return function getData(_x) {\n      return _ref.apply(this, arguments);\n    };\n  }();\n\n  return __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 5\n    }\n  }, __jsx(Head, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 7\n    }\n  }, __jsx(\"link\", {\n    rel: \"stylesheet\",\n    href: \"https://fonts.googleapis.com/icon?family=Material+Icons\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 9\n    }\n  })), __jsx(\"main\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 7\n    }\n  }, __jsx(Appbar, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 9\n    }\n  }), __jsx(Searchbar, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 9\n    }\n  }), __jsx(Addbtn, {\n    returnData: getData,\n    clear: clear,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 9\n    }\n  })));\n}\n\n_s(Home, \"aD/dQ5DCnic08irfcUTiyfyam3E=\");\n\n_c = Home;\n\nvar _c;\n\n$RefreshReg$(_c, \"Home\");","map":{"version":3,"sources":["/Users/salahabdallah/Desktop/Dev/Jargon/pages/main.js"],"names":["Head","Appbar","Searchbar","Addbtn","react","useEffect","useState","firestore","Home","addedword","setWord","clear","setClear","getData","word","console","log","shouldclear","length","isAvailable","collection","doc","get","then","exists","error"],"mappings":";;;;;;;;AAAA,OAAOA,IAAP,MAAiB,WAAjB;AACA,OAAOC,MAAP,MAAmB,sBAAnB;AACA,OAAOC,SAAP,MAAsB,sBAAtB;AACA,OAAOC,MAAP,MAAmB,uBAAnB;AACA,OAAOC,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,SAASC,SAAT,QAA0B,mBAA1B;AAGA,eAAe,SAASC,IAAT,GAAgB;AAAA;;AAAA,kBAEAF,QAAQ,CAAC,EAAD,CAFR;AAAA,MAEtBG,SAFsB;AAAA,MAEXC,OAFW;;AAAA,mBAGHJ,QAAQ,CAAC,KAAD,CAHL;AAAA,MAGtBK,KAHsB;AAAA,MAGfC,QAHe;;AAK7B,MAAMC,OAAO;AAAA,wEAAG,iBAAOC,IAAP;AAAA;;AAAA;AAAA;AAAA;AAAA;AAGdJ,cAAAA,OAAO,CAACI,IAAD,CAAP;AACAC,cAAAA,OAAO,CAACC,GAAR,CAAYF,IAAZ;AACIG,cAAAA,WALU,GAKI,KALJ;;AAAA,oBAQRR,SAAS,CAACS,MAAV,IAAoB,CAApB,GAAwBT,SAAS,CAACK,IAAV,IAAkB,EARlC;AAAA;AAAA;AAAA;;AAUNA,cAAAA,KAVM,GAUCL,SAAS,CAACK,IAVX;AAWNK,cAAAA,WAXM,GAWQ,KAXR;AAAA;AAAA,qBAaLZ,SAAS,CAACa,UAAV,CAAqB,OAArB,EAA8BC,GAA9B,CAAkCP,KAAlC,EAAwCQ,GAAxC,GAA8CC,IAA9C,CAAmD,UAAUF,GAAV,EAAe;AACrE,oBAAIA,GAAG,CAACG,MAAR,EAAgB;AACdL,kBAAAA,WAAW,GAAG,IAAd;AACAP,kBAAAA,QAAQ,CAAC,KAAD,CAAR;AACAG,kBAAAA,OAAO,CAACC,GAAR,CAAYC,WAAZ;AAED,iBALD,MAKK;AACH,sBAAIA,YAAW,GAAG,IAAlB;AAEAF,kBAAAA,OAAO,CAACC,GAAR,CAAYC,YAAZ;AACD;AACF,eAXI,WAWI,UAAUQ,KAAV,EAAiB;AACxBV,gBAAAA,OAAO,CAACC,GAAR,CAAY,yBAAZ,EAAuCS,KAAvC;AACD,eAbI,CAbK;;AAAA;AAkDZb,cAAAA,QAAQ,CAACK,WAAD,CAAR;;AAlDY;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAH;;AAAA,oBAAPJ,OAAO;AAAA;AAAA;AAAA,KAAb;;AA6DA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAM,IAAA,GAAG,EAAC,YAAV;AAAuB,IAAA,IAAI,EAAC,yDAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADF,EAIE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAEE,MAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,EAGE,MAAC,MAAD;AAAQ,IAAA,UAAU,EAAEA,OAApB;AAA6B,IAAA,KAAK,EAAIF,KAAtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAHF,CAJF,CADF;AAYD;;GA9EuBH,I;;KAAAA,I","sourcesContent":["import Head from 'next/head'\nimport Appbar from '../components/appbar'\nimport Searchbar from '../components/search'\nimport Addbtn from '../components/addword'\nimport react, { useEffect, useState } from 'react'\nimport { firestore } from \"../utils/firebase\"\n\n\nexport default function Home() {\n\n  const [addedword, setWord] = useState([])\n  const [clear, setClear] = useState(false)\n\n  const getData = async (word) => {\n\n\n    setWord(word)\n    console.log(word)\n    let shouldclear = false;\n\n\n      if (addedword.length != 0 & addedword.word != \"\") {\n\n        let word = addedword.word\n        let isAvailable = false\n    \n       await firestore.collection(\"words\").doc(word).get().then(function (doc) {\n          if (doc.exists) {\n            isAvailable = true\n            setClear(false)\n            console.log(shouldclear)\n            \n          }else{\n            let shouldclear = true;\n            \n            console.log(shouldclear)\n          }\n        }).catch(function (error) {\n          console.log(\"Error getting document:\", error);\n        }); \n\n        \n/*\n        if (isAvailable == false) {\n\n          await firestore.collection(\"words\").doc(word).set({\n            definition: addedword.definition,\n            industry: \"Construction\",\n            sub_industry: \"Construction\",\n            user: \"Salah\",\n            word: addedword.word\n          })\n            .then(function () {\n              console.log(\"Document successfully written!\");\n              \n\n            })\n            .catch(function (error) {\n              console.error(\"Error writing document: \", error);\n            })\n        }*/\n      }\n\n      setClear(shouldclear)\n    }\n\n\n  \n\n\n  \n\n\n\n  return (\n    <div>\n      <Head>\n        <link rel=\"stylesheet\" href=\"https://fonts.googleapis.com/icon?family=Material+Icons\" />\n      </Head>\n      <main>\n        <Appbar></Appbar>\n        <Searchbar></Searchbar>\n        <Addbtn returnData={getData} clear = {clear} ></Addbtn>\n      </main>\n    </div>\n  )\n}"]},"metadata":{},"sourceType":"module"}