{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\n\nvar _jsxFileName = \"/Users/salahabdallah/Desktop/Dev/Jargon/pages/main.js\",\n    _s2 = $RefreshSig$();\n\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport Head from 'next/head';\nimport Appbar from '../components/appbar';\nimport Searchbar from '../components/search';\nimport Addbtn from '../components/addword';\nimport react, { useEffect, useState } from 'react';\nimport { firestore } from \"../utils/firebase\";\nexport default function Home() {\n  _s2();\n\n  var _s = $RefreshSig$();\n\n  var _useState = useState([]),\n      addedword = _useState[0],\n      setWord = _useState[1];\n\n  var getData = /*#__PURE__*/function () {\n    var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(word) {\n      var clear;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              clear = false;\n              setClear(clear);\n              setWord(word);\n\n            case 3:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    return function getData(_x) {\n      return _ref.apply(this, arguments);\n    };\n  }();\n\n  useEffect(_s(function () {\n    _s();\n\n    var _useState2 = useState(false),\n        clear = _useState2[0],\n        setClear = _useState2[1];\n\n    function sendtofb() {\n      return _sendtofb.apply(this, arguments);\n    }\n\n    function _sendtofb() {\n      _sendtofb = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2() {\n        var word, isAvailable;\n        return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                if (addedword.length != 0 & addedword.word != \"\") {\n                  word = addedword.word;\n                  isAvailable = false;\n                  console.log(word);\n\n                  if (word == 'a' || word == 'b') {\n                    setClear(shouldclear); //console.log(shouldclear)\n                  } else {\n                    shouldclear = true; //console.log(shouldclear)\n                  }\n                  /*\n                    await firestore.collection(\"words\").doc(word).get().then(function (doc) {\n                       if (doc.exists) {\n                         isAvailable = true\n                         setClear(false)\n                         \n                         \n                       }else{\n                         let shouldclear = true;\n                         \n                         console.log(shouldclear)\n                       }\n                     }).catch(function (error) {\n                       console.log(\"Error getting document:\", error);\n                     }); */\n\n                  /*\n                          if (isAvailable == false) {\n                  \n                            await firestore.collection(\"words\").doc(word).set({\n                              definition: addedword.definition,\n                              industry: \"Construction\",\n                              sub_industry: \"Construction\",\n                              user: \"Salah\",\n                              word: addedword.word\n                            })\n                              .then(function () {\n                                console.log(\"Document successfully written!\");\n                                \n                  \n                              })\n                              .catch(function (error) {\n                                console.error(\"Error writing document: \", error);\n                              })\n                          }*/\n\n                }\n\n              case 1:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2);\n      }));\n      return _sendtofb.apply(this, arguments);\n    }\n\n    sendtofb();\n    setClear(shouldclear);\n    setWord('');\n  }, \"MW1its+XWzP7Eplr86vYJmRNcW8=\"), [addedword]);\n  return __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 5\n    }\n  }, __jsx(Head, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 7\n    }\n  }, __jsx(\"link\", {\n    rel: \"stylesheet\",\n    href: \"https://fonts.googleapis.com/icon?family=Material+Icons\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 9\n    }\n  })), __jsx(\"main\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 7\n    }\n  }, __jsx(Appbar, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 9\n    }\n  }), __jsx(Searchbar, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 9\n    }\n  }), __jsx(Addbtn, {\n    returnData: getData,\n    clear: clear,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 9\n    }\n  })));\n}\n\n_s2(Home, \"ioY91aZQil0Ixq9Clm3oYSR/hkU=\");\n\n_c = Home;\n\nvar _c;\n\n$RefreshReg$(_c, \"Home\");","map":{"version":3,"sources":["/Users/salahabdallah/Desktop/Dev/Jargon/pages/main.js"],"names":["Head","Appbar","Searchbar","Addbtn","react","useEffect","useState","firestore","Home","addedword","setWord","getData","word","clear","setClear","sendtofb","length","isAvailable","console","log","shouldclear"],"mappings":";;;;;;;;AAAA,OAAOA,IAAP,MAAiB,WAAjB;AACA,OAAOC,MAAP,MAAmB,sBAAnB;AACA,OAAOC,SAAP,MAAsB,sBAAtB;AACA,OAAOC,MAAP,MAAmB,uBAAnB;AACA,OAAOC,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,SAASC,SAAT,QAA0B,mBAA1B;AAGA,eAAe,SAASC,IAAT,GAAgB;AAAA;;AAAA;;AAAA,kBAEAF,QAAQ,CAAC,EAAD,CAFR;AAAA,MAEtBG,SAFsB;AAAA,MAEXC,OAFW;;AAK7B,MAAMC,OAAO;AAAA,wEAAG,iBAAOC,IAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAEVC,cAAAA,KAFU,GAED,KAFC;AAGdC,cAAAA,QAAQ,CAACD,KAAD,CAAR;AACAH,cAAAA,OAAO,CAACE,IAAD,CAAP;;AAJc;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAH;;AAAA,oBAAPD,OAAO;AAAA;AAAA;AAAA,KAAb;;AAQAN,EAAAA,SAAS,IAAC,YAAM;AAAA;;AAAA,qBAEYC,QAAQ,CAAC,KAAD,CAFpB;AAAA,QAEPO,KAFO;AAAA,QAEAC,QAFA;;AAAA,aAICC,QAJD;AAAA;AAAA;;AAAA;AAAA,2EAId;AAAA;AAAA;AAAA;AAAA;AAAA;AAEE,oBAAIN,SAAS,CAACO,MAAV,IAAoB,CAApB,GAAwBP,SAAS,CAACG,IAAV,IAAkB,EAA9C,EAAkD;AAE5CA,kBAAAA,IAF4C,GAErCH,SAAS,CAACG,IAF2B;AAG5CK,kBAAAA,WAH4C,GAG9B,KAH8B;AAKhDC,kBAAAA,OAAO,CAACC,GAAR,CAAYP,IAAZ;;AACA,sBAAIA,IAAI,IAAI,GAAR,IAAcA,IAAI,IAAI,GAA1B,EAA8B;AAC5BE,oBAAAA,QAAQ,CAACM,WAAD,CAAR,CAD4B,CAE5B;AACD,mBAHD,MAGK;AACFA,oBAAAA,WAAW,GAAG,IAAd,CADE,CAEF;AACF;AAEJ;;;;;;;;;;;;;;;;AAiBL;;;;;;;;;;;;;;;;;;;;AAmBO;;AApDH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAJc;AAAA;AAAA;;AA2DdL,IAAAA,QAAQ;AACRD,IAAAA,QAAQ,CAACM,WAAD,CAAR;AACAV,IAAAA,OAAO,CAAC,EAAD,CAAP;AAKD,GAlEQ,mCAkEN,CAACD,SAAD,CAlEM,CAAT;AAsEA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAM,IAAA,GAAG,EAAC,YAAV;AAAuB,IAAA,IAAI,EAAC,yDAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADF,EAIE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAEE,MAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,EAGE,MAAC,MAAD;AAAQ,IAAA,UAAU,EAAEE,OAApB;AAA6B,IAAA,KAAK,EAAIE,KAAtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAHF,CAJF,CADF;AAYD;;IA/FuBL,I;;KAAAA,I","sourcesContent":["import Head from 'next/head'\nimport Appbar from '../components/appbar'\nimport Searchbar from '../components/search'\nimport Addbtn from '../components/addword'\nimport react, { useEffect, useState } from 'react'\nimport { firestore } from \"../utils/firebase\"\n\n\nexport default function Home() {\n\n  const [addedword, setWord] = useState([])\n  \n\n  const getData = async (word) => {\n\n    var clear  = false\n    setClear(clear)\n    setWord(word)\n\n  }\n\n  useEffect(() => {\n\n    const [clear, setClear] = useState(false)\n\n    async function sendtofb() {\n\n      if (addedword.length != 0 & addedword.word != \"\") {\n\n        let word = addedword.word\n        let isAvailable = false\n\n        console.log(word)\n        if (word == 'a'|| word == 'b'){\n          setClear(shouldclear)\n          //console.log(shouldclear)\n        }else{\n           shouldclear = true;\n           //console.log(shouldclear)\n        }\n    \n     /*\n       await firestore.collection(\"words\").doc(word).get().then(function (doc) {\n          if (doc.exists) {\n            isAvailable = true\n            setClear(false)\n            \n            \n          }else{\n            let shouldclear = true;\n            \n            console.log(shouldclear)\n          }\n        }).catch(function (error) {\n          console.log(\"Error getting document:\", error);\n        }); */\n\n        \n/*\n        if (isAvailable == false) {\n\n          await firestore.collection(\"words\").doc(word).set({\n            definition: addedword.definition,\n            industry: \"Construction\",\n            sub_industry: \"Construction\",\n            user: \"Salah\",\n            word: addedword.word\n          })\n            .then(function () {\n              console.log(\"Document successfully written!\");\n              \n\n            })\n            .catch(function (error) {\n              console.error(\"Error writing document: \", error);\n            })\n        }*/\n      }\n    }\n\n    sendtofb();\n    setClear(shouldclear)\n    setWord('')\n   \n\n  \n  \n  }, [addedword]);\n\n\n\n  return (\n    <div>\n      <Head>\n        <link rel=\"stylesheet\" href=\"https://fonts.googleapis.com/icon?family=Material+Icons\" />\n      </Head>\n      <main>\n        <Appbar></Appbar>\n        <Searchbar></Searchbar>\n        <Addbtn returnData={getData} clear = {clear} ></Addbtn>\n      </main>\n    </div>\n  )\n}"]},"metadata":{},"sourceType":"module"}