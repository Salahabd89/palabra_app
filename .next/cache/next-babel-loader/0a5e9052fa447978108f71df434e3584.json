{"ast":null,"code":"import React from \"react\";\nvar __jsx = React.createElement;\nimport { useState } from 'react';\nimport Appbar from '../components/appbar';\nimport Terms from '../components/console_terms';\nimport { Typography } from '@material-ui/core';\nimport Button from '@material-ui/core/Button';\nimport axios from 'axios';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport FormHelperText from '@material-ui/core/FormHelperText';\nimport FormControl from '@material-ui/core/FormControl';\nimport Select from '@material-ui/core/Select';\nimport { makeStyles } from '@material-ui/core/styles';\n\nconst handleChange = event => {};\n\nconst useStyles = makeStyles(theme => ({\n  formControl: {\n    margin: theme.spacing(1),\n    minWidth: 120\n  },\n  selectEmpty: {\n    marginTop: theme.spacing(2)\n  },\n  select: {\n    width: '100%'\n  }\n}));\nexport default function Console(team) {\n  const styles = useStyles();\n  let teamCol = team.team.team;\n  return __jsx(\"div\", null, \"team \", __jsx(Select, {\n    styles: styles.formControl,\n    labelId: \"demo-simple-select-filled-label\",\n    id: \"demo-simple-select-filled\",\n    onChange: handleChange\n  }, teamCol.map((team, i) => {\n    return __jsx(MenuItem, {\n      value: i\n    }, team.teams.team_name);\n  })), __jsx(Terms, null));\n}\n\nconst fetchData = async (query, auth) => await axios.get(`http://localhost:5050/api/console/${query.def}`, {\n  headers: {\n    auth: auth\n  }\n}).then(res => ({\n  team: res.data\n})).catch(() => ({\n  error: true\n}));\n\nexport async function getServerSideProps(context) {\n  let cookie = context.req.headers.cookie;\n  let auth = cookie.split('; ').find(row => row.startsWith('auth')).split('=')[1];\n  const teams = await fetchData(context.query, auth);\n  return {\n    props: {\n      team: teams\n    }\n  };\n}","map":{"version":3,"sources":["/Users/salahabdallah/Desktop/Dev/Jargon/pages/console.js"],"names":["useState","Appbar","Terms","Typography","Button","axios","InputLabel","MenuItem","FormHelperText","FormControl","Select","makeStyles","handleChange","event","useStyles","theme","formControl","margin","spacing","minWidth","selectEmpty","marginTop","select","width","Console","team","styles","teamCol","map","i","teams","team_name","fetchData","query","auth","get","def","headers","then","res","data","catch","error","getServerSideProps","context","cookie","req","split","find","row","startsWith","props"],"mappings":";;AAAA,SAASA,QAAT,QAAyB,OAAzB;AACA,OAAOC,MAAP,MAAmB,sBAAnB;AACA,OAAOC,KAAP,MAAkB,6BAAlB;AACA,SAASC,UAAT,QAA2B,mBAA3B;AACA,OAAOC,MAAP,MAAmB,0BAAnB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,UAAP,MAAuB,8BAAvB;AACA,OAAOC,QAAP,MAAqB,4BAArB;AACA,OAAOC,cAAP,MAA2B,kCAA3B;AACA,OAAOC,WAAP,MAAwB,+BAAxB;AACA,OAAOC,MAAP,MAAmB,0BAAnB;AACA,SAASC,UAAT,QAA2B,0BAA3B;;AAGA,MAAMC,YAAY,GAAIC,KAAD,IAAW,CAE7B,CAFH;;AAIE,MAAMC,SAAS,GAAGH,UAAU,CAAEI,KAAD,KAAY;AACvCC,EAAAA,WAAW,EAAE;AACXC,IAAAA,MAAM,EAAEF,KAAK,CAACG,OAAN,CAAc,CAAd,CADG;AAEXC,IAAAA,QAAQ,EAAE;AAFC,GAD0B;AAKvCC,EAAAA,WAAW,EAAE;AACXC,IAAAA,SAAS,EAAEN,KAAK,CAACG,OAAN,CAAc,CAAd;AADA,GAL0B;AAQvCI,EAAAA,MAAM,EAAC;AACHC,IAAAA,KAAK,EAAC;AADH;AARgC,CAAZ,CAAD,CAA5B;AAcF,eAAe,SAASC,OAAT,CAAiBC,IAAjB,EAAuB;AAElC,QAAMC,MAAM,GAAKZ,SAAS,EAA1B;AAEA,MAAIa,OAAO,GAAGF,IAAI,CAACA,IAAL,CAAUA,IAAxB;AACA,SACI,4BACQ,MAAC,MAAD;AAAQ,IAAA,MAAM,EAAEC,MAAM,CAACV,WAAvB;AACA,IAAA,OAAO,EAAC,iCADR;AAEA,IAAA,EAAE,EAAC,2BAFH;AAGA,IAAA,QAAQ,EAAEJ;AAHV,KAKCe,OAAO,CAACC,GAAR,CAAY,CAACH,IAAD,EAAOI,CAAP,KAAW;AACxB,WAAO,MAAC,QAAD;AAAU,MAAA,KAAK,EAAEA;AAAjB,OAAqBJ,IAAI,CAACK,KAAL,CAAWC,SAAhC,CAAP;AACC,GAFA,CALD,CADR,EAUI,MAAC,KAAD,OAVJ,CADJ;AAcH;;AAED,MAAMC,SAAS,GAAG,OAAOC,KAAP,EAAcC,IAAd,KAAuB,MAAM7B,KAAK,CAAC8B,GAAN,CAAW,qCAAoCF,KAAK,CAACG,GAAI,EAAzD,EAA4D;AAAEC,EAAAA,OAAO,EAAE;AAAEH,IAAAA,IAAI,EAAEA;AAAR;AAAX,CAA5D,EAC1CI,IAD0C,CACrCC,GAAG,KAAK;AACVd,EAAAA,IAAI,EAAEc,GAAG,CAACC;AADA,CAAL,CADkC,EAI1CC,KAJ0C,CAIpC,OAAO;AACVC,EAAAA,KAAK,EAAE;AADG,CAAP,CAJoC,CAA/C;;AASA,OAAO,eAAeC,kBAAf,CAAkCC,OAAlC,EAA2C;AAE9C,MAAIC,MAAM,GAAGD,OAAO,CAACE,GAAR,CAAYT,OAAZ,CAAoBQ,MAAjC;AAEA,MAAIX,IAAI,GAAGW,MAAM,CAACE,KAAP,CAAa,IAAb,EACNC,IADM,CACDC,GAAG,IAAIA,GAAG,CAACC,UAAJ,CAAe,MAAf,CADN,EAENH,KAFM,CAEA,GAFA,EAEK,CAFL,CAAX;AAIA,QAAMjB,KAAK,GAAG,MAAME,SAAS,CAACY,OAAO,CAACX,KAAT,EAAgBC,IAAhB,CAA7B;AAEA,SAAO;AACHiB,IAAAA,KAAK,EAAE;AACH1B,MAAAA,IAAI,EAAEK;AADH;AADJ,GAAP;AAMH","sourcesContent":["import { useState } from 'react'\nimport Appbar from '../components/appbar'\nimport Terms from '../components/console_terms'\nimport { Typography } from '@material-ui/core';\nimport Button from '@material-ui/core/Button';\nimport axios from 'axios';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport FormHelperText from '@material-ui/core/FormHelperText';\nimport FormControl from '@material-ui/core/FormControl';\nimport Select from '@material-ui/core/Select';\nimport { makeStyles } from '@material-ui/core/styles';\n\n\nconst handleChange = (event) => {\n\n  };\n\n  const useStyles = makeStyles((theme) => ({\n    formControl: {\n      margin: theme.spacing(1),\n      minWidth: 120,\n    },\n    selectEmpty: {\n      marginTop: theme.spacing(2),\n    },\n    select:{\n        width:'100%'\n    }\n  }));\n\n\nexport default function Console(team) {\n\n    const styles  =  useStyles()\n\n    let teamCol = team.team.team\n    return (\n        <div>\n           team <Select styles={styles.formControl}\n                labelId=\"demo-simple-select-filled-label\"\n                id=\"demo-simple-select-filled\"  \n                onChange={handleChange}\n            >\n               { teamCol.map((team, i)=>{\n                return <MenuItem value={i}>{team.teams.team_name}</MenuItem>\n                })}\n            </Select>\n            <Terms></Terms>\n        </div>\n    )\n}\n\nconst fetchData = async (query, auth) => await axios.get(`http://localhost:5050/api/console/${query.def}`, { headers: { auth: auth } })\n    .then(res => ({\n        team: res.data\n    }))\n    .catch(() => ({\n        error: true\n    }),\n    );\n\nexport async function getServerSideProps(context) {\n\n    let cookie = context.req.headers.cookie\n\n    let auth = cookie.split('; ')\n        .find(row => row.startsWith('auth'))\n        .split('=')[1]\n\n    const teams = await fetchData(context.query, auth);\n\n    return {\n        props: {\n            team: teams\n        }\n    }\n\n}"]},"metadata":{},"sourceType":"module"}