{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\n\nvar _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { useState, useEffect } from 'react';\nimport Button from '@material-ui/core/Button';\nimport { green } from '@material-ui/core/colors';\nimport Icon from '@material-ui/core/Icon';\nimport { fade, makeStyles } from '@material-ui/core/styles';\nimport Modal from '@material-ui/core/Modal';\nimport Backdrop from '@material-ui/core/Backdrop';\nimport Fade from '@material-ui/core/Fade';\nimport TextField from '@material-ui/core/TextField';\nvar useStyles = makeStyles(function (theme) {\n  return {\n    root: _defineProperty({\n      marginTop: '0%',\n      marginLeft: '0%'\n    }, \"marginLeft\", '50%'),\n    wordtxt: {\n      \"float\": 'top',\n      marginLeft: '10%',\n      display: 'flex'\n    },\n    modal: {\n      display: 'flex',\n      alignItems: 'center',\n      justifyContent: 'center',\n      padding: '0',\n      margin: 0\n    },\n    paper: {\n      backgroundColor: theme.palette.background.paper,\n      width: '50%',\n      height: '50%'\n    },\n    btn: _defineProperty({\n      position: 'relative',\n      borderRadius: theme.shape.borderRadius,\n      backgroundColor: fade(theme.palette.common.white, 0.15),\n      '&:hover': {\n        backgroundColor: fade(theme.palette.common.white, 0.25)\n      },\n      width: '100%',\n      justifyContent: 'center'\n    }, theme.breakpoints.up('sm'), {\n      marginLeft: theme.spacing(3),\n      width: 'auto'\n    })\n  };\n});\nexport default function addwordform(props) {\n  _s();\n\n  var classes = useStyles();\n\n  var _useState = useState(false),\n      open = _useState[0],\n      setOpen = _useState[1];\n\n  var _useState2 = useState({\n    word: \"\",\n    definition: \"\"\n  }),\n      all = _useState2[0],\n      setAll = _useState2[1];\n\n  var _useState3 = useState(props.clear),\n      clearText = _useState3[0],\n      setClear = _useState3[1];\n\n  var sendWord = function sendWord(e) {\n    e.preventDefault();\n    props.returnData(all);\n  };\n\n  useEffect(function () {\n    if (props.clear == true) {\n      clear();\n    }\n  }, [props.clear]);\n\n  function clear() {\n    setAll({\n      word: \"\",\n      definition: \"\"\n    });\n  }\n\n  var handleClose = function handleClose() {\n    setOpen(false);\n  };\n\n  return __jsx(\"div\", null, __jsx(TextField, {\n    id: \"standard-basic\",\n    name: \"word\",\n    value: all.word,\n    onChange: function onChange(e) {\n      return setAll(_objectSpread(_objectSpread({}, all), {}, _defineProperty({}, event.target.name, event.target.value)));\n    },\n    label: \"Word\"\n  }), __jsx(\"br\", null), __jsx(TextField, {\n    id: \"standard-basic\",\n    name: \"definition\",\n    value: all.definition,\n    onChange: function onChange(e) {\n      return setAll(_objectSpread(_objectSpread({}, all), {}, _defineProperty({}, event.target.name, event.target.value)));\n    },\n    multiline: true,\n    rows: 10,\n    label: \"Definition\"\n  }), __jsx(\"br\", null), __jsx(Button, {\n    className: classes.btn,\n    onClick: sendWord\n  }, \"Add\"));\n}\n\n_s(addwordform, \"uwEQWwO/zxmRChYE8rKtjHJggOI=\", false, function () {\n  return [useStyles];\n});","map":{"version":3,"sources":["/Users/salahabdallah/Desktop/Dev/Jargon/components/add.js"],"names":["React","useState","useEffect","Button","green","Icon","fade","makeStyles","Modal","Backdrop","Fade","TextField","useStyles","theme","root","marginTop","marginLeft","wordtxt","display","modal","alignItems","justifyContent","padding","margin","paper","backgroundColor","palette","background","width","height","btn","position","borderRadius","shape","common","white","breakpoints","up","spacing","addwordform","props","classes","open","setOpen","word","definition","all","setAll","clear","clearText","setClear","sendWord","e","preventDefault","returnData","handleClose","event","target","name","value"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport Button from '@material-ui/core/Button';\nimport { green } from '@material-ui/core/colors';\nimport Icon from '@material-ui/core/Icon';\nimport { fade, makeStyles } from '@material-ui/core/styles';\nimport Modal from '@material-ui/core/Modal';\nimport Backdrop from '@material-ui/core/Backdrop';\nimport Fade from '@material-ui/core/Fade';\nimport TextField from '@material-ui/core/TextField';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    marginTop: '0%',\n    marginLeft: '0%',\n    marginLeft: '50%'\n  },\n  wordtxt: {\n    float: 'top',\n    marginLeft: '10%',\n    display: 'flex'\n  },\n  modal: {\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'center',\n    padding: '0',\n    margin: 0\n  },\n\n  paper: {\n    backgroundColor: theme.palette.background.paper,\n    width: '50%',\n    height: '50%'\n  },\n  btn: {\n\n    position: 'relative',\n    borderRadius: theme.shape.borderRadius,\n    backgroundColor: fade(theme.palette.common.white, 0.15),\n    '&:hover': {\n      backgroundColor: fade(theme.palette.common.white, 0.25),\n    },\n    width: '100%',\n    justifyContent: 'center',\n    [theme.breakpoints.up('sm')]: {\n      marginLeft: theme.spacing(3),\n      width: 'auto',\n    },\n  }\n\n}));\n\nexport default function addwordform(props) {\n\n  const classes = useStyles();\n  const [open, setOpen] = useState(false);\n  const [all, setAll] = useState({ word: \"\", definition: \"\" });\n  const [clearText, setClear] = useState(props.clear)\n\n\n\n  const sendWord = (e) => {\n\n    e.preventDefault();\n \n    props.returnData(all);\n\n  }\n\n\n  useEffect(() => {\n\n    if(props.clear == true){\n      clear()\n    }\n\n  },[props.clear])\n\n  function clear(){\n\n    setAll({ word: \"\", definition: \"\" });\n  }\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n  \n  return (\n    <div>\n                      <TextField id=\"standard-basic\"  name=\"word\" value = {all.word}  onChange={e => setAll({...all, [event.target.name]: event.target.value})} label=\"Word\" />\n                <br />\n                <TextField id=\"standard-basic\" name=\"definition\" value = {all.definition} onChange={e => setAll({...all, [event.target.name]: event.target.value})} multiline rows={10} label=\"Definition\" />\n                <br />\n                <Button className={classes.btn} onClick={sendWord}  >\n                  Add\n                </Button>\n    </div>\n  );\n}"]},"metadata":{},"sourceType":"module"}