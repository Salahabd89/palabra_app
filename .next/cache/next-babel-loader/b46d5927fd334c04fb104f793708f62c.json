{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nvar __jsx = React.createElement;\nimport React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Paper from '@material-ui/core/Paper';\nimport Tabs from '@material-ui/core/Tabs';\nimport Tab from '@material-ui/core/Tab';\nimport Box from '@material-ui/core/Box';\nimport { Typography } from '@material-ui/core';\nvar useStyles = makeStyles({\n  root: {\n    flexGrow: 1\n  }\n});\nvar ITEM_HEIGHT = 48;\nvar ITEM_PADDING_TOP = 8;\nvar MenuProps = {\n  PaperProps: {\n    style: {\n      maxHeight: ITEM_HEIGHT * 4.5 + ITEM_PADDING_TOP,\n      width: 250\n    }\n  }\n};\n\nfunction TabPanel(props) {\n  var children = props.children,\n      value = props.value,\n      index = props.index,\n      other = _objectWithoutProperties(props, [\"children\", \"value\", \"index\"]);\n\n  return __jsx(\"div\", _extends({\n    role: \"tabpanel\",\n    hidden: value !== index,\n    id: \"full-width-tabpanel-\".concat(index),\n    \"aria-labelledby\": \"full-width-tab-\".concat(index)\n  }, other), value === index && __jsx(Box, {\n    p: 3\n  }, __jsx(Typography, null, children)));\n}\n\nexport default function UserProfile(props) {\n  var classes = useStyles();\n\n  var _React$useState = React.useState(0),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      value = _React$useState2[0],\n      setValue = _React$useState2[1];\n\n  var handleTabChange = function handleTabChange(event, newValue) {\n    setValue(newValue);\n  };\n\n  var handleChangeIndex = function handleChangeIndex(index) {\n    setValue(index);\n  };\n\n  function a11yProps(index) {\n    return {\n      id: \"full-width-tab-\".concat(index),\n      'aria-controls': \"full-width-tabpanel-\".concat(index)\n    };\n  }\n\n  return __jsx(\"div\", null, __jsx(Tabs, {\n    value: value,\n    onChange: handleTabChange,\n    indicatorColor: \"primary\",\n    textColor: \"primary\",\n    variant: \"fullWidth\",\n    \"aria-label\": \"full width tabs example\"\n  }, __jsx(Tab, _extends({\n    label: \"Profile\"\n  }, a11yProps(0))), __jsx(Tab, _extends({\n    label: \"Teams\"\n  }, a11yProps(1))), __jsx(Tab, _extends({\n    label: \"Settings\"\n  }, a11yProps(1)))), __jsx(TabPanel, {\n    value: value,\n    index: 0\n  }, __jsx(Typography, null, console.log(props))), __jsx(TabPanel, {\n    value: value,\n    index: 1\n  }));\n}","map":null,"metadata":{},"sourceType":"module"}