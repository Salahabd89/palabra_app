{"ast":null,"code":"var __jsx = React.createElement;\nimport React, { useState, useEffect } from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport AppBar from \"@material-ui/core/AppBar\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Button from \"@material-ui/core/Button\";\nimport Link from \"@material-ui/core/Link\";\nimport Select from \"@material-ui/core/Select\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport { useSelector } from \"react-redux\";\nconst useStyles = makeStyles(theme => ({\n  root: {\n    flexGrow: 1\n  },\n  appBar: {\n    top: \"0px\",\n    left: \"0px\",\n    background: \"#202020\",\n    border: \"1px solid #707070\",\n    opacity: \"1\",\n    position: \"static\"\n  },\n  rightside: {\n    flexGrow: 1,\n    marginRight: theme.spacing(1),\n    primary: {\n      main: \"white\"\n    }\n  },\n  leftside: {\n    marginLeft: theme.spacing(2)\n  },\n  menuButton: {\n    marginRight: theme.spacing(2)\n  },\n  title: {\n    flexGrow: 1\n  }\n}));\nexport default function ButtonAppBar(props) {\n  const classes = useStyles();\n  const {\n    0: loggedInUser,\n    1: setLoggedInUser\n  } = useState(null);\n  const {\n    0: avialableTeams,\n    1: setTeams\n  } = useState([]);\n  const {\n    0: loggedIn,\n    1: setLoggedIn\n  } = useState(false);\n\n  const loggedInStatus = () => {\n    setLoggedInUser(null);\n    props.logout(true);\n  };\n\n  const userdata = useSelector(state => state);\n\n  const handleChange = () => {};\n\n  const renderMenuItems = () => {\n    if (avialableTeams.length != 0) {}\n  };\n\n  useEffect(() => {\n    let displayName = localStorage.getItem(\"displayName\");\n    let teams = localStorage.getItem(\"teams\");\n    let teamList = JSON.parse(teams);\n    setLoggedInUser(displayName);\n    setTeams(teamList);\n    setLoggedIn(props.loggedInState);\n  }, []);\n  return __jsx(\"div\", {\n    className: classes.root\n  }, __jsx(AppBar, {\n    className: classes.appBar\n  }, __jsx(Toolbar, null, __jsx(Typography, {\n    className: classes.rightside\n  }, __jsx(Link, {\n    style: {\n      textDecoration: \"none\",\n      color: \"white\"\n    },\n    underline: \"none\",\n    href: \"./\"\n  }, \"Palabra\")), props.loggedInState == false ? __jsx(Typography, null, __jsx(Link, {\n    className: classes.leftside,\n    style: {\n      textDecoration: \"none\",\n      color: \"white\"\n    },\n    underline: \"none\",\n    href: \"../login\"\n  }, \"Login\"), __jsx(Link, {\n    className: classes.leftside,\n    style: {\n      textDecoration: \"none\",\n      color: \"white\"\n    },\n    underline: \"none\",\n    href: \"../signup\"\n  }, \"Sign Up\")) : __jsx(React.Fragment, null, __jsx(Select, {\n    style: {\n      background: \"white\",\n      width: \"50%\"\n    },\n    variant: \"outlined\",\n    onChange: handleChange\n  }, avialableTeams.map(teams => {\n    return __jsx(MenuItem, {\n      selected: true,\n      style: {\n        backgroundColor: \"white\"\n      },\n      value: teams\n    }, teams);\n  })), __jsx(Button, {\n    href: \"../userprofile\",\n    color: \"inherit\"\n  }, props.user), __jsx(Button, {\n    href: \"../console\",\n    color: \"inherit\"\n  }, \"Console\"), __jsx(Button, {\n    color: \"inherit\",\n    onClick: loggedInStatus\n  }, \"Logout\")))));\n}\n/*         {teamMenu(teamCol)}*/","map":{"version":3,"sources":["/Users/salahabdallah/Desktop/Dev/Jargon/components/appbar.js"],"names":["React","useState","useEffect","makeStyles","AppBar","Toolbar","Typography","Button","Link","Select","MenuItem","useSelector","useStyles","theme","root","flexGrow","appBar","top","left","background","border","opacity","position","rightside","marginRight","spacing","primary","main","leftside","marginLeft","menuButton","title","ButtonAppBar","props","classes","loggedInUser","setLoggedInUser","avialableTeams","setTeams","loggedIn","setLoggedIn","loggedInStatus","logout","userdata","state","handleChange","renderMenuItems","length","displayName","localStorage","getItem","teams","teamList","JSON","parse","loggedInState","textDecoration","color","width","map","backgroundColor","user"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport AppBar from \"@material-ui/core/AppBar\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Button from \"@material-ui/core/Button\";\nimport Link from \"@material-ui/core/Link\";\nimport Select from \"@material-ui/core/Select\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport { useSelector } from \"react-redux\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    flexGrow: 1,\n  },\n  appBar: {\n    top: \"0px\",\n    left: \"0px\",\n    background: \"#202020\",\n    border: \"1px solid #707070\",\n    opacity: \"1\",\n    position: \"static\",\n  },\n  rightside: {\n    flexGrow: 1,\n    marginRight: theme.spacing(1),\n    primary: {\n      main: \"white\",\n    },\n  },\n  leftside: {\n    marginLeft: theme.spacing(2),\n  },\n\n  menuButton: {\n    marginRight: theme.spacing(2),\n  },\n  title: {\n    flexGrow: 1,\n  },\n}));\n\nexport default function ButtonAppBar(props) {\n  const classes = useStyles();\n\n  const [loggedInUser, setLoggedInUser] = useState(null);\n  const [avialableTeams, setTeams] = useState([]);\n  const [loggedIn, setLoggedIn] = useState(false);\n\n  const loggedInStatus = () => {\n    setLoggedInUser(null);\n\n    props.logout(true);\n  };\n\n  const userdata = useSelector((state) => state);\n\n  const handleChange = () => {};\n\n  const renderMenuItems = () => {\n    if (avialableTeams.length != 0) {\n    }\n  };\n\n  useEffect(() => {\n    let displayName = localStorage.getItem(\"displayName\");\n    let teams = localStorage.getItem(\"teams\");\n    let teamList = JSON.parse(teams);\n\n    setLoggedInUser(displayName);\n    setTeams(teamList);\n    setLoggedIn(props.loggedInState);\n  }, []);\n\n  return (\n    <div className={classes.root}>\n      <AppBar className={classes.appBar}>\n        <Toolbar>\n          <Typography className={classes.rightside}>\n            <Link\n              style={{ textDecoration: \"none\", color: \"white\" }}\n              underline=\"none\"\n              href=\"./\"\n            >\n              Palabra\n            </Link>\n          </Typography>\n\n          {props.loggedInState == false ? (\n            <Typography>\n              <Link\n                className={classes.leftside}\n                style={{ textDecoration: \"none\", color: \"white\" }}\n                underline=\"none\"\n                href=\"../login\"\n              >\n                Login\n              </Link>\n              <Link\n                className={classes.leftside}\n                style={{ textDecoration: \"none\", color: \"white\" }}\n                underline=\"none\"\n                href=\"../signup\"\n              >\n                Sign Up\n              </Link>\n            </Typography>\n          ) : (\n            <>\n              <Select\n                style={{ background: \"white\", width: \"50%\" }}\n                variant={\"outlined\"}\n                onChange={handleChange}\n              >\n                {avialableTeams.map((teams) => {\n                  return (\n                    <MenuItem\n                      selected\n                      style={{ backgroundColor: \"white\" }}\n                      value={teams}\n                    >\n                      {teams}\n                    </MenuItem>\n                  );\n                })}\n              </Select>\n              <Button href=\"../userprofile\" color=\"inherit\">\n                {props.user}\n              </Button>\n              <Button href=\"../console\" color=\"inherit\">\n                {\"Console\"}\n              </Button>\n              <Button color=\"inherit\" onClick={loggedInStatus}>\n                Logout\n              </Button>\n            </>\n          )}\n        </Toolbar>\n      </AppBar>\n    </div>\n  );\n}\n\n/*         {teamMenu(teamCol)}*/\n"]},"metadata":{},"sourceType":"module"}