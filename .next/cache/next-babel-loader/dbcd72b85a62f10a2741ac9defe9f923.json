{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { UserContext } from '../providers/userProvider';\nimport { useState, useMemo } from 'react';\n\nfunction MyApp(_ref) {\n  _s();\n\n  var Component = _ref.Component,\n      pageProps = _ref.pageProps;\n  var user = useContext(UserContext);\n  return __jsx(UserContext.Provider, {\n    value: user\n  }, __jsx(Component, pageProps), JSON.stringify({\n    user: user\n  }));\n} // Only uncomment this method if you have blocking data requirements for\n// every single page in your application. This disables the ability to\n// perform automatic static optimization, causing every page in your app to\n// be server-side rendered.\n//\n// MyApp.getInitialProps = async (appContext) => {\n//   // calls page's `getInitialProps` and fills `appProps.pageProps`\n//   const appProps = await App.getInitialProps(appContext);\n//\n//   return { ...appProps }\n// }\n\n\n_s(MyApp, \"T/slviYl6xUb2nQaiedYLY1KgOo=\");\n\n_c = MyApp;\nexport default MyApp;\n\nvar _c;\n\n$RefreshReg$(_c, \"MyApp\");","map":{"version":3,"sources":["/Users/salahabdallah/Desktop/Dev/Jargon/pages/_app.js"],"names":["UserContext","useState","useMemo","MyApp","Component","pageProps","user","useContext","JSON","stringify"],"mappings":";;;;AACA,SAAQA,WAAR,QAA0B,2BAA1B;AACA,SAASC,QAAT,EAAmBC,OAAnB,QAAkC,OAAlC;;AAGA,SAASC,KAAT,OAAyC;AAAA;;AAAA,MAAxBC,SAAwB,QAAxBA,SAAwB;AAAA,MAAbC,SAAa,QAAbA,SAAa;AAErC,MAAMC,IAAI,GAAGC,UAAU,CAACP,WAAD,CAAvB;AAGA,SAAO,MAAC,WAAD,CAAa,QAAb;AAAsB,IAAA,KAAK,EAAEM;AAA7B,KAAoC,MAAC,SAAD,EAAeD,SAAf,CAApC,EACCG,IAAI,CAACC,SAAL,CAAe;AAACH,IAAAA,IAAI,EAAJA;AAAD,GAAf,CADD,CAAP;AAGD,C,CAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;GApBOH,K;;KAAAA,K;AAsBP,eAAeA,KAAf","sourcesContent":["\nimport {UserContext} from '../providers/userProvider';\nimport { useState, useMemo } from 'react'\n\n\nfunction MyApp({ Component, pageProps }) {\n\n    const user = useContext(UserContext);\n\n\n    return <UserContext.Provider value={user} ><Component {...pageProps} />\n           {JSON.stringify({user}) }\n           </UserContext.Provider>\n  }\n  \n  // Only uncomment this method if you have blocking data requirements for\n  // every single page in your application. This disables the ability to\n  // perform automatic static optimization, causing every page in your app to\n  // be server-side rendered.\n  //\n  // MyApp.getInitialProps = async (appContext) => {\n  //   // calls page's `getInitialProps` and fills `appProps.pageProps`\n  //   const appProps = await App.getInitialProps(appContext);\n  //\n  //   return { ...appProps }\n  // }\n  \n  export default MyApp"]},"metadata":{},"sourceType":"module"}