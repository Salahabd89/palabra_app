{"ast":null,"code":"import React from \"react\";\nvar __jsx = React.createElement;\nimport Head from 'next/head';\nimport Appbar from '../components/appbar';\nimport Searchbar from '../components/search';\nimport Addbtn from '../components/add';\nimport react, { useEffect, useState } from 'react';\nimport Button from '@material-ui/core/Button';\nimport { firestore } from \"../utils/firebase\";\nimport { fade, makeStyles } from '@material-ui/core/styles';\nconst useStyles = makeStyles(theme => ({\n  btn: {\n    position: 'relative',\n    borderRadius: theme.shape.borderRadius,\n    backgroundColor: fade(theme.palette.common.white, 0.15),\n    '&:hover': {\n      backgroundColor: fade(theme.palette.common.white, 0.25)\n    },\n    width: '100%',\n    justifyContent: 'center',\n    [theme.breakpoints.up('sm')]: {\n      marginLeft: theme.spacing(3),\n      width: 'auto'\n    }\n  }\n}));\nexport default function Home() {\n  const classes = useStyles();\n  const {\n    0: addedword,\n    1: setWord\n  } = useState([]);\n  const {\n    0: clear,\n    1: setClear\n  } = useState(false);\n\n  const getData = async word => {\n    setWord(word);\n  };\n\n  useEffect(() => {\n    let shouldclear = false;\n\n    async function sendtofb() {\n      if (addedword.length != 0 & addedword.word != \"\") {\n        let word = addedword.word;\n        let isAvailable = false;\n\n        if (word == 'a' || word == 'b') {\n          setClear(false); //console.log(shouldclear)\n        } else {\n          setClear(true); //console.log(shouldclear)\n        }\n        /*\n          await firestore.collection(\"words\").doc(word).get().then(function (doc) {\n             if (doc.exists) {\n               isAvailable = true\n               shouldclear = false;\n               setClear(shouldclear)\n               \n               \n             }else{\n             shouldclear = true;\n              setClear(shouldclear)\n             }\n           }).catch(function (error) {\n             console.log(\"Error getting document:\", error);\n           }); */\n\n        /*\n                if (isAvailable == false) {\n        \n                  await firestore.collection(\"words\").doc(word).set({\n                    definition: addedword.definition,\n                    industry: \"Construction\",\n                    sub_industry: \"Construction\",\n                    user: \"Salah\",\n                    word: addedword.word\n                  })\n                    .then(function () {\n                      console.log(\"Document successfully written!\");\n                      \n        \n                    })\n                    .catch(function (error) {\n                      console.error(\"Error writing document: \", error);\n                    })\n                }*/\n\n      }\n    }\n\n    sendtofb();\n    setWord('');\n  }, [addedword]);\n  return __jsx(\"div\", null, __jsx(Head, null, __jsx(\"link\", {\n    rel: \"stylesheet\",\n    href: \"https://fonts.googleapis.com/icon?family=Material+Icons\"\n  })), __jsx(\"main\", null, __jsx(Appbar, null), __jsx(Searchbar, null), __jsx(Button, {\n    className: classes.btn,\n    onClick: handleOpen\n  }, __jsx(Icon, {\n    style: {\n      fontSize: 40\n    }\n  }, \"add_circle\"))));\n}\n/*<Addbtn returnData={getData} clear = {clear} ></Addbtn>*/","map":{"version":3,"sources":["/Users/salahabdallah/Desktop/Dev/Jargon/pages/main.js"],"names":["Head","Appbar","Searchbar","Addbtn","react","useEffect","useState","Button","firestore","fade","makeStyles","useStyles","theme","btn","position","borderRadius","shape","backgroundColor","palette","common","white","width","justifyContent","breakpoints","up","marginLeft","spacing","Home","classes","addedword","setWord","clear","setClear","getData","word","shouldclear","sendtofb","length","isAvailable","handleOpen","fontSize"],"mappings":";;AAAA,OAAOA,IAAP,MAAiB,WAAjB;AACA,OAAOC,MAAP,MAAmB,sBAAnB;AACA,OAAOC,SAAP,MAAsB,sBAAtB;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AACA,OAAOC,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,OAAOC,MAAP,MAAmB,0BAAnB;AACA,SAASC,SAAT,QAA0B,mBAA1B;AACA,SAASC,IAAT,EAAeC,UAAf,QAAiC,0BAAjC;AAEA,MAAMC,SAAS,GAAGD,UAAU,CAAEE,KAAD,KAAY;AAEvCC,EAAAA,GAAG,EAAE;AAEHC,IAAAA,QAAQ,EAAE,UAFP;AAGHC,IAAAA,YAAY,EAAEH,KAAK,CAACI,KAAN,CAAYD,YAHvB;AAIHE,IAAAA,eAAe,EAAER,IAAI,CAACG,KAAK,CAACM,OAAN,CAAcC,MAAd,CAAqBC,KAAtB,EAA6B,IAA7B,CAJlB;AAKH,eAAW;AACTH,MAAAA,eAAe,EAAER,IAAI,CAACG,KAAK,CAACM,OAAN,CAAcC,MAAd,CAAqBC,KAAtB,EAA6B,IAA7B;AADZ,KALR;AAQHC,IAAAA,KAAK,EAAE,MARJ;AASHC,IAAAA,cAAc,EAAE,QATb;AAUH,KAACV,KAAK,CAACW,WAAN,CAAkBC,EAAlB,CAAqB,IAArB,CAAD,GAA8B;AAC5BC,MAAAA,UAAU,EAAEb,KAAK,CAACc,OAAN,CAAc,CAAd,CADgB;AAE5BL,MAAAA,KAAK,EAAE;AAFqB;AAV3B;AAFkC,CAAZ,CAAD,CAA5B;AAoBA,eAAe,SAASM,IAAT,GAAgB;AAE7B,QAAMC,OAAO,GAAGjB,SAAS,EAAzB;AACA,QAAM;AAAA,OAACkB,SAAD;AAAA,OAAYC;AAAZ,MAAuBxB,QAAQ,CAAC,EAAD,CAArC;AACA,QAAM;AAAA,OAACyB,KAAD;AAAA,OAAQC;AAAR,MAAoB1B,QAAQ,CAAC,KAAD,CAAlC;;AAEA,QAAM2B,OAAO,GAAG,MAAOC,IAAP,IAAgB;AAE9BJ,IAAAA,OAAO,CAACI,IAAD,CAAP;AAED,GAJD;;AAMA7B,EAAAA,SAAS,CAAC,MAAM;AAEd,QAAI8B,WAAW,GAAG,KAAlB;;AAEA,mBAAeC,QAAf,GAA0B;AAExB,UAAIP,SAAS,CAACQ,MAAV,IAAoB,CAApB,GAAwBR,SAAS,CAACK,IAAV,IAAkB,EAA9C,EAAkD;AAEhD,YAAIA,IAAI,GAAGL,SAAS,CAACK,IAArB;AACA,YAAII,WAAW,GAAG,KAAlB;;AAEA,YAAIJ,IAAI,IAAI,GAAR,IAAcA,IAAI,IAAI,GAA1B,EAA8B;AAE5BF,UAAAA,QAAQ,CAAC,KAAD,CAAR,CAF4B,CAG5B;AACD,SAJD,MAIK;AAEFA,UAAAA,QAAQ,CAAC,IAAD,CAAR,CAFE,CAGF;AACF;AAEJ;;;;;;;;;;;;;;;;AAiBL;;;;;;;;;;;;;;;;;;;;AAmBO;AACF;;AAEDI,IAAAA,QAAQ;AAERN,IAAAA,OAAO,CAAC,EAAD,CAAP;AAGD,GAjEQ,EAiEN,CAACD,SAAD,CAjEM,CAAT;AAqEA,SACE,mBACE,MAAC,IAAD,QACE;AAAM,IAAA,GAAG,EAAC,YAAV;AAAuB,IAAA,IAAI,EAAC;AAA5B,IADF,CADF,EAIE,oBACE,MAAC,MAAD,OADF,EAEE,MAAC,SAAD,OAFF,EAGE,MAAC,MAAD;AAAQ,IAAA,SAAS,EAAED,OAAO,CAACf,GAA3B;AAAgC,IAAA,OAAO,EAAE0B;AAAzC,KACE,MAAC,IAAD;AAAM,IAAA,KAAK,EAAE;AAAEC,MAAAA,QAAQ,EAAE;AAAZ;AAAb,kBADF,CAHF,CAJF,CADF;AAeD;AAEO","sourcesContent":["import Head from 'next/head'\nimport Appbar from '../components/appbar'\nimport Searchbar from '../components/search'\nimport Addbtn from '../components/add'\nimport react, { useEffect, useState } from 'react'\nimport Button from '@material-ui/core/Button';\nimport { firestore } from \"../utils/firebase\"\nimport { fade, makeStyles } from '@material-ui/core/styles';\n\nconst useStyles = makeStyles((theme) => ({\n\n  btn: {\n\n    position: 'relative',\n    borderRadius: theme.shape.borderRadius,\n    backgroundColor: fade(theme.palette.common.white, 0.15),\n    '&:hover': {\n      backgroundColor: fade(theme.palette.common.white, 0.25),\n    },\n    width: '100%',\n    justifyContent: 'center',\n    [theme.breakpoints.up('sm')]: {\n      marginLeft: theme.spacing(3),\n      width: 'auto',\n    },\n  }\n\n}));\n\nexport default function Home() {\n\n  const classes = useStyles();\n  const [addedword, setWord] = useState([])\n  const [clear, setClear] = useState(false)\n\n  const getData = async (word) => {\n\n    setWord(word)\n\n  }\n\n  useEffect(() => {\n\n    let shouldclear = false;\n\n    async function sendtofb() {\n\n      if (addedword.length != 0 & addedword.word != \"\") {\n\n        let word = addedword.word\n        let isAvailable = false\n\n        if (word == 'a'|| word == 'b'){\n         \n          setClear(false)\n          //console.log(shouldclear)\n        }else{\n          \n           setClear(true)\n           //console.log(shouldclear)\n        }\n    \n     /*\n       await firestore.collection(\"words\").doc(word).get().then(function (doc) {\n          if (doc.exists) {\n            isAvailable = true\n            shouldclear = false;\n            setClear(shouldclear)\n            \n            \n          }else{\n          shouldclear = true;\n           setClear(shouldclear)\n          }\n        }).catch(function (error) {\n          console.log(\"Error getting document:\", error);\n        }); */\n\n        \n/*\n        if (isAvailable == false) {\n\n          await firestore.collection(\"words\").doc(word).set({\n            definition: addedword.definition,\n            industry: \"Construction\",\n            sub_industry: \"Construction\",\n            user: \"Salah\",\n            word: addedword.word\n          })\n            .then(function () {\n              console.log(\"Document successfully written!\");\n              \n\n            })\n            .catch(function (error) {\n              console.error(\"Error writing document: \", error);\n            })\n        }*/\n      }\n    }\n\n    sendtofb();\n  \n    setWord('')\n\n  \n  }, [addedword]);\n\n\n\n  return (\n    <div>\n      <Head>\n        <link rel=\"stylesheet\" href=\"https://fonts.googleapis.com/icon?family=Material+Icons\" />\n      </Head>\n      <main>\n        <Appbar></Appbar>\n        <Searchbar></Searchbar>\n        <Button className={classes.btn} onClick={handleOpen} >\n          <Icon style={{ fontSize: 40 }} >add_circle</Icon>\n        </Button>\n\n      </main>\n    </div>\n  )\n}\n\n        /*<Addbtn returnData={getData} clear = {clear} ></Addbtn>*/"]},"metadata":{},"sourceType":"module"}