{"ast":null,"code":"import React from \"react\";\nvar __jsx = React.createElement;\nimport { useState, useContext } from \"react\";\nimport Addwordform from \"../components/add\";\nimport axios from \"axios\";\nimport Router from \"next/router\";\nimport { UserContext } from \"../providers/userProvider\";\nexport default function addword() {\n  const {\n    0: wordanddef,\n    1: setWordandDef\n  } = useState({\n    word: \"\",\n    definition: \"\",\n    topics: []\n  });\n  const {\n    0: topics,\n    1: setTopics\n  } = useState([]);\n  const user = useContext(UserContext);\n\n  const getData = async word => {\n    let termtoadd = {\n      word: word.word,\n      definition: word.definition,\n      topics: topics\n    };\n    setWordandDef({\n      termtoadd\n    });\n    await axios.get(`/api/add`, {\n      params: termtoadd\n    }, {\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      credentials: \"include\"\n    }).then(function (response) {\n      if (response.data.added == true) {\n        Router.push(\"/congrats\");\n      }\n    }).catch(function (error) {\n      console.log(error);\n    });\n  };\n\n  const getTopics = async definition => {\n    let topics = [];\n    await axios.get(`/api/topics/`, {\n      params: definition\n    }, {\n      headers: {\n        \"Content-Type\": \"application/json\"\n      }\n    }).then(function (response) {\n      {\n        response.data.result[0].map((data, i) => {\n          topics.push(data.term);\n        });\n      }\n      setTopics(topics);\n    }).catch(function (error) {\n      console.log(error);\n    });\n  };\n\n  return __jsx(Addwordform, {\n    returnData: getData,\n    returnTopics: getTopics,\n    topics: topics\n  });\n}","map":{"version":3,"sources":["/Users/salahabdallah/Desktop/Dev/Jargon/pages/addword.js"],"names":["useState","useContext","Addwordform","axios","Router","UserContext","addword","wordanddef","setWordandDef","word","definition","topics","setTopics","user","getData","termtoadd","get","params","headers","credentials","then","response","data","added","push","catch","error","console","log","getTopics","result","map","i","term"],"mappings":";;AAAA,SAASA,QAAT,EAAmBC,UAAnB,QAAqC,OAArC;AACA,OAAOC,WAAP,MAAwB,mBAAxB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,aAAnB;AACA,SAASC,WAAT,QAA4B,2BAA5B;AAEA,eAAe,SAASC,OAAT,GAAmB;AAChC,QAAM;AAAA,OAACC,UAAD;AAAA,OAAaC;AAAb,MAA8BR,QAAQ,CAAC;AAC3CS,IAAAA,IAAI,EAAE,EADqC;AAE3CC,IAAAA,UAAU,EAAE,EAF+B;AAG3CC,IAAAA,MAAM,EAAE;AAHmC,GAAD,CAA5C;AAKA,QAAM;AAAA,OAACA,MAAD;AAAA,OAASC;AAAT,MAAsBZ,QAAQ,CAAC,EAAD,CAApC;AACA,QAAMa,IAAI,GAAGZ,UAAU,CAACI,WAAD,CAAvB;;AAEA,QAAMS,OAAO,GAAG,MAAOL,IAAP,IAAgB;AAC9B,QAAIM,SAAS,GAAG;AACdN,MAAAA,IAAI,EAAEA,IAAI,CAACA,IADG;AAEdC,MAAAA,UAAU,EAAED,IAAI,CAACC,UAFH;AAGdC,MAAAA,MAAM,EAAEA;AAHM,KAAhB;AAKAH,IAAAA,aAAa,CAAC;AAAEO,MAAAA;AAAF,KAAD,CAAb;AAEA,UAAMZ,KAAK,CACRa,GADG,CAED,UAFC,EAGF;AAAEC,MAAAA,MAAM,EAAEF;AAAV,KAHE,EAIF;AACEG,MAAAA,OAAO,EAAE;AAAE,wBAAgB;AAAlB,OADX;AAEEC,MAAAA,WAAW,EAAE;AAFf,KAJE,EASHC,IATG,CASE,UAAUC,QAAV,EAAoB;AACxB,UAAIA,QAAQ,CAACC,IAAT,CAAcC,KAAd,IAAuB,IAA3B,EAAiC;AAC/BnB,QAAAA,MAAM,CAACoB,IAAP,CAAY,WAAZ;AACD;AACF,KAbG,EAeHC,KAfG,CAeG,UAAUC,KAAV,EAAiB;AACtBC,MAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AACD,KAjBG,CAAN;AAkBD,GA1BD;;AA4BA,QAAMG,SAAS,GAAG,MAAOnB,UAAP,IAAsB;AACtC,QAAIC,MAAM,GAAG,EAAb;AAEA,UAAMR,KAAK,CACRa,GADG,CAED,cAFC,EAGF;AAAEC,MAAAA,MAAM,EAAEP;AAAV,KAHE,EAIF;AAAEQ,MAAAA,OAAO,EAAE;AAAE,wBAAgB;AAAlB;AAAX,KAJE,EAMHE,IANG,CAME,UAAUC,QAAV,EAAoB;AACxB;AACEA,QAAAA,QAAQ,CAACC,IAAT,CAAcQ,MAAd,CAAqB,CAArB,EAAwBC,GAAxB,CAA4B,CAACT,IAAD,EAAOU,CAAP,KAAa;AACvCrB,UAAAA,MAAM,CAACa,IAAP,CAAYF,IAAI,CAACW,IAAjB;AACD,SAFD;AAGD;AAEDrB,MAAAA,SAAS,CAACD,MAAD,CAAT;AACD,KAdG,EAeHc,KAfG,CAeG,UAAUC,KAAV,EAAiB;AACtBC,MAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AACD,KAjBG,CAAN;AAkBD,GArBD;;AAuBA,SACE,MAAC,WAAD;AACE,IAAA,UAAU,EAAEZ,OADd;AAEE,IAAA,YAAY,EAAEe,SAFhB;AAGE,IAAA,MAAM,EAAElB;AAHV,IADF;AAOD","sourcesContent":["import { useState, useContext } from \"react\";\nimport Addwordform from \"../components/add\";\nimport axios from \"axios\";\nimport Router from \"next/router\";\nimport { UserContext } from \"../providers/userProvider\";\n\nexport default function addword() {\n  const [wordanddef, setWordandDef] = useState({\n    word: \"\",\n    definition: \"\",\n    topics: [],\n  });\n  const [topics, setTopics] = useState([]);\n  const user = useContext(UserContext);\n\n  const getData = async (word) => {\n    let termtoadd = {\n      word: word.word,\n      definition: word.definition,\n      topics: topics,\n    };\n    setWordandDef({ termtoadd });\n\n    await axios\n      .get(\n        `/api/add`,\n        { params: termtoadd },\n        {\n          headers: { \"Content-Type\": \"application/json\" },\n          credentials: \"include\",\n        }\n      )\n      .then(function (response) {\n        if (response.data.added == true) {\n          Router.push(\"/congrats\");\n        }\n      })\n\n      .catch(function (error) {\n        console.log(error);\n      });\n  };\n\n  const getTopics = async (definition) => {\n    let topics = [];\n\n    await axios\n      .get(\n        `/api/topics/`,\n        { params: definition },\n        { headers: { \"Content-Type\": \"application/json\" } }\n      )\n      .then(function (response) {\n        {\n          response.data.result[0].map((data, i) => {\n            topics.push(data.term);\n          });\n        }\n\n        setTopics(topics);\n      })\n      .catch(function (error) {\n        console.log(error);\n      });\n  };\n\n  return (\n    <Addwordform\n      returnData={getData}\n      returnTopics={getTopics}\n      topics={topics}\n    ></Addwordform>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}