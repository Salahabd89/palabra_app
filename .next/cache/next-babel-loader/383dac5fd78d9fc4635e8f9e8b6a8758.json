{"ast":null,"code":"import React from \"react\";\nvar __jsx = React.createElement;\nimport { UserContext } from '../providers/userProvider';\nimport Appbar from '../components/appbar';\nimport { useState, useMemo } from 'react';\n\nfunction MyApp(_ref) {\n  var Component = _ref.Component,\n      pageProps = _ref.pageProps;\n  return __jsx(Appbar, {\n    user: user\n  }, __jsx(Component, pageProps));\n} // Only uncomment this method if you have blocking data requirements for\n// every single page in your application. This disables the ability to\n// perform automatic static optimization, causing every page in your app to\n// be server-side rendered.\n//\n// MyApp.getInitialProps = async (appContext) => {\n//   // calls page's `getInitialProps` and fills `appProps.pageProps`\n//   const appProps = await App.getInitialProps(appContext);\n//\n//   return { ...appProps }\n// }\n\n\n_c = MyApp;\nexport default MyApp;\n\nvar _c;\n\n$RefreshReg$(_c, \"MyApp\");","map":{"version":3,"sources":["/Users/salahabdallah/Desktop/Dev/Jargon/pages/_app.js"],"names":["UserContext","Appbar","useState","useMemo","MyApp","Component","pageProps","user"],"mappings":";;AACA,SAAQA,WAAR,QAA0B,2BAA1B;AACA,OAAOC,MAAP,MAAmB,sBAAnB;AACA,SAASC,QAAT,EAAmBC,OAAnB,QAAkC,OAAlC;;AAGA,SAASC,KAAT,OAAyC;AAAA,MAAxBC,SAAwB,QAAxBA,SAAwB;AAAA,MAAbC,SAAa,QAAbA,SAAa;AAIrC,SACI,MAAC,MAAD;AAAQ,IAAA,IAAI,EAAIC;AAAhB,KACI,MAAC,SAAD,EAAeD,SAAf,CADJ,CADJ;AAMD,C,CAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;KAtBOF,K;AAwBP,eAAeA,KAAf","sourcesContent":["\nimport {UserContext} from '../providers/userProvider';\nimport Appbar from '../components/appbar';\nimport { useState, useMemo } from 'react'\n\n\nfunction MyApp({ Component, pageProps }) {\n\n\n\n    return (\n        <Appbar user = {user} >\n            <Component {...pageProps} />\n        </Appbar>\n        )\n\n  }\n  \n  // Only uncomment this method if you have blocking data requirements for\n  // every single page in your application. This disables the ability to\n  // perform automatic static optimization, causing every page in your app to\n  // be server-side rendered.\n  //\n  // MyApp.getInitialProps = async (appContext) => {\n  //   // calls page's `getInitialProps` and fills `appProps.pageProps`\n  //   const appProps = await App.getInitialProps(appContext);\n  //\n  //   return { ...appProps }\n  // }\n  \n  export default MyApp"]},"metadata":{},"sourceType":"module"}