{"ast":null,"code":"import React from \"react\";\nvar __jsx = React.createElement;\nimport SignIn from \"../components/signin\";\nimport axios from \"axios\";\nimport router from \"next/router\";\nimport Card from \"@material-ui/core/Card\";\nimport Box from \"@material-ui/core/Box\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { useDispatch } from \"react-redux\";\nimport { add_user_data } from \"../store/actions\";\nconst useStyles = makeStyles(theme => ({\n  box: {\n    display: \"flex\",\n    flexDirection: \"column\",\n    justifyContent: \"center\",\n    marginTop: \"5%\",\n    marginLeft: \"20%\",\n    marginRight: \"20%\",\n    textAlign: \"center\"\n  },\n  card: {\n    display: \"flex\",\n    flexDirection: \"column\",\n    justifyContent: \"center\",\n    marginTop: \"5%\",\n    marginLeft: \"20%\",\n    marginRight: \"20%\",\n    textAlign: \"center\"\n  }\n}));\n\nfunction Signin() {\n  const classes = useStyles();\n  const dispatch = useDispatch();\n\n  const signInWithEmailAndPassword = async (email, password) => {\n    try {\n      const useruid = await axios.get(`/api/auth/signin`, {\n        params: {\n          email,\n          password\n        }\n      }, {\n        headers: {\n          \"Content-Type\": \"application/json\"\n        }\n      }).then(response => response);\n      dispatch(add_user_data(useruid.data.userInfo.displayName, useruid.data.userInfo.teams));\n\n      if (useruid.data.userInfo.uid.length > 0) {\n        /*router.push({\n          pathname: \"/console\",\n          query: {\n            data: useruid.data.userInfo.displayName,\n            teams: useruid.data.teams,\n          },\n        });\n        router.reload(); */\n      }\n    } catch (error) {}\n  };\n\n  return __jsx(\"div\", null, __jsx(Box, {\n    Container: true,\n    className: classes.box\n  }, __jsx(Card, null, __jsx(SignIn, {\n    Signin: signInWithEmailAndPassword\n  }))));\n}\n\nexport default Signin;","map":{"version":3,"sources":["/Users/salahabdallah/Desktop/Dev/Jargon/pages/login.js"],"names":["SignIn","axios","router","Card","Box","makeStyles","useDispatch","add_user_data","useStyles","theme","box","display","flexDirection","justifyContent","marginTop","marginLeft","marginRight","textAlign","card","Signin","classes","dispatch","signInWithEmailAndPassword","email","password","useruid","get","params","headers","then","response","data","userInfo","displayName","teams","uid","length","error"],"mappings":";;AAAA,OAAOA,MAAP,MAAmB,sBAAnB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,aAAnB;AACA,OAAOC,IAAP,MAAiB,wBAAjB;AACA,OAAOC,GAAP,MAAgB,uBAAhB;AACA,SAASC,UAAT,QAA2B,0BAA3B;AACA,SAASC,WAAT,QAA4B,aAA5B;AACA,SAASC,aAAT,QAA8B,kBAA9B;AAEA,MAAMC,SAAS,GAAGH,UAAU,CAAEI,KAAD,KAAY;AACvCC,EAAAA,GAAG,EAAE;AACHC,IAAAA,OAAO,EAAE,MADN;AAEHC,IAAAA,aAAa,EAAE,QAFZ;AAGHC,IAAAA,cAAc,EAAE,QAHb;AAIHC,IAAAA,SAAS,EAAE,IAJR;AAKHC,IAAAA,UAAU,EAAE,KALT;AAMHC,IAAAA,WAAW,EAAE,KANV;AAOHC,IAAAA,SAAS,EAAE;AAPR,GADkC;AAUvCC,EAAAA,IAAI,EAAE;AACJP,IAAAA,OAAO,EAAE,MADL;AAEJC,IAAAA,aAAa,EAAE,QAFX;AAGJC,IAAAA,cAAc,EAAE,QAHZ;AAIJC,IAAAA,SAAS,EAAE,IAJP;AAKJC,IAAAA,UAAU,EAAE,KALR;AAMJC,IAAAA,WAAW,EAAE,KANT;AAOJC,IAAAA,SAAS,EAAE;AAPP;AAViC,CAAZ,CAAD,CAA5B;;AAqBA,SAASE,MAAT,GAAkB;AAChB,QAAMC,OAAO,GAAGZ,SAAS,EAAzB;AACA,QAAMa,QAAQ,GAAGf,WAAW,EAA5B;;AACA,QAAMgB,0BAA0B,GAAG,OAAOC,KAAP,EAAcC,QAAd,KAA2B;AAC5D,QAAI;AACF,YAAMC,OAAO,GAAG,MAAMxB,KAAK,CACxByB,GADmB,CAEjB,kBAFiB,EAGlB;AAAEC,QAAAA,MAAM,EAAE;AAAEJ,UAAAA,KAAF;AAASC,UAAAA;AAAT;AAAV,OAHkB,EAIlB;AAAEI,QAAAA,OAAO,EAAE;AAAE,0BAAgB;AAAlB;AAAX,OAJkB,EAMnBC,IANmB,CAMbC,QAAD,IAAcA,QANA,CAAtB;AAQAT,MAAAA,QAAQ,CACNd,aAAa,CACXkB,OAAO,CAACM,IAAR,CAAaC,QAAb,CAAsBC,WADX,EAEXR,OAAO,CAACM,IAAR,CAAaC,QAAb,CAAsBE,KAFX,CADP,CAAR;;AAOA,UAAIT,OAAO,CAACM,IAAR,CAAaC,QAAb,CAAsBG,GAAtB,CAA0BC,MAA1B,GAAmC,CAAvC,EAA0C;AACxC;;;;;;;;AAQD;AACF,KA1BD,CA0BE,OAAOC,KAAP,EAAc,CAAE;AACnB,GA5BD;;AA8BA,SACE,mBACE,MAAC,GAAD;AAAK,IAAA,SAAS,MAAd;AAAe,IAAA,SAAS,EAAEjB,OAAO,CAACV;AAAlC,KACE,MAAC,IAAD,QACE,MAAC,MAAD;AAAQ,IAAA,MAAM,EAAEY;AAAhB,IADF,CADF,CADF,CADF;AASD;;AAED,eAAeH,MAAf","sourcesContent":["import SignIn from \"../components/signin\";\nimport axios from \"axios\";\nimport router from \"next/router\";\nimport Card from \"@material-ui/core/Card\";\nimport Box from \"@material-ui/core/Box\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { useDispatch } from \"react-redux\";\nimport { add_user_data } from \"../store/actions\";\n\nconst useStyles = makeStyles((theme) => ({\n  box: {\n    display: \"flex\",\n    flexDirection: \"column\",\n    justifyContent: \"center\",\n    marginTop: \"5%\",\n    marginLeft: \"20%\",\n    marginRight: \"20%\",\n    textAlign: \"center\",\n  },\n  card: {\n    display: \"flex\",\n    flexDirection: \"column\",\n    justifyContent: \"center\",\n    marginTop: \"5%\",\n    marginLeft: \"20%\",\n    marginRight: \"20%\",\n    textAlign: \"center\",\n  },\n}));\n\nfunction Signin() {\n  const classes = useStyles();\n  const dispatch = useDispatch();\n  const signInWithEmailAndPassword = async (email, password) => {\n    try {\n      const useruid = await axios\n        .get(\n          `/api/auth/signin`,\n          { params: { email, password } },\n          { headers: { \"Content-Type\": \"application/json\" } }\n        )\n        .then((response) => response);\n\n      dispatch(\n        add_user_data(\n          useruid.data.userInfo.displayName,\n          useruid.data.userInfo.teams\n        )\n      );\n\n      if (useruid.data.userInfo.uid.length > 0) {\n        /*router.push({\n          pathname: \"/console\",\n          query: {\n            data: useruid.data.userInfo.displayName,\n            teams: useruid.data.teams,\n          },\n        });\n        router.reload(); */\n      }\n    } catch (error) {}\n  };\n\n  return (\n    <div>\n      <Box Container className={classes.box}>\n        <Card>\n          <SignIn Signin={signInWithEmailAndPassword}></SignIn>\n        </Card>\n      </Box>\n    </div>\n  );\n}\n\nexport default Signin;\n"]},"metadata":{},"sourceType":"module"}