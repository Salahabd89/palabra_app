{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\n\nvar _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { useState, useEffect } from 'react';\nimport Button from '@material-ui/core/Button';\nimport { fade, makeStyles } from '@material-ui/core/styles';\nimport TextField from '@material-ui/core/TextField';\nimport Container from '@material-ui/core/Container';\nimport Box from '@material-ui/core/Box';\nimport { Typography } from '@material-ui/core';\nvar useStyles = makeStyles(function (theme) {\n  var _btn;\n\n  return {\n    root: {\n      marginTop: '0%',\n      marginRight: '50%',\n      marginLeft: '50%'\n    },\n    defInput: {\n      top: '417px',\n      left: '526px',\n      width: '368px',\n      height: '307px',\n      backgroundColor: '#F0F4F8',\n      borderRadius: '8px',\n      opacity: '1',\n      marginBottom: '5%'\n    },\n    preview: {\n      width: '105px',\n      height: '25px',\n      marginLeft: '45%',\n      background: '#202020 0% 0% no-repeat padding-box',\n      borderRadius: '80px',\n      opacity: '1'\n    },\n    termInput: {\n      opacity: '1',\n      marginBottom: '5%'\n    },\n    btn: (_btn = {\n      position: 'relative',\n      borderRadius: theme.shape.borderRadius,\n      backgroundColor: fade(theme.palette.common.white, 0.15),\n      '&:hover': {\n        backgroundColor: fade(theme.palette.common.white, 0.25)\n      },\n      width: '100%',\n      justifyContent: 'center'\n    }, _defineProperty(_btn, theme.breakpoints.up('sm'), {\n      marginLeft: theme.spacing(3),\n      width: 'auto'\n    }), _defineProperty(_btn, \"textPrimary\", {\n      color: 'white'\n    }), _btn)\n  };\n});\nexport default function addwordform(props) {\n  _s();\n\n  var classes = useStyles();\n\n  var _useState = useState(false),\n      ispreview = _useState[0],\n      setPreview = _useState[1];\n\n  var _useState2 = useState({\n    word: \"\",\n    definition: \"\"\n  }),\n      all = _useState2[0],\n      setAll = _useState2[1];\n\n  var sendPreview = function sendPreview(e) {\n    e.preventDefault();\n    setPreview(true);\n  };\n\n  function addWord(_x) {\n    return _addWord.apply(this, arguments);\n  }\n\n  function _addWord() {\n    _addWord = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(e) {\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              e.preventDefault();\n              props.returnData(all);\n\n            case 2:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n    return _addWord.apply(this, arguments);\n  }\n\n  var cancelPreview = function cancelPreview(e) {\n    e.preventDefault();\n    setPreview(false);\n  };\n\n  var edit = function edit(e) {\n    e.preventDefault();\n    setPreview(false);\n  };\n\n  useEffect(function () {\n    if (props.clear == true) {\n      clear();\n    }\n  }, [props.clear]);\n\n  function clear() {\n    setAll({\n      word: \"\",\n      definition: \"\"\n    });\n  }\n\n  return __jsx(Box, {\n    display: \"flex\",\n    flexDirection: \"column\",\n    justifyContent: \"center\",\n    m: 12\n  }, ispreview == false ? __jsx(React.Fragment, null, __jsx(TextField, {\n    name: \"word\",\n    variant: \"outlined\",\n    value: all.word,\n    fullWidth: true,\n    m: 12,\n    className: classes.termInput,\n    onChange: function onChange(e) {\n      return setAll(_objectSpread(_objectSpread({}, all), {}, _defineProperty({}, event.target.name, event.target.value)));\n    },\n    label: \"Word\"\n  }), __jsx(TextField, {\n    name: \"definition\",\n    variant: \"outlined\",\n    classNam: classes.defInput,\n    value: all.definition,\n    onChange: function onChange(e) {\n      return setAll(_objectSpread(_objectSpread({}, all), {}, _defineProperty({}, event.target.name, event.target.value)));\n    },\n    multiline: true,\n    rows: 10,\n    label: \"Definition\"\n  }), __jsx(Button, {\n    variant: \"outlined\",\n    className: classes.preview,\n    onClick: sendPreview\n  }, __jsx(Typography, null, \"Preview\"))) : __jsx(Container, null, __jsx(Typography, null, \"word:   \", all.word, \"definition: \", all.definition, __jsx(Button, {\n    className: classes.btn,\n    variant: \"outlined\",\n    onClick: addWord\n  }, \"add\"), __jsx(Button, {\n    className: classes.btn,\n    variant: \"outlined\",\n    onClick: cancelPreview\n  }, \"cancel\"), __jsx(Button, {\n    className: classes.btn,\n    variant: \"outlined\",\n    onClick: edit\n  }, \"Edit\"))));\n}\n\n_s(addwordform, \"V5jsj8ZzArWo/dsO80AtHJtetJY=\", false, function () {\n  return [useStyles];\n});","map":{"version":3,"sources":["/Users/salahabdallah/Desktop/Dev/Jargon/components/add.js"],"names":["React","useState","useEffect","Button","fade","makeStyles","TextField","Container","Box","Typography","useStyles","theme","root","marginTop","marginRight","marginLeft","defInput","top","left","width","height","backgroundColor","borderRadius","opacity","marginBottom","preview","background","termInput","btn","position","shape","palette","common","white","justifyContent","breakpoints","up","spacing","color","addwordform","props","classes","ispreview","setPreview","word","definition","all","setAll","sendPreview","e","preventDefault","addWord","returnData","cancelPreview","edit","clear","event","target","name","value"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport Button from '@material-ui/core/Button';\nimport { fade, makeStyles } from '@material-ui/core/styles';\nimport TextField from '@material-ui/core/TextField';\nimport Container from '@material-ui/core/Container';\nimport Box from '@material-ui/core/Box';\nimport { Typography } from '@material-ui/core';\n\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    marginTop: '0%',\n    marginRight: '50%',\n    marginLeft: '50%'\n  },\n  defInput:{\n    top: '417px',\n    left: '526px',\n    width: '368px',\n    height: '307px',\n    backgroundColor: '#F0F4F8',\n    borderRadius: '8px',\n    opacity: '1',\n    marginBottom:'5%'\n\n  },\n  preview:{\n\n    width: '105px',\n    height: '25px',\n    marginLeft: '45%',\n    background: '#202020 0% 0% no-repeat padding-box',\n    borderRadius: '80px',\n    opacity: '1'\n\n  },\n  termInput:{\n\n    opacity: '1',\n    marginBottom:'5%'\n\n  },\n  btn: {\n    position: 'relative',\n    borderRadius: theme.shape.borderRadius,\n    backgroundColor: fade(theme.palette.common.white, 0.15),\n    '&:hover': {\n      backgroundColor: fade(theme.palette.common.white, 0.25),\n    },\n    width: '100%',\n    justifyContent: 'center',\n    [theme.breakpoints.up('sm')]: {\n      marginLeft: theme.spacing(3),\n      width: 'auto',\n    },\n    textPrimary:{\n      color:'white'\n    }\n  }\n}));\n\nexport default function addwordform(props) {\n\n  const classes = useStyles();\n  const [ispreview, setPreview] = useState(false);\n  const [all, setAll] = useState({ word: \"\", definition: \"\" });\n\n\n  const sendPreview = (e) => {\n\n    e.preventDefault();\n    setPreview(true)\n\n  }\n\n  async function addWord(e) {\n\n    e.preventDefault();\n    props.returnData(all);\n  }\n\n  const cancelPreview = (e) => {\n\n    e.preventDefault();\n    setPreview(false)\n\n  }\n\n  const edit = (e) => {\n\n    e.preventDefault();\n    setPreview(false)\n\n  }\n\n  useEffect(() => {\n\n    if (props.clear == true) {\n      clear()\n    }\n\n  }, [props.clear])\n\n  function clear() {\n\n    setAll({ word: \"\", definition: \"\" });\n  }\n\n\n  return (\n\n    <Box display=\"flex\" \n    flexDirection= \"column\"\n    justifyContent=\"center\" \n    m={12} \n\n    >\n      {ispreview == false ?\n        <>\n          \n          <TextField    name=\"word\" \n                        variant=\"outlined\" \n                        value={all.word} \n                        fullWidth\n                        m={12}\n                        className={classes.termInput}\n                        onChange={e => setAll({ ...all, [event.target.name]: event.target.value })} label=\"Word\" />\n\n          <TextField  name=\"definition\" \n                      variant=\"outlined\" \n                      classNam={classes.defInput}\n                      value={all.definition} \n                      onChange={e => setAll({ ...all, [event.target.name]: event.target.value })} multiline rows={10} label=\"Definition\" />\n       \n          <Button variant=\"outlined\" className={classes.preview} onClick={sendPreview}  >\n          <Typography >\n            Preview\n          </Typography>\n         </Button>\n\n\n        </>\n        :\n\n        <Container>\n          <Typography>\n            word:   {all.word}\n               definition: {all.definition}\n            <Button className={classes.btn} variant=\"outlined\"  onClick={addWord} >\n              add\n              </Button>\n            <Button className={classes.btn} variant=\"outlined\"  onClick={cancelPreview} >\n              cancel\n            </Button>\n            <Button className={classes.btn} variant=\"outlined\"  onClick={edit} >\n              Edit\n            </Button>\n          </Typography>\n        </Container>\n      }\n     </Box>\n  );\n}"]},"metadata":{},"sourceType":"module"}