{"ast":null,"code":"var __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React, { useState, useEffect } from 'react';\nimport Button from '@material-ui/core/Button';\nimport { fade, makeStyles } from '@material-ui/core/styles';\nimport TextField from '@material-ui/core/TextField';\nimport Popover from '@material-ui/core/Popover';\nimport Box from '@material-ui/core/Box';\nimport Modal from '@material-ui/core/Modal';\nimport Container from '@material-ui/core/Container';\nimport Appbar from '../components/appbar';\nimport { Typography } from '@material-ui/core';\nconst useStyles = makeStyles(theme => ({\n  root: {\n    marginTop: '0%',\n    marginLeft: '0%',\n    marginLeft: '50%'\n  },\n  wordtxt: {\n    float: 'top',\n    marginLeft: '10%',\n    display: 'flex'\n  },\n  btn: {\n    position: 'relative',\n    borderRadius: theme.shape.borderRadius,\n    backgroundColor: fade(theme.palette.common.white, 0.15),\n    '&:hover': {\n      backgroundColor: fade(theme.palette.common.white, 0.25)\n    },\n    width: '100%',\n    justifyContent: 'center',\n    [theme.breakpoints.up('sm')]: {\n      marginLeft: theme.spacing(3),\n      width: 'auto'\n    }\n  }\n}));\nexport default function addwordform(props) {\n  const classes = useStyles();\n  const {\n    0: ispreview,\n    1: setPreview\n  } = useState(false);\n  const {\n    0: all,\n    1: setAll\n  } = useState({\n    word: \"\",\n    definition: \"\"\n  });\n  const {\n    0: clearText,\n    1: setClear\n  } = useState(props.clear);\n\n  const sendWord = e => {\n    e.preventDefault();\n    props.returnData(all);\n  };\n\n  const sendPreview = e => {\n    e.preventDefault();\n    setPreview(true);\n  };\n\n  const addWord = e => {\n    //fetch api\n    fetch(`http://localhost:5050/api/add`, all.word, {\n      method: 'POST'\n    }).then(res => res.json()).then(data => {\n      console.log('done');\n    });\n  };\n\n  const cancelPreview = e => {\n    e.preventDefault();\n    setPreview(false);\n  };\n\n  const edit = e => {\n    e.preventDefault();\n    setPreview(false);\n    props.returnData(all);\n  };\n\n  const cancelPrompt = e => {\n    e.preventDefault();\n  };\n\n  useEffect(() => {\n    if (props.clear == true) {\n      clear();\n    }\n  }, [props.clear]);\n\n  function clear() {\n    setAll({\n      word: \"\",\n      definition: \"\"\n    });\n  }\n\n  return __jsx(\"div\", null, __jsx(Appbar, null), ispreview == false ? __jsx(Container, {\n    maxWidth: \"sm\"\n  }, __jsx(TextField, {\n    id: \"standard-basic\",\n    name: \"word\",\n    value: all.word,\n    onChange: e => setAll(_objectSpread(_objectSpread({}, all), {}, {\n      [event.target.name]: event.target.value\n    })),\n    label: \"Word\"\n  }), __jsx(\"br\", null), __jsx(TextField, {\n    id: \"standard-basic\",\n    name: \"definition\",\n    value: all.definition,\n    onChange: e => setAll(_objectSpread(_objectSpread({}, all), {}, {\n      [event.target.name]: event.target.value\n    })),\n    multiline: true,\n    rows: 10,\n    label: \"Definition\"\n  }), __jsx(\"br\", null), __jsx(Button, {\n    className: classes.btn,\n    onClick: sendPreview\n  }, \"Preview\"), __jsx(Button, {\n    className: classes.btn\n  }, \"cancel\")) : __jsx(Container, null, __jsx(Typography, null, \"word:   \", all.word, __jsx(\"br\", null), \"definition: \", all.definition, __jsx(\"br\", null), __jsx(Button, {\n    className: classes.btn,\n    onClick: addWord\n  }, \"add\"), __jsx(Button, {\n    className: classes.btn,\n    onClick: cancelPreview\n  }, \"cancel\"), __jsx(Button, {\n    className: classes.btn,\n    onClick: edit\n  }, \"Edit\"))));\n}","map":{"version":3,"sources":["/Users/salahabdallah/Desktop/Dev/Jargon/components/add.js"],"names":["React","useState","useEffect","Button","fade","makeStyles","TextField","Popover","Box","Modal","Container","Appbar","Typography","useStyles","theme","root","marginTop","marginLeft","wordtxt","float","display","btn","position","borderRadius","shape","backgroundColor","palette","common","white","width","justifyContent","breakpoints","up","spacing","addwordform","props","classes","ispreview","setPreview","all","setAll","word","definition","clearText","setClear","clear","sendWord","e","preventDefault","returnData","sendPreview","addWord","fetch","method","then","res","json","data","console","log","cancelPreview","edit","cancelPrompt","event","target","name","value"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport Button from '@material-ui/core/Button';\nimport { fade, makeStyles } from '@material-ui/core/styles';\nimport TextField from '@material-ui/core/TextField';\nimport Popover from '@material-ui/core/Popover';\nimport Box from '@material-ui/core/Box';\nimport Modal from '@material-ui/core/Modal';\nimport Container from '@material-ui/core/Container';\nimport Appbar from '../components/appbar'\nimport { Typography } from '@material-ui/core';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    marginTop: '0%',\n    marginLeft: '0%',\n    marginLeft: '50%'\n  },\n  wordtxt: {\n    float: 'top',\n    marginLeft: '10%',\n    display: 'flex'\n  },\n  btn: {\n    position: 'relative',\n    borderRadius: theme.shape.borderRadius,\n    backgroundColor: fade(theme.palette.common.white, 0.15),\n    '&:hover': {\n      backgroundColor: fade(theme.palette.common.white, 0.25),\n    },\n    width: '100%',\n    justifyContent: 'center',\n    [theme.breakpoints.up('sm')]: {\n      marginLeft: theme.spacing(3),\n      width: 'auto',\n    },\n  }\n}));\n\nexport default function addwordform(props) {\n\n  const classes = useStyles();\n  const [ispreview, setPreview] = useState(false);\n  const [all, setAll] = useState({ word: \"\", definition: \"\" });\n\n  const [clearText, setClear] = useState(props.clear)\n\n  const sendWord = (e) => {\n\n    e.preventDefault();\n\n    props.returnData(all);\n\n  }\n\n  const sendPreview= (e) => {\n\n    e.preventDefault();\n    setPreview(true)\n\n  }\n\n  const addWord = (e) =>{\n        //fetch api\n         fetch(`http://localhost:5050/api/add`, all.word, {method: 'POST'})\n        .then(res => res.json()) \n          .then(data => { console.log('done')\n          })\n  }\n\n  const cancelPreview = (e) => {\n\n    e.preventDefault();\n    setPreview(false)\n\n  }\n\n  const edit = (e) => {\n\n    e.preventDefault();\n    setPreview(false)\n    props.returnData(all);\n\n  }\n\n  const cancelPrompt = (e) => {\n\n    e.preventDefault();\n  }\n\n  useEffect(() => {\n\n    if (props.clear == true) {\n      clear()\n    }\n\n  }, [props.clear])\n\n  function clear() {\n\n    setAll({ word: \"\", definition: \"\" });\n  }\n\n\n  return (\n    <div>\n      <Appbar />\n      {ispreview == false ?\n\n        <Container maxWidth='sm'>\n          <TextField id=\"standard-basic\" name=\"word\" value={all.word} onChange={e => setAll({ ...all, [event.target.name]: event.target.value })} label=\"Word\" />\n          <br />\n          <TextField id=\"standard-basic\" name=\"definition\" value={all.definition} onChange={e => setAll({ ...all, [event.target.name]: event.target.value })} multiline rows={10} label=\"Definition\" />\n          <br />\n          <Button className={classes.btn} onClick={sendPreview}  >\n            Preview\n      </Button>\n          <Button className={classes.btn}  >\n            cancel\n        </Button>\n        </Container>\n\n        :\n\n        <Container>\n           <Typography>\n               word:   {all.word}\n               <br/>\n               definition: {all.definition}\n               <br/>\n               <Button className={classes.btn} onClick={addWord} >\n                    add\n              </Button>\n              <Button className={classes.btn} onClick={cancelPreview} >\n                  cancel\n            </Button>\n            <Button className={classes.btn} onClick={edit} >\n                  Edit\n            </Button>\n             </Typography>\n        </Container>\n      }\n    </div>\n  );\n}"]},"metadata":{},"sourceType":"module"}