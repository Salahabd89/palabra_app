{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\nimport React from \"react\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport { useState } from 'react';\nimport axios from 'axios'; // This gets called on every request\n\nfunction listwords(_ref) {\n  var props = _ref.props;\n  // Fetch data from external API\n  console.log(props); // Pass data to the page via props\n\n  return __jsx(\"div\", null, props);\n}\n\nlistwords.getServerSideProps = /*#__PURE__*/function () {\n  var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(context) {\n    var data;\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            console.log(\"d\");\n            _context.next = 3;\n            return axios.get(\"/api/words\", {\n              headers: {\n                'Content-Type': 'application/json'\n              }\n            }).then(function (res) {\n              return JSON.stringify(res);\n            })[\"catch\"](function (error) {\n              console.log(error);\n            });\n\n          case 3:\n            data = _context.sent;\n            return _context.abrupt(\"return\", {\n              props: _objectSpread({}, data)\n            });\n\n          case 5:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n\n  return function (_x) {\n    return _ref2.apply(this, arguments);\n  };\n}();\n\nexport default listwords;\n/*\n\n.then(function (response) {\n        data = response.json()\n        console.log(response)\n      })*/","map":{"version":3,"sources":["/Users/salahabdallah/Desktop/Dev/Jargon/pages/listwords.js"],"names":["useState","axios","listwords","props","console","log","getServerSideProps","context","get","headers","then","res","JSON","stringify","error","data"],"mappings":";;;;;;;;;;AAAA,SAASA,QAAT,QAAyB,OAAzB;AACA,OAAOC,KAAP,MAAkB,OAAlB,C,CAIA;;AAGA,SAASC,SAAT,OAA8B;AAAA,MAATC,KAAS,QAATA,KAAS;AAC1B;AACDC,EAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ,EAF2B,CAI1B;;AACA,SAEI,mBACGA,KADH,CAFJ;AASH;;AAEAD,SAAS,CAACI,kBAAV;AAAA,uEAA+B,iBAAOC,OAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAC5BH,YAAAA,OAAO,CAACC,GAAR,CAAY,GAAZ;AAD4B;AAAA,mBAEVJ,KAAK,CAACO,GAAN,eAAwB;AAAEC,cAAAA,OAAO,EAAE;AAAE,gCAAgB;AAAlB;AAAX,aAAxB,EAEfC,IAFe,CAEV,UAAAC,GAAG,EAAG;AAAC,qBAAOC,IAAI,CAACC,SAAL,CAAeF,GAAf,CAAP;AAA2B,aAFxB,WAGT,UAAUG,KAAV,EAAiB;AACtBV,cAAAA,OAAO,CAACC,GAAR,CAAYS,KAAZ;AACD,aALe,CAFU;;AAAA;AAEvBC,YAAAA,IAFuB;AAAA,6CASrB;AACLZ,cAAAA,KAAK,oBACAY,IADA;AADA,aATqB;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAA/B;;AAAA;AAAA;AAAA;AAAA;;AAiBD,eAAeb,SAAf;AAGA","sourcesContent":["import { useState } from 'react'\nimport axios from 'axios';\n\n\n\n// This gets called on every request\n\n\nfunction listwords({ props }) {\n    // Fetch data from external API\n   console.log(props)\n  \n    // Pass data to the page via props\n    return (\n\n        <div>\n          {props}\n        </div>\n    \n      )\n\n\n}\n\n listwords.getServerSideProps = async (context) => {\n    console.log(\"d\")\n   const data = await axios.get(`/api/words`, { headers: { 'Content-Type': 'application/json' } }\n\n    ) .then(res=> {return JSON.stringify(res)})\n      .catch(function (error) {\n        console.log(error);\n      });\n  \n    return {\n      props: {\n        ...data\n      },\n    }\n  }\n\n\nexport default listwords\n\n\n/*\n\n.then(function (response) {\n        data = response.json()\n        console.log(response)\n      })*/"]},"metadata":{},"sourceType":"module"}