{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { useState, useEffect } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport TextField from '@material-ui/core/TextField';\nimport Card from '@material-ui/core/Card';\nimport Box from '@material-ui/core/Box';\nimport Button from '@material-ui/core/Button';\nvar useStyles = makeStyles(function (theme) {\n  return {\n    root: {\n      '& > *': {\n        margin: theme.spacing(1),\n        width: '25ch'\n      }\n    },\n    box: {\n      display: \"flex\",\n      flexDirection: \"column\",\n      justifyContent: \"center\",\n      marginTop: '5%',\n      textAlign: \"center\",\n      marginLeft: '10%',\n      marginRight: '10%'\n    },\n    card: {\n      display: \"flex\",\n      flexDirection: \"column\",\n      justifyContent: \"center\",\n      marginTop: '5%',\n      width: '100%',\n      textAlign: \"center\"\n    },\n    textfield: {\n      width: '50%',\n      marginTop: '5%'\n    },\n    button: {\n      width: '155px',\n      height: '45px',\n      background: '#202020 0% 0% no-repeat padding-box',\n      borderRadius: '80px',\n      opacity: '1',\n      display: \"flex\",\n      justifyContent: \"center\",\n      margin: 'auto',\n      marginTop: '10%',\n      marginBottom: '10%',\n      color: 'white'\n    }\n  };\n});\nexport default function AddTeam(props) {\n  var _jsx, _jsx2, _jsx3, _jsx4;\n\n  function addTeam(_x) {\n    return _addTeam.apply(this, arguments);\n  }\n\n  function _addTeam() {\n    _addTeam = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(e) {\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              e.preventDefault();\n              console.log(all);\n              props.returnData(all);\n\n            case 3:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n    return _addTeam.apply(this, arguments);\n  }\n\n  var _useState = useState({\n    org: \"\",\n    dept: \"\",\n    team: \"\",\n    ind: \"\",\n    subind: \"\"\n  }),\n      all = _useState[0],\n      setAll = _useState[1];\n\n  var classes = useStyles();\n  return __jsx(Box, {\n    Container: true,\n    className: classes.box\n  }, __jsx(Card, null, __jsx(TextField, {\n    name: \"org\",\n    value: all.org,\n    onChange: function onChange(e) {\n      return setAll(_objectSpread(_objectSpread({}, all), {}, _defineProperty({}, event.target.name, event.target.value)));\n    },\n    className: classes.textfield,\n    label: \"Organisation\",\n    variant: \"outlined\"\n  }), __jsx(\"br\", null), __jsx(TextField, (_jsx = {\n    name: \"dept\",\n    value: all.dept,\n    onChange: function onChange(e) {\n      return setAll(_objectSpread(_objectSpread({}, all), {}, _defineProperty({}, event.target.name, event.target.value)));\n    },\n    className: classes.textfield\n  }, _defineProperty(_jsx, \"className\", classes.textfield), _defineProperty(_jsx, \"label\", \"Department\"), _defineProperty(_jsx, \"variant\", \"outlined\"), _jsx)), __jsx(\"br\", null), __jsx(TextField, (_jsx2 = {\n    name: \"team\",\n    value: all.team,\n    onChange: function onChange(e) {\n      return setAll(_objectSpread(_objectSpread({}, all), {}, _defineProperty({}, event.target.name, event.target.value)));\n    },\n    className: classes.textfield\n  }, _defineProperty(_jsx2, \"className\", classes.textfield), _defineProperty(_jsx2, \"label\", \"Team Name\"), _defineProperty(_jsx2, \"variant\", \"outlined\"), _jsx2)), __jsx(\"br\", null), __jsx(TextField, (_jsx3 = {\n    name: \"ind\",\n    value: all.ind,\n    onChange: function onChange(e) {\n      return setAll(_objectSpread(_objectSpread({}, all), {}, _defineProperty({}, event.target.name, event.target.value)));\n    },\n    className: classes.textfield\n  }, _defineProperty(_jsx3, \"className\", classes.textfield), _defineProperty(_jsx3, \"label\", \"Industry\"), _defineProperty(_jsx3, \"variant\", \"outlined\"), _jsx3)), __jsx(\"br\", null), __jsx(TextField, (_jsx4 = {\n    name: \"subind\",\n    value: all.subind,\n    onChange: function onChange(e) {\n      return setAll(_objectSpread(_objectSpread({}, all), {}, _defineProperty({}, event.target.name, event.target.value)));\n    },\n    className: classes.textfield\n  }, _defineProperty(_jsx4, \"className\", classes.textfield), _defineProperty(_jsx4, \"label\", \"Sub Industry\"), _defineProperty(_jsx4, \"variant\", \"outlined\"), _jsx4)), __jsx(\"br\", null), __jsx(Button, {\n    variant: \"contained\",\n    onClick: addTeam,\n    className: classes.button,\n    color: \"primary\"\n  }, \"Create Team\")));\n}","map":null,"metadata":{},"sourceType":"module"}