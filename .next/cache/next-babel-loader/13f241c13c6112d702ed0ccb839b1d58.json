{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\n\nvar _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { useState, useEffect } from 'react';\nimport Button from '@material-ui/core/Button';\nimport { makeStyles } from '@material-ui/core/styles';\nimport TextField from '@material-ui/core/TextField';\nimport Box from '@material-ui/core/Box';\nimport { Typography } from '@material-ui/core';\nimport Card from '@material-ui/core/Card';\nimport CardActions from '@material-ui/core/CardActions';\nimport Wordcard from '../components/wordcard';\nimport Chip from '@material-ui/core/Chip';\nimport Paper from '@material-ui/core/Paper';\nimport { wordtest } from '../utils/words';\nvar useStyles = makeStyles(function (theme) {\n  return {\n    root: {\n      marginTop: '0%',\n      marginRight: '50%',\n      marginLeft: '50%'\n    },\n    grid: {\n      spacing: 24,\n      direction: \"column\",\n      alignItems: \"center\",\n      justify: \"center\"\n    },\n    defInput: {\n      opacity: '1',\n      marginBottom: '5%'\n    },\n    preview: {\n      width: '105px',\n      height: '25px',\n      background: '#202020 0% 0% no-repeat padding-box',\n      borderRadius: '80px',\n      opacity: '1',\n      display: \"flex\",\n      justifyContent: \"center\",\n      margin: 'auto',\n      marginTop: '5%',\n      color: 'white'\n    },\n    add: {\n      width: '105px',\n      height: '25px',\n      background: '#202020 0% 0% no-repeat padding-box',\n      borderRadius: '80px',\n      opacity: '1',\n      display: \"flex\",\n      justifyContent: \"center\",\n      margin: 'auto',\n      marginBottom: '5%',\n      marginTop: '5%',\n      color: 'white'\n    },\n    card: {\n      display: 'flex',\n      flexDirection: 'column',\n      textAlign: 'center',\n      width: '500px'\n    },\n    termInput: {\n      opacity: '1',\n      marginBottom: '5%'\n    },\n    bullet: {\n      display: 'inline-block',\n      margin: '0 2px',\n      transform: 'scale(0.8)'\n    },\n    title: {\n      fontSize: 38\n    },\n    pos: {\n      marginBottom: 32\n    },\n    box: {\n      display: \"flex\",\n      flexDirection: \"column\",\n      justifyContent: \"center\",\n      marginTop: '5%',\n      marginLeft: '20%',\n      marginRight: '20%',\n      textAlign: \"center\"\n    },\n    chip: {\n      margin: theme.spacing(0.5)\n    }\n  };\n});\nexport default function addwordform(props) {\n  _s();\n\n  var classes = useStyles();\n\n  var _useState = useState(false),\n      ispreview = _useState[0],\n      setPreview = _useState[1];\n\n  var _useState2 = useState({\n    word: \"\",\n    definition: \"\"\n  }),\n      all = _useState2[0],\n      setAll = _useState2[1];\n\n  var _useState3 = useState([]),\n      topics = _useState3[0],\n      getTopics = _useState3[1];\n\n  var sendPreview = function sendPreview(e) {\n    e.preventDefault();\n    props.returnTopics(all.definition);\n    setPreview(true);\n  };\n\n  function addWord(_x) {\n    return _addWord.apply(this, arguments);\n  }\n\n  function _addWord() {\n    _addWord = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(e) {\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              e.preventDefault();\n              props.returnData(all);\n\n            case 2:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n    return _addWord.apply(this, arguments);\n  }\n\n  var cancelPreview = function cancelPreview(e) {\n    e.preventDefault();\n    setPreview(false);\n  };\n\n  var edit = function edit(e) {\n    e.preventDefault();\n    setPreview(false);\n  };\n\n  useEffect(function () {\n    if (props.clear == true) {\n      clear();\n    }\n  }, [props.clear]);\n\n  function clear() {\n    setAll({\n      word: \"\",\n      definition: \"\"\n    });\n  }\n\n  return __jsx(React.Fragment, null, console.log(wordtest), ispreview == false ? __jsx(Box, {\n    Container: true,\n    className: classes.box\n  }, __jsx(TextField, {\n    name: \"word\",\n    variant: \"outlined\",\n    value: wordtest.word,\n    fullWidth: true,\n    className: classes.termInput,\n    onChange: function onChange(e) {\n      return setAll(_objectSpread(_objectSpread({}, all), {}, _defineProperty({}, event.target.name, event.target.value)));\n    },\n    label: \"Word\"\n  }), __jsx(TextField, {\n    name: \"definition\",\n    variant: \"outlined\",\n    className: classes.defInput,\n    value: wordtest.definition,\n    onChange: function onChange(e) {\n      return setAll(_objectSpread(_objectSpread({}, all), {}, _defineProperty({}, event.target.name, event.target.value)));\n    },\n    multiline: true,\n    rows: 10,\n    label: \"Definition\"\n  }), __jsx(Button, {\n    variant: \"outlined\",\n    className: classes.preview,\n    onClick: sendPreview\n  }, __jsx(Typography, null, \"Preview\"))) : __jsx(React.Fragment, null, __jsx(Paper, null, props.topics.map(function (data, i) {\n    return __jsx(\"li\", {\n      key: i\n    }, __jsx(Chip, {\n      label: data.term,\n      className: classes.chip\n    }));\n  })), __jsx(Box, {\n    Container: true,\n    className: classes.box\n  }, __jsx(Card, null, __jsx(Wordcard, {\n    word: wordtest.word,\n    definition: wordtest.definition\n  }), __jsx(CardActions, null, __jsx(Button, {\n    className: classes.add,\n    variant: \"outlined\",\n    onClick: addWord\n  }, \"add\"), __jsx(Button, {\n    className: classes.add,\n    variant: \"outlined\",\n    onClick: cancelPreview\n  }, \"cancel\"), __jsx(Button, {\n    className: classes.add,\n    variant: \"outlined\",\n    onClick: edit\n  }, \"Edit\"))))));\n}\n\n_s(addwordform, \"/Kxn0H/PmKrh6oGWN+5fw4qXDqA=\", false, function () {\n  return [useStyles];\n});","map":{"version":3,"sources":["/Users/salahabdallah/Desktop/Dev/Jargon/components/add.js"],"names":["React","useState","useEffect","Button","makeStyles","TextField","Box","Typography","Card","CardActions","Wordcard","Chip","Paper","wordtest","useStyles","theme","root","marginTop","marginRight","marginLeft","grid","spacing","direction","alignItems","justify","defInput","opacity","marginBottom","preview","width","height","background","borderRadius","display","justifyContent","margin","color","add","card","flexDirection","textAlign","termInput","bullet","transform","title","fontSize","pos","box","chip","addwordform","props","classes","ispreview","setPreview","word","definition","all","setAll","topics","getTopics","sendPreview","e","preventDefault","returnTopics","addWord","returnData","cancelPreview","edit","clear","console","log","event","target","name","value","map","data","i","term"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport Button from '@material-ui/core/Button';\nimport { makeStyles } from '@material-ui/core/styles';\nimport TextField from '@material-ui/core/TextField';\nimport Box from '@material-ui/core/Box';\nimport { Typography } from '@material-ui/core';\nimport Card from '@material-ui/core/Card';\nimport CardActions from '@material-ui/core/CardActions';\nimport Wordcard from '../components/wordcard';\nimport Chip from '@material-ui/core/Chip';\nimport Paper from '@material-ui/core/Paper';\nimport {wordtest} from '../utils/words';\n\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    marginTop: '0%',\n    marginRight: '50%',\n    marginLeft: '50%'\n  },\n  grid: {\n    spacing: 24,\n    direction: \"column\",\n    alignItems: \"center\",\n    justify: \"center\"\n  },\n  defInput: {\n\n    opacity: '1',\n    marginBottom: '5%'\n\n  },\n  preview: {\n\n    width: '105px',\n    height: '25px',\n    background: '#202020 0% 0% no-repeat padding-box',\n    borderRadius: '80px',\n    opacity: '1',\n    display: \"flex\",\n    justifyContent: \"center\",\n    margin: 'auto',\n    marginTop: '5%',\n    color: 'white'\n\n  },\n  add: {\n\n    width: '105px',\n    height: '25px',\n    background: '#202020 0% 0% no-repeat padding-box',\n    borderRadius: '80px',\n    opacity: '1',\n    display: \"flex\",\n    justifyContent: \"center\",\n    margin: 'auto',\n    marginBottom: '5%',\n    marginTop: '5%',\n    color: 'white'\n\n  },\n  card: {\n    display: 'flex',\n    flexDirection: 'column',\n    textAlign: 'center',\n    width: '500px'\n  },\n  termInput: {\n\n    opacity: '1',\n    marginBottom: '5%'\n\n  },\n  bullet: {\n    display: 'inline-block',\n    margin: '0 2px',\n    transform: 'scale(0.8)',\n  },\n  title: {\n    fontSize: 38,\n  },\n  pos: {\n    marginBottom: 32,\n  },\n  box: {\n\n    display: \"flex\",\n    flexDirection: \"column\",\n    justifyContent: \"center\",\n    marginTop: '5%',\n    marginLeft: '20%',\n    marginRight: '20%',\n    textAlign: \"center\"\n\n  },\n  chip: {\n    margin: theme.spacing(0.5),\n  }\n}));\n\nexport default function addwordform(props) {\n\n  const classes = useStyles();\n  const [ispreview, setPreview] = useState(false);\n  const [all, setAll] = useState({ word: \"\", definition: \"\" });\n  const [topics, getTopics] = useState([]);\n\n  const sendPreview = (e) => {\n\n    e.preventDefault();\n    props.returnTopics(all.definition);\n    setPreview(true)\n\n  }\n\n  async function addWord(e) {\n\n    e.preventDefault();\n    props.returnData(all);\n  }\n\n  const cancelPreview = (e) => {\n\n    e.preventDefault();\n    setPreview(false)\n\n  }\n\n  const edit = (e) => {\n\n    e.preventDefault();\n    setPreview(false)\n\n  }\n\n  useEffect(() => {\n\n    if (props.clear == true) {\n      clear()\n    }\n\n  }, [props.clear])\n\n  function clear() {\n\n    setAll({ word: \"\", definition: \"\" });\n  }\n\n\n  return (\n    <>\n    {console.log(wordtest)}\n      {ispreview == false ?\n\n        <Box Container className={classes.box}>\n          <TextField name=\"word\"\n            variant=\"outlined\"\n            value={wordtest.word}\n            fullWidth\n            className={classes.termInput}\n            onChange={e => setAll({ ...all, [event.target.name]: event.target.value })} label=\"Word\" />\n\n          <TextField name=\"definition\"\n            variant=\"outlined\"\n            className={classes.defInput}\n            value={wordtest.definition}\n            onChange={e => setAll({ ...all, [event.target.name]: event.target.value })} multiline rows={10} label=\"Definition\" />\n\n\n          <Button variant=\"outlined\" className={classes.preview} onClick={sendPreview}  >\n            <Typography >\n              Preview\n          </Typography>\n          </Button>\n        </Box>\n        :\n        <>\n          <Paper>\n            {props.topics.map((data, i) => {\n              return (\n                <li key={i}>\n                  <Chip\n                    label={data.term}\n                    className={classes.chip}\n                  />\n                </li>\n              );\n            })}\n          </Paper>\n          <Box Container className={classes.box}>\n\n            <Card>\n              <Wordcard word={wordtest.word} definition={wordtest.definition} />\n              <CardActions>\n                <Button className={classes.add} variant=\"outlined\" onClick={addWord} >\n                  add\n                 </Button>\n                <Button className={classes.add} variant=\"outlined\" onClick={cancelPreview} >\n                  cancel\n                 </Button>\n                <Button className={classes.add} variant=\"outlined\" onClick={edit} >\n                  Edit\n                </Button>\n              </CardActions>\n            </Card>\n          </Box>\n        </>\n      }\n    </>\n  );\n}\n\n"]},"metadata":{},"sourceType":"module"}