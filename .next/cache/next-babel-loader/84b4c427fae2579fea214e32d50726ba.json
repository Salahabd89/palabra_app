{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\n\nvar _s = $RefreshSig$();\n\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { useState, useContext } from 'react';\nimport Addwordform from '../components/add';\nimport axios from 'axios';\nimport Router from 'next/router';\nimport { UserContext } from '../providers/userProvider';\nimport { useStyles } from '../utils/style';\nexport default function addword() {\n  _s();\n\n  var _useState = useState({\n    word: '',\n    definition: ''\n  }),\n      wordanddef = _useState[0],\n      setWordandDef = _useState[1];\n\n  var user = useContext(UserContext);\n\n  var getData = /*#__PURE__*/function () {\n    var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(word) {\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              setWordandDef({\n                word: word.word,\n                definition: word.definition\n              });\n              _context.next = 3;\n              return axios.get(\"/api/add\", {\n                params: word\n              }, {\n                headers: {\n                  'Content-Type': 'application/json'\n                }\n              }).then(function (response) {\n                if (response.data.added == true) {\n                  Router.push('/congrats');\n                }\n              })[\"catch\"](function (error) {\n                console.log(error);\n              });\n\n            case 3:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    return function getData(_x) {\n      return _ref.apply(this, arguments);\n    };\n  }();\n\n  var getTopics = /*#__PURE__*/function () {\n    var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2(definition) {\n      return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              console.log(definition);\n              _context2.next = 3;\n              return axios.get(\"/api/topics\", {\n                params: definition\n              }, {\n                headers: {\n                  'Content-Type': 'application/json'\n                }\n              }).then(function (response) {\n                console.log(response);\n              })[\"catch\"](function (error) {\n                console.log(error);\n              });\n\n            case 3:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, _callee2);\n    }));\n\n    return function getTopics(_x2) {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n\n  return __jsx(Addwordform, {\n    returnData: getData,\n    returnTopics: getTopics,\n    topics: \"test\"\n  });\n}\n\n_s(addword, \"79hHezykdfbU1Uc80oTzyw9YDLk=\");","map":{"version":3,"sources":["/Users/salahabdallah/Desktop/Dev/Jargon/pages/addword.js"],"names":["useState","useContext","Addwordform","axios","Router","UserContext","useStyles","addword","word","definition","wordanddef","setWordandDef","user","getData","get","params","headers","then","response","data","added","push","error","console","log","getTopics"],"mappings":";;;;;;;AACA,SAASA,QAAT,EAAmBC,UAAnB,QAAqC,OAArC;AACA,OAAOC,WAAP,MAAwB,mBAAxB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,aAAnB;AACA,SAASC,WAAT,QAA4B,2BAA5B;AACA,SAAQC,SAAR,QAAwB,gBAAxB;AAEA,eAAe,SAASC,OAAT,GAAmB;AAAA;;AAAA,kBAEIP,QAAQ,CAAC;AAAEQ,IAAAA,IAAI,EAAE,EAAR;AAAYC,IAAAA,UAAU,EAAE;AAAxB,GAAD,CAFZ;AAAA,MAEzBC,UAFyB;AAAA,MAEbC,aAFa;;AAGhC,MAAMC,IAAI,GAAGX,UAAU,CAACI,WAAD,CAAvB;;AAEA,MAAMQ,OAAO;AAAA,wEAAG,iBAAOL,IAAP;AAAA;AAAA;AAAA;AAAA;AAEdG,cAAAA,aAAa,CAAC;AAAEH,gBAAAA,IAAI,EAAEA,IAAI,CAACA,IAAb;AAAmBC,gBAAAA,UAAU,EAAED,IAAI,CAACC;AAApC,eAAD,CAAb;AAFc;AAAA,qBAIRN,KAAK,CAACW,GAAN,aAAsB;AAAEC,gBAAAA,MAAM,EAAEP;AAAV,eAAtB,EAAwC;AAAEQ,gBAAAA,OAAO,EAAE;AAAE,kCAAgB;AAAlB;AAAX,eAAxC,EACHC,IADG,CACE,UAAUC,QAAV,EAAoB;AAExB,oBAAIA,QAAQ,CAACC,IAAT,CAAcC,KAAd,IAAuB,IAA3B,EAAiC;AAC/BhB,kBAAAA,MAAM,CAACiB,IAAP,CAAY,WAAZ;AACD;AACF,eANG,WAOG,UAAUC,KAAV,EAAiB;AACtBC,gBAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AACD,eATG,CAJQ;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAH;;AAAA,oBAAPT,OAAO;AAAA;AAAA;AAAA,KAAb;;AAgBA,MAAMY,SAAS;AAAA,yEAAE,kBAAOhB,UAAP;AAAA;AAAA;AAAA;AAAA;AACfc,cAAAA,OAAO,CAACC,GAAR,CAAYf,UAAZ;AADe;AAAA,qBAETN,KAAK,CAACW,GAAN,gBAAyB;AAAEC,gBAAAA,MAAM,EAAEN;AAAV,eAAzB,EAAiD;AAAEO,gBAAAA,OAAO,EAAE;AAAE,kCAAgB;AAAlB;AAAX,eAAjD,EACHC,IADG,CACE,UAAUC,QAAV,EAAoB;AAExBK,gBAAAA,OAAO,CAACC,GAAR,CAAYN,QAAZ;AACD,eAJG,WAKG,UAAUI,KAAV,EAAiB;AACtBC,gBAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AACD,eAPG,CAFS;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAF;;AAAA,oBAATG,SAAS;AAAA;AAAA;AAAA,KAAf;;AAYA,SACI,MAAC,WAAD;AAAa,IAAA,UAAU,EAAEZ,OAAzB;AAAkC,IAAA,YAAY,EAAEY,SAAhD;AAA2D,IAAA,MAAM,EAAE;AAAnE,IADJ;AAGD;;GApCuBlB,O","sourcesContent":["\nimport { useState, useContext } from 'react'\nimport Addwordform from '../components/add'\nimport axios from 'axios';\nimport Router from 'next/router';\nimport { UserContext } from '../providers/userProvider';\nimport {useStyles} from '../utils/style';\n\nexport default function addword() {\n\n  const [wordanddef, setWordandDef] = useState({ word: '', definition: '' });\n  const user = useContext(UserContext);\n\n  const getData = async (word) => {\n\n    setWordandDef({ word: word.word, definition: word.definition })\n\n    await axios.get(`/api/add`, { params: word }, { headers: { 'Content-Type': 'application/json' } })\n      .then(function (response) {\n\n        if (response.data.added == true) {\n          Router.push('/congrats')\n        }\n      })\n      .catch(function (error) {\n        console.log(error);\n      });\n  }\n\n  const getTopics= async (definition) => {\n    console.log(definition)\n    await axios.get(`/api/topics`, { params: definition }, { headers: { 'Content-Type': 'application/json' } })\n      .then(function (response) {\n\n        console.log(response)\n      })\n      .catch(function (error) {\n        console.log(error);\n      });\n  }\n\n  return (\n      <Addwordform returnData={getData} returnTopics={getTopics} topics={\"test\"}></Addwordform>\n  )\n}\n"]},"metadata":{},"sourceType":"module"}