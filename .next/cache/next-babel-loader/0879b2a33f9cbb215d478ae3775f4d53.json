{"ast":null,"code":"import React from \"react\";\nvar __jsx = React.createElement;\nimport Appbar from \"../components/appbar\";\nimport { useState, useEffect } from \"react\";\nimport router from \"next/router\";\nimport { Provider } from \"react-redux\";\nimport { createStore } from \"redux\";\nimport { rootReducer } from \"../store/reducers\";\n\nfunction MyApp({\n  Component,\n  pageProps\n}) {\n  const store = createStore(rootReducer);\n\n  function removeCookies() {\n    var res = document.cookie;\n    var multiple = res.split(\";\");\n\n    for (var i = 0; i < multiple.length; i++) {\n      var key = multiple[i].split(\"=\");\n      document.cookie = key[0] + \" =; expires = Thu, 01 Jan 1970 00:00:00 UTC\";\n    }\n  }\n\n  const handleLogout = () => {\n    removeCookies();\n    setLoggedUser(\"\");\n    setStatus([false]);\n    router.push(\"/\");\n    router.reload();\n  };\n\n  const {\n    0: loggedinuser,\n    1: setLoggedUser\n  } = useState(null);\n  const {\n    0: loggedin,\n    1: setStatus\n  } = useState(false);\n  useEffect(() => {\n    let user = null;\n\n    if (document.cookie.length > 0) {\n      user = document.cookie.split(\"; \").find(row => row.startsWith(\"username\")).split(\"=\")[1];\n    }\n\n    if (user != null) {\n      setLoggedUser(user);\n      setStatus(true);\n    }\n  }, [loggedinuser, loggedin]);\n  return __jsx(React.Fragment, null, __jsx(Provider, {\n    store: store\n  }, __jsx(Appbar, {\n    user: loggedinuser,\n    loggedInState: loggedin,\n    logout: handleLogout\n  }, \" \"), __jsx(Component, pageProps)));\n}\n\nexport default MyApp;","map":{"version":3,"sources":["/Users/salahabdallah/Desktop/Dev/Jargon/pages/_app.js"],"names":["Appbar","useState","useEffect","router","Provider","createStore","rootReducer","MyApp","Component","pageProps","store","removeCookies","res","document","cookie","multiple","split","i","length","key","handleLogout","setLoggedUser","setStatus","push","reload","loggedinuser","loggedin","user","find","row","startsWith"],"mappings":";;AAAA,OAAOA,MAAP,MAAmB,sBAAnB;AACA,SAASC,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;AACA,OAAOC,MAAP,MAAmB,aAAnB;AACA,SAASC,QAAT,QAAyB,aAAzB;AACA,SAASC,WAAT,QAA4B,OAA5B;AACA,SAASC,WAAT,QAA4B,mBAA5B;;AAEA,SAASC,KAAT,CAAe;AAAEC,EAAAA,SAAF;AAAaC,EAAAA;AAAb,CAAf,EAAyC;AACvC,QAAMC,KAAK,GAAGL,WAAW,CAACC,WAAD,CAAzB;;AAEA,WAASK,aAAT,GAAyB;AACvB,QAAIC,GAAG,GAAGC,QAAQ,CAACC,MAAnB;AACA,QAAIC,QAAQ,GAAGH,GAAG,CAACI,KAAJ,CAAU,GAAV,CAAf;;AACA,SAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGF,QAAQ,CAACG,MAA7B,EAAqCD,CAAC,EAAtC,EAA0C;AACxC,UAAIE,GAAG,GAAGJ,QAAQ,CAACE,CAAD,CAAR,CAAYD,KAAZ,CAAkB,GAAlB,CAAV;AACAH,MAAAA,QAAQ,CAACC,MAAT,GAAkBK,GAAG,CAAC,CAAD,CAAH,GAAS,6CAA3B;AACD;AACF;;AAED,QAAMC,YAAY,GAAG,MAAM;AACzBT,IAAAA,aAAa;AACbU,IAAAA,aAAa,CAAC,EAAD,CAAb;AACAC,IAAAA,SAAS,CAAC,CAAC,KAAD,CAAD,CAAT;AAEAnB,IAAAA,MAAM,CAACoB,IAAP,CAAY,GAAZ;AACApB,IAAAA,MAAM,CAACqB,MAAP;AACD,GAPD;;AASA,QAAM;AAAA,OAACC,YAAD;AAAA,OAAeJ;AAAf,MAAgCpB,QAAQ,CAAC,IAAD,CAA9C;AAEA,QAAM;AAAA,OAACyB,QAAD;AAAA,OAAWJ;AAAX,MAAwBrB,QAAQ,CAAC,KAAD,CAAtC;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACd,QAAIyB,IAAI,GAAG,IAAX;;AAEA,QAAId,QAAQ,CAACC,MAAT,CAAgBI,MAAhB,GAAyB,CAA7B,EAAgC;AAC9BS,MAAAA,IAAI,GAAGd,QAAQ,CAACC,MAAT,CACJE,KADI,CACE,IADF,EAEJY,IAFI,CAEEC,GAAD,IAASA,GAAG,CAACC,UAAJ,CAAe,UAAf,CAFV,EAGJd,KAHI,CAGE,GAHF,EAGO,CAHP,CAAP;AAID;;AAED,QAAIW,IAAI,IAAI,IAAZ,EAAkB;AAChBN,MAAAA,aAAa,CAACM,IAAD,CAAb;AACAL,MAAAA,SAAS,CAAC,IAAD,CAAT;AACD;AACF,GAdQ,EAcN,CAACG,YAAD,EAAeC,QAAf,CAdM,CAAT;AAgBA,SACE,4BACE,MAAC,QAAD;AAAU,IAAA,KAAK,EAAEhB;AAAjB,KACE,MAAC,MAAD;AACE,IAAA,IAAI,EAAEe,YADR;AAEE,IAAA,aAAa,EAAEC,QAFjB;AAGE,IAAA,MAAM,EAAEN;AAHV,KAKG,GALH,CADF,EAQE,MAAC,SAAD,EAAeX,SAAf,CARF,CADF,CADF;AAcD;;AAED,eAAeF,KAAf","sourcesContent":["import Appbar from \"../components/appbar\";\nimport { useState, useEffect } from \"react\";\nimport router from \"next/router\";\nimport { Provider } from \"react-redux\";\nimport { createStore } from \"redux\";\nimport { rootReducer } from \"../store/reducers\";\n\nfunction MyApp({ Component, pageProps }) {\n  const store = createStore(rootReducer);\n\n  function removeCookies() {\n    var res = document.cookie;\n    var multiple = res.split(\";\");\n    for (var i = 0; i < multiple.length; i++) {\n      var key = multiple[i].split(\"=\");\n      document.cookie = key[0] + \" =; expires = Thu, 01 Jan 1970 00:00:00 UTC\";\n    }\n  }\n\n  const handleLogout = () => {\n    removeCookies();\n    setLoggedUser(\"\");\n    setStatus([false]);\n\n    router.push(\"/\");\n    router.reload();\n  };\n\n  const [loggedinuser, setLoggedUser] = useState(null);\n\n  const [loggedin, setStatus] = useState(false);\n\n  useEffect(() => {\n    let user = null;\n\n    if (document.cookie.length > 0) {\n      user = document.cookie\n        .split(\"; \")\n        .find((row) => row.startsWith(\"username\"))\n        .split(\"=\")[1];\n    }\n\n    if (user != null) {\n      setLoggedUser(user);\n      setStatus(true);\n    }\n  }, [loggedinuser, loggedin]);\n\n  return (\n    <>\n      <Provider store={store}>\n        <Appbar\n          user={loggedinuser}\n          loggedInState={loggedin}\n          logout={handleLogout}\n        >\n          {\" \"}\n        </Appbar>\n        <Component {...pageProps}></Component>\n      </Provider>\n    </>\n  );\n}\n\nexport default MyApp;\n"]},"metadata":{},"sourceType":"module"}