{"ast":null,"code":"var _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\nimport React, { useState, useEffect } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport IconButton from '@material-ui/core/IconButton';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport Menu from '@material-ui/core/Menu';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport { withCookies, Cookies } from 'react-cookie';\nimport { instanceOf } from 'prop-types';\nvar useStyles = makeStyles(function (theme) {\n  return {\n    root: {\n      flexGrow: 1\n    },\n    appBar: {\n      top: '0px',\n      left: '0px',\n      background: '#202020',\n      border: '1px solid #707070',\n      opacity: '1',\n      position: \"static\"\n    },\n    menuButton: {\n      marginRight: theme.spacing(2)\n    },\n    title: {\n      flexGrow: 1\n    }\n  };\n});\nexport default function ButtonAppBar(props) {\n  _s();\n\n  var classes = useStyles();\n\n  var _useState = useState(null),\n      loggedInUser = _useState[0],\n      setLoggedInUser = _useState[1];\n\n  var _useState2 = useState(false),\n      loggedIn = _useState2[0],\n      setLoggedIn = _useState2[1];\n\n  var _useState3 = useState(null),\n      anchorEl = _useState3[0],\n      setAnchorEl = _useState3[1];\n\n  var handleClick = function handleClick(event) {\n    setAnchorEl(event.currentTarget);\n  };\n\n  var cookies = instanceOf(Cookies).isRequired;\n  console.log(props);\n\n  var handleClose = function handleClose() {\n    setAnchorEl(null);\n  };\n\n  var loggedInStatus = function loggedInStatus() {\n    setLoggedInUser(null);\n    props.logout(true);\n  };\n\n  useEffect(function () {\n    setLoggedInUser(props.user);\n    setLoggedIn(props.loggedInState);\n  }, []);\n  return __jsx(\"div\", {\n    className: classes.root\n  }, __jsx(AppBar, {\n    className: classes.appBar\n  }, __jsx(Toolbar, null, __jsx(Button, {\n    \"aria-controls\": \"simple-menu\",\n    \"aria-haspopup\": \"true\",\n    onClick: handleClick\n  }, __jsx(MenuIcon, null)), __jsx(Menu, {\n    id: \"simple-menu\",\n    anchorEl: anchorEl,\n    keepMounted: true,\n    open: Boolean(anchorEl),\n    onClose: handleClose\n  }, __jsx(MenuItem, {\n    onClick: loggedInStatus\n  })), __jsx(Typography, {\n    variant: \"h6\",\n    className: classes.title\n  }), console.log(props.loggedInState), props.loggedInState == false ? __jsx(Button, {\n    href: \"../login\",\n    color: \"inherit\"\n  }, \"Login\") : __jsx(React.Fragment, null, __jsx(Button, {\n    href: \"../tea\",\n    color: \"inherit\"\n  }, props.user), __jsx(Button, {\n    textPrimary: \"white\",\n    onClick: loggedInStatus\n  }, \"Logout\")))));\n}\n\n_s(ButtonAppBar, \"+PmJr55bKlwqQpO9ZZrr7YcM97Q=\", false, function () {\n  return [useStyles];\n});\n\n_c = ButtonAppBar;\n\nvar _c;\n\n$RefreshReg$(_c, \"ButtonAppBar\");","map":{"version":3,"sources":["/Users/salahabdallah/Desktop/Dev/Jargon/components/appbar.js"],"names":["React","useState","useEffect","makeStyles","AppBar","Toolbar","Typography","Button","IconButton","MenuIcon","Menu","MenuItem","withCookies","Cookies","instanceOf","useStyles","theme","root","flexGrow","appBar","top","left","background","border","opacity","position","menuButton","marginRight","spacing","title","ButtonAppBar","props","classes","loggedInUser","setLoggedInUser","loggedIn","setLoggedIn","anchorEl","setAnchorEl","handleClick","event","currentTarget","cookies","isRequired","console","log","handleClose","loggedInStatus","logout","user","loggedInState","Boolean"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport IconButton from '@material-ui/core/IconButton';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport Menu from '@material-ui/core/Menu';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport { withCookies, Cookies } from 'react-cookie';\nimport { instanceOf } from 'prop-types';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    flexGrow: 1\n  },\n  appBar:{\n    top: '0px',\n    left: '0px',\n    background: '#202020',\n    border: '1px solid #707070',\n    opacity: '1',\n    position: \"static\"\n\n  },\n\n  menuButton: {\n    marginRight: theme.spacing(2),\n  },\n  title: {\n    flexGrow: 1,\n  },\n}));\n\n\nexport default function ButtonAppBar(props) {\n\n  const classes = useStyles();\n\n  const [loggedInUser, setLoggedInUser] = useState(null);\n  const [loggedIn, setLoggedIn] = useState(false);\n\n  const [anchorEl, setAnchorEl] = useState(null);\n\n  const handleClick = (event) => {\n    setAnchorEl(event.currentTarget);\n  };\n  let cookies = instanceOf(Cookies).isRequired\n\n  console.log(props)\n\n  const handleClose = () => {\n    setAnchorEl(null);\n  };\n\n  const loggedInStatus = () =>{\n\n    setLoggedInUser(null)\n\n    props.logout(true)\n\n  }\n\n  useEffect(() => {\n\n    setLoggedInUser(props.user)\n    setLoggedIn(props.loggedInState)\n\n}, []);\n\n\n  return (\n    <div className={classes.root}>\n      <AppBar className={classes.appBar} >\n        <Toolbar>\n          <Button aria-controls=\"simple-menu\" aria-haspopup=\"true\" onClick={handleClick}>\n            <MenuIcon></MenuIcon>\n          </Button>\n          <Menu\n            id=\"simple-menu\"\n            anchorEl={anchorEl}\n            keepMounted\n            open={Boolean(anchorEl)}\n            onClose={handleClose}\n          >\n            <MenuItem onClick={loggedInStatus}></MenuItem>\n          </Menu>\n\n          <Typography variant=\"h6\" className={classes.title}>\n          </Typography>\n          {console.log(props.loggedInState)}\n          {props.loggedInState == false ?\n          <Button href=\"../login\" color=\"inherit\">Login</Button>\n          :\n          <>\n            <Button href=\"../tea\" color=\"inherit\">{props.user}</Button>\n            <Button textPrimary ='white' onClick={loggedInStatus}>Logout</Button>\n          </>\n          }\n        </Toolbar>\n      </AppBar>\n    </div>\n  );\n}"]},"metadata":{},"sourceType":"module"}