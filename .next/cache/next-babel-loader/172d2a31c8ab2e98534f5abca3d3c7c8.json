{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _s = $RefreshSig$();\n\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { UserContext } from '../providers/userProvider';\nimport Appbar from '../components/appbar';\nimport { useState, useEffect } from 'react';\nimport Router from 'next/router'; // Hook\n\nfunction MyApp(_ref) {\n  _s();\n\n  var Component = _ref.Component,\n      pageProps = _ref.pageProps;\n\n  var handleLogout = function handleLogout() {\n    setLoggedUser(localStorage.clear('loggedInUser'));\n    setLoggedUser(\"\");\n    setStatus([false]);\n  };\n\n  var _useLocalStorage = useLocalStorage('loggedInUser', ''),\n      _useLocalStorage2 = _slicedToArray(_useLocalStorage, 2),\n      user = _useLocalStorage2[0],\n      setUser = _useLocalStorage2[1];\n\n  var _useState = useState(user),\n      loggedinuser = _useState[0],\n      setLoggedUser = _useState[1];\n\n  var _useState2 = useState(false),\n      loggedin = _useState2[0],\n      setStatus = _useState2[1];\n\n  useEffect(function () {\n    var user = localStorage.getItem('loggedInUser');\n    console.log(user);\n\n    if (user != null) {\n      setLoggedUser(user);\n      setStatus(true);\n    }\n  }, [loggedinuser, loggedin]);\n  useEffect(function () {\n    var user = localStorage.getItem('loggedInUser');\n    console.log(user);\n\n    if (user != null) {\n      setLoggedUser(user);\n      setStatus(true);\n    }\n  }, [loggedinuser]);\n  return __jsx(React.Fragment, null, __jsx(Appbar, {\n    user: loggedinuser,\n    loggedInState: loggedin,\n    logout: handleLogout\n  }, \"   \"), __jsx(Component, pageProps));\n}\n\n_s(MyApp, \"Jq/24zOjg0bLXT6CpiR/gqXi5Nw=\", true);\n\n_c = MyApp;\nexport default MyApp;\n\nvar _c;\n\n$RefreshReg$(_c, \"MyApp\");","map":{"version":3,"sources":["/Users/salahabdallah/Desktop/Dev/Jargon/pages/_app.js"],"names":["UserContext","Appbar","useState","useEffect","Router","MyApp","Component","pageProps","handleLogout","setLoggedUser","localStorage","clear","setStatus","useLocalStorage","user","setUser","loggedinuser","loggedin","getItem","console","log"],"mappings":";;;;;;AACA,SAASA,WAAT,QAA4B,2BAA5B;AACA,OAAOC,MAAP,MAAmB,sBAAnB;AACA,SAASC,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;AACA,OAAOC,MAAP,MAAmB,aAAnB,C,CAEA;;AAKA,SAASC,KAAT,OAAyC;AAAA;;AAAA,MAAxBC,SAAwB,QAAxBA,SAAwB;AAAA,MAAbC,SAAa,QAAbA,SAAa;;AAErC,MAAMC,YAAY,GAAG,SAAfA,YAAe,GAAM;AAEvBC,IAAAA,aAAa,CAACC,YAAY,CAACC,KAAb,CAAmB,cAAnB,CAAD,CAAb;AACAF,IAAAA,aAAa,CAAC,EAAD,CAAb;AACAG,IAAAA,SAAS,CAAC,CAAC,KAAD,CAAD,CAAT;AACH,GALD;;AAFqC,yBASbC,eAAe,CAAC,cAAD,EAAiB,EAAjB,CATF;AAAA;AAAA,MAS9BC,IAT8B;AAAA,MASxBC,OATwB;;AAAA,kBAWCb,QAAQ,CAACY,IAAD,CAXT;AAAA,MAW9BE,YAX8B;AAAA,MAWhBP,aAXgB;;AAAA,mBAaPP,QAAQ,CAAC,KAAD,CAbD;AAAA,MAa9Be,QAb8B;AAAA,MAapBL,SAboB;;AAerCT,EAAAA,SAAS,CAAC,YAAM;AAEZ,QAAMW,IAAI,GAAIJ,YAAY,CAACQ,OAAb,CAAqB,cAArB,CAAd;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAYN,IAAZ;;AACA,QAAIA,IAAI,IAAI,IAAZ,EAAiB;AAEbL,MAAAA,aAAa,CAACK,IAAD,CAAb;AACAF,MAAAA,SAAS,CAAC,IAAD,CAAT;AACH;AAEJ,GAVQ,EAUN,CAACI,YAAD,EAAcC,QAAd,CAVM,CAAT;AAYAd,EAAAA,SAAS,CAAC,YAAM;AAEZ,QAAMW,IAAI,GAAIJ,YAAY,CAACQ,OAAb,CAAqB,cAArB,CAAd;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAYN,IAAZ;;AACA,QAAIA,IAAI,IAAI,IAAZ,EAAiB;AAEbL,MAAAA,aAAa,CAACK,IAAD,CAAb;AACAF,MAAAA,SAAS,CAAC,IAAD,CAAT;AACH;AAEJ,GAVQ,EAUN,CAACI,YAAD,CAVM,CAAT;AAaA,SACI,4BACI,MAAC,MAAD;AAAQ,IAAA,IAAI,EAAEA,YAAd;AAA4B,IAAA,aAAa,EAAEC,QAA3C;AAAqD,IAAA,MAAM,EAAET;AAA7D,WADJ,EAEI,MAAC,SAAD,EAAeD,SAAf,CAFJ,CADJ;AAQH;;GAhDQF,K;;KAAAA,K;AAoDT,eAAeA,KAAf","sourcesContent":["\nimport { UserContext } from '../providers/userProvider';\nimport Appbar from '../components/appbar';\nimport { useState, useEffect } from 'react'\nimport Router from 'next/router';\n\n// Hook\n\n\n\n\nfunction MyApp({ Component, pageProps }) {\n\n    const handleLogout = () => {\n\n        setLoggedUser(localStorage.clear('loggedInUser'));\n        setLoggedUser(\"\");\n        setStatus([false]);\n    }\n\n    const [user, setUser] = useLocalStorage('loggedInUser', '');\n    \n    const [loggedinuser, setLoggedUser] = useState(user);\n\n    const [loggedin, setStatus] = useState(false);\n\n    useEffect(() => {\n\n        const user  = localStorage.getItem('loggedInUser');\n        console.log(user)\n        if (user != null){\n\n            setLoggedUser(user);\n            setStatus(true);\n        }\n\n    }, [loggedinuser,loggedin]);\n\n    useEffect(() => {\n\n        const user  = localStorage.getItem('loggedInUser');\n        console.log(user)\n        if (user != null){\n\n            setLoggedUser(user);\n            setStatus(true);\n        }\n\n    }, [loggedinuser]);\n    \n\n    return (\n        <>\n            <Appbar user={loggedinuser} loggedInState={loggedin} logout={handleLogout} >   </Appbar>\n            <Component {...pageProps} ></Component>\n        </>\n\n    )\n\n}\n\n\n\nexport default MyApp"]},"metadata":{},"sourceType":"module"}