{"ast":null,"code":"import React from \"react\";\nvar __jsx = React.createElement;\nimport { useState, useContext } from 'react';\nimport Addwordform from '../components/add';\nimport axios from 'axios';\nimport Router from 'next/router';\nimport { UserContext } from '../providers/userProvider';\nimport { useStyles } from '../utils/style';\nexport default function addword() {\n  const {\n    0: wordanddef,\n    1: setWordandDef\n  } = useState({\n    word: '',\n    definition: '',\n    topics: []\n  });\n  const {\n    0: topics,\n    1: setTopics\n  } = useState([]);\n  const user = useContext(UserContext);\n\n  const getData = async word => {\n    let termtoadd = {\n      word: word.word,\n      definition: word.definition,\n      topics: topics\n    };\n    setWordandDef({\n      termtoadd\n    });\n    await axios.get(`/api/add`, {\n      params: termtoadd\n    }, {\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    }).then(function (response) {\n      if (response.data.added == true) {\n        Router.push('/congrats');\n      }\n    }).catch(function (error) {\n      console.log(error);\n    });\n  };\n\n  const getTopics = async definition => {\n    let topics = [];\n    await axios.get(`/api/topics/`, {\n      params: definition\n    }, {\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    }).then(function (response) {\n      {\n        response.data.result[0].map((data, i) => {\n          topics.push(data.term);\n          console.log(topics);\n        });\n      }\n      setTopics(topics);\n    }).catch(function (error) {\n      console.log(error);\n    });\n  };\n\n  return __jsx(Addwordform, {\n    returnData: getData,\n    returnTopics: getTopics,\n    topics: topics\n  });\n}","map":{"version":3,"sources":["/Users/salahabdallah/Desktop/Dev/Jargon/pages/addword.js"],"names":["useState","useContext","Addwordform","axios","Router","UserContext","useStyles","addword","wordanddef","setWordandDef","word","definition","topics","setTopics","user","getData","termtoadd","get","params","headers","then","response","data","added","push","catch","error","console","log","getTopics","result","map","i","term"],"mappings":";;AACA,SAASA,QAAT,EAAmBC,UAAnB,QAAqC,OAArC;AACA,OAAOC,WAAP,MAAwB,mBAAxB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,aAAnB;AACA,SAASC,WAAT,QAA4B,2BAA5B;AACA,SAAQC,SAAR,QAAwB,gBAAxB;AAGA,eAAe,SAASC,OAAT,GAAmB;AAEhC,QAAM;AAAA,OAACC,UAAD;AAAA,OAAaC;AAAb,MAA8BT,QAAQ,CAAC;AAAEU,IAAAA,IAAI,EAAE,EAAR;AAAYC,IAAAA,UAAU,EAAE,EAAxB;AAA4BC,IAAAA,MAAM,EAAC;AAAnC,GAAD,CAA5C;AACA,QAAM;AAAA,OAACA,MAAD;AAAA,OAASC;AAAT,MAAsBb,QAAQ,CAAC,EAAD,CAApC;AACA,QAAMc,IAAI,GAAGb,UAAU,CAACI,WAAD,CAAvB;;AAEA,QAAMU,OAAO,GAAG,MAAOL,IAAP,IAAgB;AAE9B,QAAIM,SAAS,GAAG;AAAEN,MAAAA,IAAI,EAAEA,IAAI,CAACA,IAAb;AAAmBC,MAAAA,UAAU,EAAED,IAAI,CAACC,UAApC;AAAgDC,MAAAA,MAAM,EAAEA;AAAxD,KAAhB;AACAH,IAAAA,aAAa,CAAC;AAAEO,MAAAA;AAAF,KAAD,CAAb;AAEA,UAAMb,KAAK,CAACc,GAAN,CAAW,UAAX,EAAsB;AAAEC,MAAAA,MAAM,EAAEF;AAAV,KAAtB,EAA6C;AAAEG,MAAAA,OAAO,EAAE;AAAE,wBAAgB;AAAlB;AAAX,KAA7C,EACHC,IADG,CACE,UAAUC,QAAV,EAAoB;AAExB,UAAIA,QAAQ,CAACC,IAAT,CAAcC,KAAd,IAAuB,IAA3B,EAAiC;AAC/BnB,QAAAA,MAAM,CAACoB,IAAP,CAAY,WAAZ;AACD;AACF,KANG,EAQHC,KARG,CAQG,UAAUC,KAAV,EAAiB;AACtBC,MAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AACD,KAVG,CAAN;AAWD,GAhBD;;AAkBA,QAAMG,SAAS,GAAE,MAAOlB,UAAP,IAAsB;AAErC,QAAIC,MAAM,GAAI,EAAd;AAEA,UAAMT,KAAK,CAACc,GAAN,CAAW,cAAX,EAA0B;AAAEC,MAAAA,MAAM,EAAEP;AAAV,KAA1B,EAAkD;AAAEQ,MAAAA,OAAO,EAAE;AAAE,wBAAgB;AAAlB;AAAX,KAAlD,EACHC,IADG,CACE,UAAUC,QAAV,EAAoB;AAExB;AAACA,QAAAA,QAAQ,CAACC,IAAT,CAAcQ,MAAd,CAAqB,CAArB,EAAwBC,GAAxB,CAA4B,CAACT,IAAD,EAAOU,CAAP,KAAa;AACxCpB,UAAAA,MAAM,CAACY,IAAP,CAAYF,IAAI,CAACW,IAAjB;AACAN,UAAAA,OAAO,CAACC,GAAR,CAAYhB,MAAZ;AACD,SAHA;AAGE;AAEHC,MAAAA,SAAS,CAACD,MAAD,CAAT;AAED,KAVG,EAWHa,KAXG,CAWG,UAAUC,KAAV,EAAiB;AACtBC,MAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AACD,KAbG,CAAN;AAcD,GAlBD;;AAoBA,SACI,MAAC,WAAD;AAAa,IAAA,UAAU,EAAEX,OAAzB;AAAkC,IAAA,YAAY,EAAEc,SAAhD;AAA2D,IAAA,MAAM,EAAEjB;AAAnE,IADJ;AAGD","sourcesContent":["\nimport { useState, useContext } from 'react'\nimport Addwordform from '../components/add'\nimport axios from 'axios';\nimport Router from 'next/router';\nimport { UserContext } from '../providers/userProvider';\nimport {useStyles} from '../utils/style';\n\n\nexport default function addword() {\n\n  const [wordanddef, setWordandDef] = useState({ word: '', definition: '', topics:[] });\n  const [topics, setTopics] = useState([]);\n  const user = useContext(UserContext);\n\n  const getData = async (word) => {\n\n    let termtoadd = { word: word.word, definition: word.definition, topics: topics };\n    setWordandDef({ termtoadd })\n\n    await axios.get(`/api/add`, { params: termtoadd }, { headers: { 'Content-Type': 'application/json' } })\n      .then(function (response) {\n\n        if (response.data.added == true) {\n          Router.push('/congrats')\n        }\n      })\n      \n      .catch(function (error) {\n        console.log(error);\n      });\n  }\n\n  const getTopics= async (definition) => {\n    \n    let topics  = []\n\n    await axios.get(`/api/topics/`, { params: definition }, { headers: { 'Content-Type': 'application/json' } })\n      .then(function (response) {\n     \n        {response.data.result[0].map((data, i) => {\n          topics.push(data.term)\n          console.log(topics)\n        })}\n\n        setTopics(topics)\n\n      })\n      .catch(function (error) {\n        console.log(error);\n      });\n  }\n\n  return (\n      <Addwordform returnData={getData} returnTopics={getTopics} topics={topics}></Addwordform>\n  )\n}\n"]},"metadata":{},"sourceType":"module"}