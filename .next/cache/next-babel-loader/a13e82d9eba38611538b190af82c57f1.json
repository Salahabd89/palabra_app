{"ast":null,"code":"var __jsx = React.createElement;\nimport React, { useContext, useState } from \"react\";\nimport TextField from '@material-ui/core/TextField';\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\n\nconst SignUp = props => {\n  const {\n    0: email,\n    1: setEmail\n  } = useState(\"\");\n  const {\n    0: password,\n    1: setPassword\n  } = useState(\"\");\n  const {\n    0: displayName,\n    1: setDisplayName\n  } = useState(\"\");\n  const {\n    0: error,\n    1: setError\n  } = useState(null);\n\n  const createUserWithEmailAndPasswordHandler = async (event, displayName, email, password) => {\n    event.preventDefault();\n\n    try {\n      props.signupDetails(displayName, email, password);\n    } catch (error) {\n      setError('Error Signing up with email and password');\n    }\n\n    setEmail(\"\");\n    setPassword(\"\");\n    setDisplayName(\"\");\n  };\n\n  const onChangeHandler = event => {\n    const {\n      name,\n      value\n    } = event.currentTarget;\n\n    if (name === \"userEmail\") {\n      setEmail(value);\n    } else if (name === \"userPassword\") {\n      setPassword(value);\n    } else if (name === \"displayName\") {\n      setDisplayName(value);\n    }\n  };\n\n  return __jsx(React.Fragment, null, __jsx(Typography, null, \"Sign Up\"), __jsx(TextField, {\n    id: \"outlined-basic\",\n    type: \"text\",\n    className: \"my-1 p-1 w-full \",\n    name: \"displayName\",\n    placeholder: \"Display Name\",\n    value: displayName,\n    id: \"displayName\",\n    onChange: event => onChangeHandler(event)\n  }), __jsx(\"br\", null), __jsx(TextField, {\n    id: \"outlined-basic\",\n    type: \"email\",\n    className: \"my-1 p-1 w-full\",\n    name: \"userEmail\",\n    value: email,\n    placeholder: \"Email\",\n    id: \"userEmail\",\n    onChange: event => onChangeHandler(event)\n  }), __jsx(\"br\", null), __jsx(TextField, {\n    id: \"outlined-basic\",\n    type: \"password\",\n    className: \"mt-1 mb-3 p-1 w-full\",\n    name: \"userPassword\",\n    value: password,\n    placeholder: \"Password\",\n    id: \"userPassword\",\n    onChange: event => onChangeHandler(event)\n  }), __jsx(\"br\", null), __jsx(Button, {\n    className: \"bg-green-400 hover:bg-green-500 w-full py-2 text-white\",\n    onClick: event => {\n      createUserWithEmailAndPasswordHandler(event, displayName, email, password);\n    }\n  }, \"Log On\"));\n};\n\nexport default SignUp;","map":{"version":3,"sources":["/Users/salahabdallah/Desktop/Dev/Jargon/components/signup.js"],"names":["React","useContext","useState","TextField","Typography","Button","SignUp","props","email","setEmail","password","setPassword","displayName","setDisplayName","error","setError","createUserWithEmailAndPasswordHandler","event","preventDefault","signupDetails","onChangeHandler","name","value","currentTarget"],"mappings":"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","sourcesContent":["import React, { useContext, useState } from \"react\";\nimport TextField from '@material-ui/core/TextField';\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\n\nconst SignUp = (props) => {\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [displayName, setDisplayName] = useState(\"\");\n  const [error, setError] = useState(null);\n\n  const createUserWithEmailAndPasswordHandler = async (event, displayName, email, password) => {\n    event.preventDefault();\n    try {\n      props.signupDetails(displayName, email, password);\n    }\n    catch (error) {\n      setError('Error Signing up with email and password');\n    }\n\n    setEmail(\"\");\n    setPassword(\"\");\n    setDisplayName(\"\");\n  };\n\n  const onChangeHandler = event => {\n    const { name, value } = event.currentTarget;\n\n    if (name === \"userEmail\") {\n      setEmail(value);\n    } else if (name === \"userPassword\") {\n      setPassword(value);\n    } else if (name === \"displayName\") {\n      setDisplayName(value);\n    }\n  };\n\n  return (\n\n    <>\n      <Typography>Sign Up</Typography>\n      <TextField id=\"outlined-basic\"\n        type=\"text\"\n        className=\"my-1 p-1 w-full \"\n        name=\"displayName\"\n        placeholder=\"Display Name\"\n        value={displayName}\n        id=\"displayName\"\n        onChange={event => onChangeHandler(event)} />\n      <br />\n      <TextField id=\"outlined-basic\"\n        type=\"email\"\n        className=\"my-1 p-1 w-full\"\n        name=\"userEmail\"\n        value={email}\n        placeholder=\"Email\"\n        id=\"userEmail\"\n        onChange={event => onChangeHandler(event)}\n      />\n      <br />\n      <TextField id=\"outlined-basic\"\n        type=\"password\"\n        className=\"mt-1 mb-3 p-1 w-full\"\n        name=\"userPassword\"\n        value={password}\n        placeholder=\"Password\"\n        id=\"userPassword\"\n        onChange={event => onChangeHandler(event)} \n      />\n      <br/>\n      <Button\n        className=\"bg-green-400 hover:bg-green-500 w-full py-2 text-white\"\n        onClick={event => {\n          createUserWithEmailAndPasswordHandler(event, displayName, email, password);\n        }}>\n        Log On\n     </Button>\n    </>\n\n  );\n};\n\nexport default SignUp;"]},"metadata":{},"sourceType":"module"}