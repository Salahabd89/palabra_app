{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { useState, useEffect } from 'react';\nimport Button from '@material-ui/core/Button';\nimport { green } from '@material-ui/core/colors';\nimport Icon from '@material-ui/core/Icon';\nimport { fade, makeStyles } from '@material-ui/core/styles';\nimport Modal from '@material-ui/core/Modal';\nimport Backdrop from '@material-ui/core/Backdrop';\nimport Fade from '@material-ui/core/Fade';\nimport TextField from '@material-ui/core/TextField';\nvar useStyles = makeStyles(function (theme) {\n  return {\n    root: _defineProperty({\n      marginTop: '0%',\n      marginLeft: '0%'\n    }, \"marginLeft\", '50%'),\n    wordtxt: {\n      \"float\": 'top',\n      marginLeft: '10%',\n      display: 'flex'\n    },\n    modal: {\n      display: 'flex',\n      alignItems: 'center',\n      justifyContent: 'center',\n      padding: '0',\n      margin: 0\n    },\n    paper: {\n      backgroundColor: theme.palette.background.paper,\n      width: '50%',\n      height: '50%'\n    },\n    btn: _defineProperty({\n      position: 'relative',\n      borderRadius: theme.shape.borderRadius,\n      backgroundColor: fade(theme.palette.common.white, 0.15),\n      '&:hover': {\n        backgroundColor: fade(theme.palette.common.white, 0.25)\n      },\n      width: '100%',\n      justifyContent: 'center'\n    }, theme.breakpoints.up('sm'), {\n      marginLeft: theme.spacing(3),\n      width: 'auto'\n    })\n  };\n});\nexport default function ContainedButtons(props) {\n  var classes = useStyles();\n\n  var _useState = useState(false),\n      open = _useState[0],\n      setOpen = _useState[1];\n\n  var _useState2 = useState({\n    word: \"\",\n    definition: \"\"\n  }),\n      all = _useState2[0],\n      setAll = _useState2[1];\n\n  var _useState3 = useState(props.clear ? true : false),\n      clearText = _useState3[0],\n      setClear = _useState3[1];\n\n  var handleOpen = function handleOpen() {\n    setOpen(true);\n  };\n\n  var sendWord = function sendWord(e) {\n    e.preventDefault();\n    props.returnData(all);\n\n    if (props.clear == true) {\n      console.log(\"cleared\");\n      clear();\n    } //\n\n  };\n\n  useEffect(function () {\n    console.log(clearText);\n\n    if (props.cleartext == true) {\n      clear();\n    }\n  }, [clearText]);\n\n  function clear() {\n    setAll({\n      word: \"\",\n      definition: \"\"\n    });\n  }\n\n  var handleClose = function handleClose() {\n    setOpen(false);\n  };\n\n  return __jsx(\"div\", null, __jsx(\"div\", {\n    className: classes.root\n  }, __jsx(Button, {\n    className: classes.btn,\n    onClick: handleOpen\n  }, __jsx(Icon, {\n    style: {\n      fontSize: 40\n    }\n  }, \"add_circle\"))), __jsx(Modal, {\n    \"aria-labelledby\": \"transition-modal-title\",\n    \"aria-describedby\": \"transition-modal-description\",\n    className: classes.modal,\n    open: open,\n    onClose: handleClose,\n    closeAfterTransition: true,\n    BackdropComponent: Backdrop,\n    BackdropProps: {\n      timeout: 500\n    }\n  }, __jsx(Fade, {\n    \"in\": open\n  }, __jsx(\"div\", {\n    className: classes.paper\n  }, __jsx(\"form\", {\n    noValidate: true,\n    autoComplete: \"off\"\n  }, __jsx(\"div\", {\n    className: classes.wordtxt\n  }, __jsx(TextField, {\n    id: \"standard-basic\",\n    name: \"word\",\n    value: all.word,\n    onChange: function onChange(e) {\n      return setAll(_objectSpread(_objectSpread({}, all), {}, _defineProperty({}, event.target.name, event.target.value)));\n    },\n    label: \"Word\"\n  }), __jsx(\"br\", null), __jsx(TextField, {\n    id: \"standard-basic\",\n    name: \"definition\",\n    value: all.definition,\n    onChange: function onChange(e) {\n      return setAll(_objectSpread(_objectSpread({}, all), {}, _defineProperty({}, event.target.name, event.target.value)));\n    },\n    multiline: true,\n    rows: 10,\n    label: \"Definition\"\n  }), __jsx(\"br\", null), __jsx(Button, {\n    className: classes.btn,\n    onClick: sendWord\n  }, \"Add\")))))));\n}","map":null,"metadata":{},"sourceType":"module"}