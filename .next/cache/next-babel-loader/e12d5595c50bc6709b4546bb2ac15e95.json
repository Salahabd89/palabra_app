{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\n\nvar _s = $RefreshSig$();\n\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { useState, useContext } from \"react\";\nimport Addwordform from \"../components/add\";\nimport axios from \"axios\";\nimport Router from \"next/router\";\nimport { UserContext } from \"../providers/userProvider\";\nexport default function addword() {\n  _s();\n\n  var _useState = useState({\n    word: \"\",\n    definition: \"\",\n    topics: []\n  }),\n      wordanddef = _useState[0],\n      setWordandDef = _useState[1];\n\n  var _useState2 = useState([]),\n      topics = _useState2[0],\n      setTopics = _useState2[1];\n\n  var user = useContext(UserContext);\n\n  var getData = /*#__PURE__*/function () {\n    var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(word) {\n      var termtoadd;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              termtoadd = {\n                word: word.word,\n                definition: word.definition,\n                topics: topics\n              };\n              setWordandDef({\n                termtoadd: termtoadd\n              });\n              _context.next = 4;\n              return axios.get(\"/api/add\", {\n                params: termtoadd\n              }, {\n                headers: {\n                  \"Content-Type\": \"application/json\"\n                },\n                credentials: \"include\"\n              }).then(function (response) {\n                if (response.data.added == true) {\n                  Router.push(\"/congrats\");\n                }\n              })[\"catch\"](function (error) {\n                console.log(error);\n              });\n\n            case 4:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    return function getData(_x) {\n      return _ref.apply(this, arguments);\n    };\n  }();\n\n  var getTopics = /*#__PURE__*/function () {\n    var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2(definition) {\n      var topics;\n      return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              topics = [];\n              _context2.next = 3;\n              return axios.get(\"/api/topics/\", {\n                params: definition\n              }, {\n                headers: {\n                  \"Content-Type\": \"application/json\"\n                }\n              }).then(function (response) {\n                {\n                  response.data.result[0].map(function (data, i) {\n                    topics.push(data.term);\n                  });\n                }\n                setTopics(topics);\n              })[\"catch\"](function (error) {\n                console.log(error);\n              });\n\n            case 3:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, _callee2);\n    }));\n\n    return function getTopics(_x2) {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n\n  return __jsx(Addwordform, {\n    returnData: getData,\n    returnTopics: getTopics,\n    topics: topics\n  });\n}\n\n_s(addword, \"FxDiy9AaiQtZU3BFtUV502HNXqg=\");","map":{"version":3,"sources":["/Users/salahabdallah/Desktop/Dev/Jargon/pages/addword.js"],"names":["useState","useContext","Addwordform","axios","Router","UserContext","addword","word","definition","topics","wordanddef","setWordandDef","setTopics","user","getData","termtoadd","get","params","headers","credentials","then","response","data","added","push","error","console","log","getTopics","result","map","i","term"],"mappings":";;;;;;;AAAA,SAASA,QAAT,EAAmBC,UAAnB,QAAqC,OAArC;AACA,OAAOC,WAAP,MAAwB,mBAAxB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,aAAnB;AACA,SAASC,WAAT,QAA4B,2BAA5B;AAEA,eAAe,SAASC,OAAT,GAAmB;AAAA;;AAAA,kBACIN,QAAQ,CAAC;AAC3CO,IAAAA,IAAI,EAAE,EADqC;AAE3CC,IAAAA,UAAU,EAAE,EAF+B;AAG3CC,IAAAA,MAAM,EAAE;AAHmC,GAAD,CADZ;AAAA,MACzBC,UADyB;AAAA,MACbC,aADa;;AAAA,mBAMJX,QAAQ,CAAC,EAAD,CANJ;AAAA,MAMzBS,MANyB;AAAA,MAMjBG,SANiB;;AAOhC,MAAMC,IAAI,GAAGZ,UAAU,CAACI,WAAD,CAAvB;;AAEA,MAAMS,OAAO;AAAA,wEAAG,iBAAOP,IAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AACVQ,cAAAA,SADU,GACE;AACdR,gBAAAA,IAAI,EAAEA,IAAI,CAACA,IADG;AAEdC,gBAAAA,UAAU,EAAED,IAAI,CAACC,UAFH;AAGdC,gBAAAA,MAAM,EAAEA;AAHM,eADF;AAMdE,cAAAA,aAAa,CAAC;AAAEI,gBAAAA,SAAS,EAATA;AAAF,eAAD,CAAb;AANc;AAAA,qBAQRZ,KAAK,CACRa,GADG,aAGF;AAAEC,gBAAAA,MAAM,EAAEF;AAAV,eAHE,EAIF;AACEG,gBAAAA,OAAO,EAAE;AAAE,kCAAgB;AAAlB,iBADX;AAEEC,gBAAAA,WAAW,EAAE;AAFf,eAJE,EASHC,IATG,CASE,UAAUC,QAAV,EAAoB;AACxB,oBAAIA,QAAQ,CAACC,IAAT,CAAcC,KAAd,IAAuB,IAA3B,EAAiC;AAC/BnB,kBAAAA,MAAM,CAACoB,IAAP,CAAY,WAAZ;AACD;AACF,eAbG,WAeG,UAAUC,KAAV,EAAiB;AACtBC,gBAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AACD,eAjBG,CARQ;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAH;;AAAA,oBAAPX,OAAO;AAAA;AAAA;AAAA,KAAb;;AA4BA,MAAMc,SAAS;AAAA,yEAAG,kBAAOpB,UAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AACZC,cAAAA,MADY,GACH,EADG;AAAA;AAAA,qBAGVN,KAAK,CACRa,GADG,iBAGF;AAAEC,gBAAAA,MAAM,EAAET;AAAV,eAHE,EAIF;AAAEU,gBAAAA,OAAO,EAAE;AAAE,kCAAgB;AAAlB;AAAX,eAJE,EAMHE,IANG,CAME,UAAUC,QAAV,EAAoB;AACxB;AACEA,kBAAAA,QAAQ,CAACC,IAAT,CAAcO,MAAd,CAAqB,CAArB,EAAwBC,GAAxB,CAA4B,UAACR,IAAD,EAAOS,CAAP,EAAa;AACvCtB,oBAAAA,MAAM,CAACe,IAAP,CAAYF,IAAI,CAACU,IAAjB;AACD,mBAFD;AAGD;AAEDpB,gBAAAA,SAAS,CAACH,MAAD,CAAT;AACD,eAdG,WAeG,UAAUgB,KAAV,EAAiB;AACtBC,gBAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AACD,eAjBG,CAHU;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAH;;AAAA,oBAATG,SAAS;AAAA;AAAA;AAAA,KAAf;;AAuBA,SACE,MAAC,WAAD;AACE,IAAA,UAAU,EAAEd,OADd;AAEE,IAAA,YAAY,EAAEc,SAFhB;AAGE,IAAA,MAAM,EAAEnB;AAHV,IADF;AAOD;;GAnEuBH,O","sourcesContent":["import { useState, useContext } from \"react\";\nimport Addwordform from \"../components/add\";\nimport axios from \"axios\";\nimport Router from \"next/router\";\nimport { UserContext } from \"../providers/userProvider\";\n\nexport default function addword() {\n  const [wordanddef, setWordandDef] = useState({\n    word: \"\",\n    definition: \"\",\n    topics: [],\n  });\n  const [topics, setTopics] = useState([]);\n  const user = useContext(UserContext);\n\n  const getData = async (word) => {\n    let termtoadd = {\n      word: word.word,\n      definition: word.definition,\n      topics: topics,\n    };\n    setWordandDef({ termtoadd });\n\n    await axios\n      .get(\n        `/api/add`,\n        { params: termtoadd },\n        {\n          headers: { \"Content-Type\": \"application/json\" },\n          credentials: \"include\",\n        }\n      )\n      .then(function (response) {\n        if (response.data.added == true) {\n          Router.push(\"/congrats\");\n        }\n      })\n\n      .catch(function (error) {\n        console.log(error);\n      });\n  };\n\n  const getTopics = async (definition) => {\n    let topics = [];\n\n    await axios\n      .get(\n        `/api/topics/`,\n        { params: definition },\n        { headers: { \"Content-Type\": \"application/json\" } }\n      )\n      .then(function (response) {\n        {\n          response.data.result[0].map((data, i) => {\n            topics.push(data.term);\n          });\n        }\n\n        setTopics(topics);\n      })\n      .catch(function (error) {\n        console.log(error);\n      });\n  };\n\n  return (\n    <Addwordform\n      returnData={getData}\n      returnTopics={getTopics}\n      topics={topics}\n    ></Addwordform>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}