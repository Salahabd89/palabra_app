{"ast":null,"code":"var __jsx = React.createElement;\nimport React, { useState, useEffect } from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport AppBar from \"@material-ui/core/AppBar\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Button from \"@material-ui/core/Button\";\nimport Link from \"next/link\";\nimport Select from \"@material-ui/core/Select\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport { useSelector } from \"react-redux\";\nimport jsCookie from \"js-cookie\";\nconst useStyles = makeStyles(theme => ({\n  root: {\n    flexGrow: 1\n  },\n  appBar: {\n    top: \"0px\",\n    left: \"0px\",\n    background: \"#202020\",\n    border: \"1px solid #707070\",\n    opacity: \"1\",\n    position: \"static\"\n  },\n  rightside: {\n    flexGrow: 1,\n    marginRight: theme.spacing(2),\n    primary: {\n      main: \"white\"\n    }\n  },\n  leftside: {\n    marginLeft: theme.spacing(2)\n  },\n  menuButton: {\n    marginRight: theme.spacing(2)\n  },\n  title: {\n    flexGrow: 1\n  }\n}));\nexport default function ButtonAppBar(props) {\n  const classes = useStyles();\n  const {\n    0: loggedInUser,\n    1: setLoggedInUser\n  } = useState(null);\n  const {\n    0: avialableTeams,\n    1: setTeams\n  } = useState([]);\n  const {\n    0: currentTeam,\n    1: setCurrentTeams\n  } = useState(null);\n  const {\n    0: loggedIn,\n    1: setLoggedIn\n  } = useState(false);\n\n  const loggedInStatus = () => {\n    setLoggedInUser(null);\n    props.logout(true);\n  };\n\n  const handleChange = event => {\n    jsCookie.set(\"team\", event.target.value);\n    setCurrentTeams(event.target.value);\n  };\n\n  const ButtonLink = ({\n    className,\n    href,\n    hrefAs,\n    children\n  }) => __jsx(Link, {\n    href: href,\n    as: hrefAs\n  }, __jsx(\"a\", {\n    className: className\n  }, children));\n\n  useEffect(() => {\n    let displayName = localStorage.getItem(\"displayName\");\n    let teams = localStorage.getItem(\"teams\");\n\n    if (localStorage.getItem(\"selectedteams\") != null) {\n      setCurrentTeams(jsCookie.get(\"team\"));\n    }\n\n    if (teams != \"undefined\") {\n      let teamList = JSON.parse(teams);\n      setTeams(teamList);\n    }\n\n    setLoggedInUser(displayName);\n    setLoggedIn(props.loggedInState);\n  }, []);\n  return __jsx(\"div\", {\n    className: classes.root\n  }, __jsx(AppBar, {\n    className: classes.appBar\n  }, __jsx(Toolbar, null, __jsx(Button, {\n    className: classes.rightside,\n    component: ButtonLink,\n    href: \"/\",\n    hrefAs: \"/\",\n    color: \"inherit\"\n  }, \"Palabra\"), props.loggedInState == false ? __jsx(Typography, null, __jsx(Button, {\n    className: classes.leftside,\n    component: ButtonLink,\n    href: \"login\",\n    color: \"inherit\",\n    hrefAs: \"login\"\n  }, \"Login\"), __jsx(Button, {\n    className: classes.leftside,\n    component: ButtonLink,\n    href: \"signup\",\n    color: \"inherit\",\n    hrefAs: \"signup\"\n  }, \"Sign Up\")) : __jsx(React.Fragment, null, __jsx(Select, {\n    value: currentTeam,\n    style: {\n      background: \"white\",\n      width: \"10%\",\n      height: \"25px\",\n      marginRight: \"25px\"\n    },\n    variant: \"outlined\",\n    onChange: handleChange\n  }, avialableTeams != null ? avialableTeams.map(teams => {\n    return __jsx(MenuItem, {\n      selected: true,\n      style: {\n        backgroundColor: \"white\"\n      },\n      value: teams\n    }, teams);\n  }) : __jsx(MenuItem, null)), __jsx(Button, {\n    component: ButtonLink,\n    href: \"userprofile\",\n    color: \"inherit\",\n    hrefAs: \"userprofile\"\n  }, props.user), __jsx(Button, {\n    component: ButtonLink,\n    href: \"console\",\n    hrefAs: \"console\",\n    color: \"inherit\"\n  }, \"Console\"), __jsx(Button, {\n    color: \"inherit\",\n    onClick: loggedInStatus\n  }, \"Logout\")))));\n}","map":null,"metadata":{},"sourceType":"module"}