{"ast":null,"code":"var _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\nimport React, { useState, useEffect } from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport AppBar from \"@material-ui/core/AppBar\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Button from \"@material-ui/core/Button\";\nimport Link from \"next/link\";\nimport Select from \"@material-ui/core/Select\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport { useSelector } from \"react-redux\";\nvar useStyles = makeStyles(function (theme) {\n  return {\n    root: {\n      flexGrow: 1\n    },\n    appBar: {\n      top: \"0px\",\n      left: \"0px\",\n      background: \"#202020\",\n      border: \"1px solid #707070\",\n      opacity: \"1\",\n      position: \"static\"\n    },\n    rightside: {\n      flexGrow: 1,\n      marginRight: theme.spacing(2),\n      primary: {\n        main: \"white\"\n      }\n    },\n    leftside: {\n      marginLeft: theme.spacing(2)\n    },\n    menuButton: {\n      marginRight: theme.spacing(2)\n    },\n    title: {\n      flexGrow: 1\n    }\n  };\n});\nexport default function ButtonAppBar(props) {\n  _s();\n\n  var classes = useStyles();\n\n  var _useState = useState(null),\n      loggedInUser = _useState[0],\n      setLoggedInUser = _useState[1];\n\n  var _useState2 = useState([]),\n      avialableTeams = _useState2[0],\n      setTeams = _useState2[1];\n\n  var _useState3 = useState(\"Self\"),\n      currentTeam = _useState3[0],\n      setCurrentTeams = _useState3[1];\n\n  var _useState4 = useState(false),\n      loggedIn = _useState4[0],\n      setLoggedIn = _useState4[1];\n\n  var loggedInStatus = function loggedInStatus() {\n    setLoggedInUser(null);\n    props.logout(true);\n  };\n\n  var handleChange = function handleChange(event) {\n    console.log(event.currentTarget);\n    localStorage.setItem(\"selectedteams\", event.currentTarget);\n    setCurrentTeams(event.currentTarget);\n  };\n\n  var ButtonLink = function ButtonLink(_ref) {\n    var className = _ref.className,\n        href = _ref.href,\n        hrefAs = _ref.hrefAs,\n        children = _ref.children;\n    return __jsx(Link, {\n      href: href,\n      as: hrefAs\n    }, __jsx(\"a\", {\n      className: className\n    }, children));\n  };\n\n  useEffect(function () {\n    var displayName = localStorage.getItem(\"displayName\");\n    var teams = localStorage.getItem(\"teams\");\n    console.log(teams);\n\n    if (teams != \"undefined\") {\n      var teamList = JSON.parse(teams);\n      setTeams(teamList);\n    }\n\n    setLoggedInUser(displayName);\n    setLoggedIn(props.loggedInState);\n  }, []);\n  return __jsx(\"div\", {\n    className: classes.root\n  }, __jsx(AppBar, {\n    className: classes.appBar\n  }, __jsx(Toolbar, null, __jsx(Button, {\n    className: classes.rightside,\n    component: ButtonLink,\n    href: \"/\",\n    hrefAs: \"/\",\n    color: \"inherit\"\n  }, \"Palabra\"), props.loggedInState == false ? __jsx(Typography, null, __jsx(Button, {\n    className: classes.leftside,\n    component: ButtonLink,\n    href: \"login\",\n    color: \"inherit\",\n    hrefAs: \"login\"\n  }, \"Login\"), __jsx(Button, {\n    className: classes.leftside,\n    component: ButtonLink,\n    href: \"signup\",\n    color: \"inherit\",\n    hrefAs: \"signup\"\n  }, \"Sign Up\")) : __jsx(React.Fragment, null, __jsx(Select, {\n    value: currentTeam,\n    style: {\n      background: \"white\",\n      width: \"10%\",\n      height: \"25px\",\n      marginRight: \"25px\"\n    },\n    variant: \"outlined\",\n    onChange: handleChange\n  }, avialableTeams != null ? avialableTeams.map(function (teams) {\n    return __jsx(MenuItem, {\n      selected: true,\n      style: {\n        backgroundColor: \"white\"\n      },\n      value: teams\n    }, teams);\n  }) : __jsx(MenuItem, null)), __jsx(Button, {\n    component: ButtonLink,\n    href: \"userprofile\",\n    color: \"inherit\",\n    hrefAs: \"userprofile\"\n  }, props.user), __jsx(Button, {\n    component: ButtonLink,\n    href: \"console\",\n    hrefAs: \"console\",\n    color: \"inherit\"\n  }, \"Console\"), __jsx(Button, {\n    color: \"inherit\",\n    onClick: loggedInStatus\n  }, \"Logout\")))));\n}\n\n_s(ButtonAppBar, \"k0QQIg7gCk4qb+bv54mzeXvFtdI=\", false, function () {\n  return [useStyles];\n});\n\n_c = ButtonAppBar;\n\nvar _c;\n\n$RefreshReg$(_c, \"ButtonAppBar\");","map":{"version":3,"sources":["/Users/salahabdallah/Desktop/Dev/Jargon/components/appbar.js"],"names":["React","useState","useEffect","makeStyles","AppBar","Toolbar","Typography","Button","Link","Select","MenuItem","useSelector","useStyles","theme","root","flexGrow","appBar","top","left","background","border","opacity","position","rightside","marginRight","spacing","primary","main","leftside","marginLeft","menuButton","title","ButtonAppBar","props","classes","loggedInUser","setLoggedInUser","avialableTeams","setTeams","currentTeam","setCurrentTeams","loggedIn","setLoggedIn","loggedInStatus","logout","handleChange","event","console","log","currentTarget","localStorage","setItem","ButtonLink","className","href","hrefAs","children","displayName","getItem","teams","teamList","JSON","parse","loggedInState","width","height","map","backgroundColor","user"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport AppBar from \"@material-ui/core/AppBar\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Button from \"@material-ui/core/Button\";\nimport Link from \"next/link\";\nimport Select from \"@material-ui/core/Select\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport { useSelector } from \"react-redux\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    flexGrow: 1,\n  },\n  appBar: {\n    top: \"0px\",\n    left: \"0px\",\n    background: \"#202020\",\n    border: \"1px solid #707070\",\n    opacity: \"1\",\n    position: \"static\",\n  },\n  rightside: {\n    flexGrow: 1,\n    marginRight: theme.spacing(2),\n    primary: {\n      main: \"white\",\n    },\n  },\n  leftside: {\n    marginLeft: theme.spacing(2),\n  },\n\n  menuButton: {\n    marginRight: theme.spacing(2),\n  },\n  title: {\n    flexGrow: 1,\n  },\n}));\n\nexport default function ButtonAppBar(props) {\n  const classes = useStyles();\n\n  const [loggedInUser, setLoggedInUser] = useState(null);\n  const [avialableTeams, setTeams] = useState([]);\n  const [currentTeam, setCurrentTeams] = useState(\"Self\");\n  const [loggedIn, setLoggedIn] = useState(false);\n\n  const loggedInStatus = () => {\n    setLoggedInUser(null);\n\n    props.logout(true);\n  };\n\n  const handleChange = (event) => {\n    console.log(event.currentTarget);\n    localStorage.setItem(\"selectedteams\", event.currentTarget);\n    setCurrentTeams(event.currentTarget);\n  };\n\n  const ButtonLink = ({ className, href, hrefAs, children }) => (\n    <Link href={href} as={hrefAs}>\n      <a className={className}>{children}</a>\n    </Link>\n  );\n\n  useEffect(() => {\n    let displayName = localStorage.getItem(\"displayName\");\n    let teams = localStorage.getItem(\"teams\");\n\n    console.log(teams);\n\n    if (teams != \"undefined\") {\n      let teamList = JSON.parse(teams);\n      setTeams(teamList);\n    }\n\n    setLoggedInUser(displayName);\n\n    setLoggedIn(props.loggedInState);\n  }, []);\n\n  return (\n    <div className={classes.root}>\n      <AppBar className={classes.appBar}>\n        <Toolbar>\n          <Button\n            className={classes.rightside}\n            component={ButtonLink}\n            href={\"/\"}\n            hrefAs={\"/\"}\n            color=\"inherit\"\n          >\n            Palabra\n          </Button>\n          {props.loggedInState == false ? (\n            <Typography>\n              <Button\n                className={classes.leftside}\n                component={ButtonLink}\n                href={\"login\"}\n                color=\"inherit\"\n                hrefAs={\"login\"}\n              >\n                Login\n              </Button>\n              <Button\n                className={classes.leftside}\n                component={ButtonLink}\n                href={\"signup\"}\n                color=\"inherit\"\n                hrefAs={\"signup\"}\n              >\n                Sign Up\n              </Button>\n            </Typography>\n          ) : (\n            <>\n              <Select\n                value={currentTeam}\n                style={{\n                  background: \"white\",\n                  width: \"10%\",\n                  height: \"25px\",\n                  marginRight: \"25px\",\n                }}\n                variant={\"outlined\"}\n                onChange={handleChange}\n              >\n                {avialableTeams != null ? (\n                  avialableTeams.map((teams) => {\n                    return (\n                      <MenuItem\n                        selected\n                        style={{ backgroundColor: \"white\" }}\n                        value={teams}\n                      >\n                        {teams}\n                      </MenuItem>\n                    );\n                  })\n                ) : (\n                  <MenuItem />\n                )}\n              </Select>\n              <Button\n                component={ButtonLink}\n                href={\"userprofile\"}\n                color=\"inherit\"\n                hrefAs={\"userprofile\"}\n              >\n                {props.user}\n              </Button>\n              <Button\n                component={ButtonLink}\n                href={\"console\"}\n                hrefAs={\"console\"}\n                color=\"inherit\"\n              >\n                Console\n              </Button>\n              <Button color=\"inherit\" onClick={loggedInStatus}>\n                Logout\n              </Button>\n            </>\n          )}\n        </Toolbar>\n      </AppBar>\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}