{"ast":null,"code":"var __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React, { useState, useEffect } from 'react';\nimport Button from '@material-ui/core/Button';\nimport { green } from '@material-ui/core/colors';\nimport Icon from '@material-ui/core/Icon';\nimport { fade, makeStyles } from '@material-ui/core/styles';\nimport Modal from '@material-ui/core/Modal';\nimport Backdrop from '@material-ui/core/Backdrop';\nimport Fade from '@material-ui/core/Fade';\nimport TextField from '@material-ui/core/TextField';\nconst useStyles = makeStyles(theme => ({\n  root: {\n    marginTop: '0%',\n    marginLeft: '0%',\n    marginLeft: '50%'\n  },\n  wordtxt: {\n    float: 'top',\n    marginLeft: '10%',\n    display: 'flex'\n  },\n  modal: {\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'center',\n    padding: '0',\n    margin: 0\n  },\n  paper: {\n    backgroundColor: theme.palette.background.paper,\n    width: '50%',\n    height: '50%'\n  },\n  btn: {\n    position: 'relative',\n    borderRadius: theme.shape.borderRadius,\n    backgroundColor: fade(theme.palette.common.white, 0.15),\n    '&:hover': {\n      backgroundColor: fade(theme.palette.common.white, 0.25)\n    },\n    width: '100%',\n    justifyContent: 'center',\n    [theme.breakpoints.up('sm')]: {\n      marginLeft: theme.spacing(3),\n      width: 'auto'\n    }\n  }\n}));\nexport default function addwordform(props) {\n  const classes = useStyles();\n  const {\n    0: open,\n    1: setOpen\n  } = useState(false);\n  const {\n    0: all,\n    1: setAll\n  } = useState({\n    word: \"\",\n    definition: \"\"\n  });\n  const {\n    0: clearText,\n    1: setClear\n  } = useState(props.clear);\n\n  const sendWord = e => {\n    e.preventDefault();\n    props.returnData(all);\n  };\n\n  useEffect(() => {\n    if (props.clear == true) {\n      clear();\n      console.log(props.clear);\n    }\n\n    console.log(props.clear);\n  }, [props.clear]);\n\n  function clear() {\n    setAll({\n      word: \"\",\n      definition: \"\"\n    });\n  }\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  return __jsx(\"div\", null, __jsx(\"div\", {\n    className: classes.root\n  }), __jsx(Modal, {\n    \"aria-labelledby\": \"transition-modal-title\",\n    \"aria-describedby\": \"transition-modal-description\",\n    className: classes.modal,\n    open: open,\n    onClose: handleClose,\n    closeAfterTransition: true,\n    BackdropComponent: Backdrop,\n    BackdropProps: {\n      timeout: 500\n    }\n  }, __jsx(Fade, {\n    in: open\n  }, __jsx(\"div\", {\n    className: classes.paper\n  }, __jsx(\"form\", {\n    noValidate: true,\n    autoComplete: \"off\"\n  }, __jsx(\"div\", {\n    className: classes.wordtxt\n  }, __jsx(TextField, {\n    id: \"standard-basic\",\n    name: \"word\",\n    value: all.word,\n    onChange: e => setAll(_objectSpread(_objectSpread({}, all), {}, {\n      [event.target.name]: event.target.value\n    })),\n    label: \"Word\"\n  }), __jsx(\"br\", null), __jsx(TextField, {\n    id: \"standard-basic\",\n    name: \"definition\",\n    value: all.definition,\n    onChange: e => setAll(_objectSpread(_objectSpread({}, all), {}, {\n      [event.target.name]: event.target.value\n    })),\n    multiline: true,\n    rows: 10,\n    label: \"Definition\"\n  }), __jsx(\"br\", null), __jsx(Button, {\n    className: classes.btn,\n    onClick: sendWord\n  }, \"Add\")))))));\n}","map":{"version":3,"sources":["/Users/salahabdallah/Desktop/Dev/Jargon/components/add.js"],"names":["React","useState","useEffect","Button","green","Icon","fade","makeStyles","Modal","Backdrop","Fade","TextField","useStyles","theme","root","marginTop","marginLeft","wordtxt","float","display","modal","alignItems","justifyContent","padding","margin","paper","backgroundColor","palette","background","width","height","btn","position","borderRadius","shape","common","white","breakpoints","up","spacing","addwordform","props","classes","open","setOpen","all","setAll","word","definition","clearText","setClear","clear","sendWord","e","preventDefault","returnData","console","log","handleClose","timeout","event","target","name","value"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport Button from '@material-ui/core/Button';\nimport { green } from '@material-ui/core/colors';\nimport Icon from '@material-ui/core/Icon';\nimport { fade, makeStyles } from '@material-ui/core/styles';\nimport Modal from '@material-ui/core/Modal';\nimport Backdrop from '@material-ui/core/Backdrop';\nimport Fade from '@material-ui/core/Fade';\nimport TextField from '@material-ui/core/TextField';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    marginTop: '0%',\n    marginLeft: '0%',\n    marginLeft: '50%'\n  },\n  wordtxt: {\n    float: 'top',\n    marginLeft: '10%',\n    display: 'flex'\n  },\n  modal: {\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'center',\n    padding: '0',\n    margin: 0\n  },\n\n  paper: {\n    backgroundColor: theme.palette.background.paper,\n    width: '50%',\n    height: '50%'\n  },\n  btn: {\n\n    position: 'relative',\n    borderRadius: theme.shape.borderRadius,\n    backgroundColor: fade(theme.palette.common.white, 0.15),\n    '&:hover': {\n      backgroundColor: fade(theme.palette.common.white, 0.25),\n    },\n    width: '100%',\n    justifyContent: 'center',\n    [theme.breakpoints.up('sm')]: {\n      marginLeft: theme.spacing(3),\n      width: 'auto',\n    },\n  }\n\n}));\n\nexport default function addwordform(props) {\n\n  const classes = useStyles();\n  const [open, setOpen] = useState(false);\n  const [all, setAll] = useState({ word: \"\", definition: \"\" });\n  const [clearText, setClear] = useState(props.clear)\n\n\n\n  const sendWord = (e) => {\n\n    e.preventDefault();\n \n    props.returnData(all);\n\n  }\n\n\n  useEffect(() => {\n\n    if(props.clear == true){\n      clear()\n\n      console.log(props.clear)\n    }\n    console.log(props.clear)\n\n  },[props.clear])\n\n  function clear(){\n\n    setAll({ word: \"\", definition: \"\" });\n  }\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n  \n\n  return (\n    <div>\n      <div className={classes.root}>\n\n      </div>\n\n      <Modal\n        aria-labelledby=\"transition-modal-title\"\n        aria-describedby=\"transition-modal-description\"\n        className={classes.modal}\n        open={open}\n        onClose={handleClose}\n        closeAfterTransition\n        BackdropComponent={Backdrop}\n        BackdropProps={{\n          timeout: 500,\n        }}\n      >\n        <Fade in={open}>\n\n          <div className={classes.paper} >\n            <form noValidate autoComplete=\"off\">\n              <div className={classes.wordtxt} >\n                <TextField id=\"standard-basic\"  name=\"word\" value = {all.word}  onChange={e => setAll({...all, [event.target.name]: event.target.value})} label=\"Word\" />\n                <br />\n                <TextField id=\"standard-basic\" name=\"definition\" value = {all.definition} onChange={e => setAll({...all, [event.target.name]: event.target.value})} multiline rows={10} label=\"Definition\" />\n                <br />\n                <Button className={classes.btn} onClick={sendWord}  >\n                  Add\n                </Button>\n              </div>\n            </form>\n          </div>\n\n\n        </Fade>\n      </Modal>\n    </div>\n  );\n}"]},"metadata":{},"sourceType":"module"}