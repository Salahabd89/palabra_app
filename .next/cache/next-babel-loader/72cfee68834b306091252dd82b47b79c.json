{"ast":null,"code":"\"use strict\";\n\nvar Firebase = _interopRequireWildcard(require(\"firebase/app\"));\n\nrequire(\"firebase/firestore\");\n\nfunction _getRequireWildcardCache() { if (typeof WeakMap !== \"function\") return null; var cache = new WeakMap(); _getRequireWildcardCache = function () { return cache; }; return cache; }\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== \"object\" && typeof obj !== \"function\") { return { default: obj }; } var cache = _getRequireWildcardCache(); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }\n\nconst config = {\n  apiKey: process.env.apiKey,\n  authDomain: process.env.authDomain,\n  databaseURL: process.env.databaseURL,\n  projectId: `${process.env.projectId}`,\n  storageBucket: process.env.storageBucket,\n  messagingSenderId: process.env.messagingSenderId,\n  appId: process.env.appId\n};\nconst firebase = Firebase.apps.length ? Firebase.app() : Firebase.initializeApp(config);\nconst firestore = Firebase.firestore();\nmodule.exports = {\n  firebase,\n  firestore\n};","map":null,"metadata":{},"sourceType":"script"}