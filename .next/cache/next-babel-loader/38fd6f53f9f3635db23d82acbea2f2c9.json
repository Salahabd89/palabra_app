{"ast":null,"code":"import React from \"react\";\nvar __jsx = React.createElement;\nimport { useState, useEffect } from 'react';\nimport Appbar from '../components/appbar';\nimport Terms from '../components/console_terms';\nimport { Typography } from '@material-ui/core';\nimport axios from 'axios';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport FormControl from '@material-ui/core/FormControl';\nimport Select from '@material-ui/core/Select';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Searchbar from '../components/search';\nimport Button from '@material-ui/core/Button';\nimport Icon from '@material-ui/core/Icon';\nimport Box from '@material-ui/core/Box';\nimport { useStyles } from '../utils/style';\nimport Head from 'next/head';\nimport jsCookie from 'js-cookie';\nexport default function Console(team) {\n  const classes = useStyles();\n  let {\n    0: teamSelected,\n    1: setTeams\n  } = useState([]); //const classes = useStyles();\n\n  let teamCol = team.team.team;\n\n  const handleChange = event => {\n    setTeams(event.target.value);\n  };\n\n  useEffect(() => {\n    jsCookie.set('team', teamSelected);\n  }, [teamSelected]);\n  return __jsx(\"div\", null, __jsx(FormControl, null, __jsx(Typography, null, \"team \"), __jsx(Select, {\n    labelId: \"demo-simple-select-filled-label\",\n    id: \"demo-simple-select-filled\",\n    onChange: handleChange\n  }, teamCol.map((team, i) => {\n    return __jsx(MenuItem, {\n      value: team.teams.team_name\n    }, team.teams.team_name);\n  })), __jsx(Terms, null)), __jsx(Head, null, __jsx(\"link\", {\n    rel: \"stylesheet\",\n    href: \"https://fonts.googleapis.com/icon?family=Material+Icons\"\n  })), __jsx(Box, {\n    display: \"flex\",\n    css: {\n      maxWidth: 250\n    },\n    flexWrap: \"wrap\",\n    justifyContent: \"center\",\n    className: classes.box\n  }, __jsx(Searchbar, null), __jsx(\"br\", null), __jsx(Button, {\n    className: classes.btn,\n    href: './addword'\n  }, __jsx(Icon, {\n    style: {\n      fontSize: 40\n    }\n  }, \"add_circle\"))));\n}\n\nconst fetchData = async (query, auth) => await axios.get(`http://localhost:5050/api/console/${query.def}`, {\n  headers: {\n    auth: auth\n  }\n}).then(res => ({\n  team: res.data\n})).catch(() => ({\n  error: true\n}));\n\nexport async function getServerSideProps(context) {\n  let cookie = context.req.headers.cookie;\n  let auth = cookie.split('; ').find(row => row.startsWith('auth')).split('=')[1];\n  const teams = await fetchData(context.query, auth);\n  return {\n    props: {\n      team: teams\n    }\n  };\n}","map":{"version":3,"sources":["/Users/salahabdallah/Desktop/Dev/Jargon/pages/console.js"],"names":["useState","useEffect","Appbar","Terms","Typography","axios","MenuItem","FormControl","Select","makeStyles","Searchbar","Button","Icon","Box","useStyles","Head","jsCookie","Console","team","classes","teamSelected","setTeams","teamCol","handleChange","event","target","value","set","map","i","teams","team_name","maxWidth","box","btn","fontSize","fetchData","query","auth","get","def","headers","then","res","data","catch","error","getServerSideProps","context","cookie","req","split","find","row","startsWith","props"],"mappings":"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","sourcesContent":["import { useState, useEffect } from 'react'\nimport Appbar from '../components/appbar'\nimport Terms from '../components/console_terms'\nimport { Typography } from '@material-ui/core';\nimport axios from 'axios';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport FormControl from '@material-ui/core/FormControl';\nimport Select from '@material-ui/core/Select';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Searchbar from '../components/search'\nimport Button from '@material-ui/core/Button';\nimport Icon from '@material-ui/core/Icon';\nimport Box from '@material-ui/core/Box';\nimport { useStyles } from '../utils/style';\nimport Head from 'next/head';\nimport jsCookie from 'js-cookie';\n\n\n\nexport default function Console(team) {\n\n    const classes = useStyles()\n    let [teamSelected, setTeams] = useState([]);\n    //const classes = useStyles();\n\n    let teamCol = team.team.team\n\n\n    const handleChange = (event) => {\n        setTeams(event.target.value)\n    };  \n\n\n    useEffect(()=>{\n        jsCookie.set('team', teamSelected);\n    },[teamSelected])\n\n    return (\n        <div>\n            <FormControl >\n                <Typography>team </Typography><Select\n                    labelId=\"demo-simple-select-filled-label\"\n                    id=\"demo-simple-select-filled\"\n                    onChange={handleChange}\n                >\n                    {teamCol.map((team, i) => {\n                        return <MenuItem value={team.teams.team_name}>{team.teams.team_name}</MenuItem>\n                    })}\n                </Select>\n                <Terms></Terms>\n            </FormControl>\n                <Head>\n                    <link rel=\"stylesheet\" href=\"https://fonts.googleapis.com/icon?family=Material+Icons\" />\n                </Head>\n                <Box display=\"flex\" css={{ maxWidth: 250 }} flexWrap=\"wrap\" justifyContent=\"center\" className={classes.box} >\n                    <Searchbar></Searchbar><br />\n                    <Button className={classes.btn} href={'./addword'} >\n                        <Icon style={{ fontSize: 40 }} >add_circle</Icon>\n                    </Button>\n                </Box>\n        </div>\n    )\n}\n\n\n\nconst fetchData = async (query, auth) => await axios.get(`http://localhost:5050/api/console/${query.def}`, { headers: { auth: auth } })\n    .then(res => ({\n        team: res.data\n    }))\n    .catch(() => ({\n        error: true\n    }),\n    );\n\nexport async function getServerSideProps(context) {\n\n    let cookie = context.req.headers.cookie\n\n    let auth = cookie.split('; ')\n        .find(row => row.startsWith('auth'))\n        .split('=')[1]\n\n    const teams = await fetchData(context.query, auth);\n\n    return {\n        props: {\n            team: teams\n        }\n    }\n\n}"]},"metadata":{},"sourceType":"module"}