{"ast":null,"code":"var __jsx = React.createElement;\nimport React, { useState, useEffect } from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport AppBar from \"@material-ui/core/AppBar\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Button from \"@material-ui/core/Button\";\nimport Link from \"next/link\";\nimport Select from \"@material-ui/core/Select\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport { useSelector } from \"react-redux\";\nimport jsCookie from \"js-cookie\";\nvar useStyles = makeStyles(function (theme) {\n  return {\n    root: {\n      flexGrow: 1\n    },\n    appBar: {\n      top: \"0px\",\n      left: \"0px\",\n      background: \"#202020\",\n      border: \"1px solid #707070\",\n      opacity: \"1\",\n      position: \"static\"\n    },\n    rightside: {\n      flexGrow: 1,\n      marginRight: theme.spacing(2),\n      primary: {\n        main: \"white\"\n      }\n    },\n    leftside: {\n      marginLeft: theme.spacing(2)\n    },\n    menuButton: {\n      marginRight: theme.spacing(2)\n    },\n    title: {\n      flexGrow: 1\n    }\n  };\n});\nexport default function ButtonAppBar(props) {\n  var classes = useStyles();\n\n  var _useState = useState(null),\n      loggedInUser = _useState[0],\n      setLoggedInUser = _useState[1];\n\n  var _useState2 = useState([]),\n      avialableTeams = _useState2[0],\n      setTeams = _useState2[1];\n\n  var _useState3 = useState(null),\n      currentTeam = _useState3[0],\n      setCurrentTeams = _useState3[1];\n\n  var _useState4 = useState(false),\n      loggedIn = _useState4[0],\n      setLoggedIn = _useState4[1];\n\n  var loggedInStatus = function loggedInStatus() {\n    setLoggedInUser(null);\n    props.logout(true);\n  };\n\n  var handleChange = function handleChange(event) {\n    jsCookie.set(\"team\", event.target.value);\n    setCurrentTeams(event.target.value);\n  };\n\n  var ButtonLink = function ButtonLink(_ref) {\n    var className = _ref.className,\n        href = _ref.href,\n        hrefAs = _ref.hrefAs,\n        children = _ref.children;\n    return __jsx(Link, {\n      href: href,\n      as: hrefAs\n    }, __jsx(\"a\", {\n      className: className\n    }, children));\n  };\n\n  useEffect(function () {\n    var displayName = localStorage.getItem(\"displayName\");\n    var teams = localStorage.getItem(\"teams\");\n\n    if (localStorage.getItem(\"selectedteams\") != null) {\n      setCurrentTeams(jsCookie.get(\"team\"));\n    }\n\n    if (teams != \"undefined\") {\n      var teamList = JSON.parse(teams);\n      setTeams(teamList);\n    }\n\n    setLoggedInUser(displayName);\n    setLoggedIn(props.loggedInState);\n  }, []);\n  return __jsx(\"div\", {\n    className: classes.root\n  }, __jsx(AppBar, {\n    className: classes.appBar\n  }, __jsx(Toolbar, null, __jsx(Button, {\n    className: classes.rightside,\n    component: ButtonLink,\n    href: \"/\",\n    hrefAs: \"/\",\n    color: \"inherit\"\n  }, \"Palabra\"), props.loggedInState == false ? __jsx(Typography, null, __jsx(Button, {\n    className: classes.leftside,\n    component: ButtonLink,\n    href: \"login\",\n    color: \"inherit\",\n    hrefAs: \"login\"\n  }, \"Login\"), __jsx(Button, {\n    className: classes.leftside,\n    component: ButtonLink,\n    href: \"signup\",\n    color: \"inherit\",\n    hrefAs: \"signup\"\n  }, \"Sign Up\")) : __jsx(React.Fragment, null, __jsx(Select, {\n    value: currentTeam,\n    style: {\n      background: \"white\",\n      width: \"10%\",\n      height: \"25px\",\n      marginRight: \"25px\"\n    },\n    variant: \"outlined\",\n    onChange: handleChange\n  }, avialableTeams != null ? avialableTeams.map(function (teams) {\n    return __jsx(MenuItem, {\n      selected: true,\n      style: {\n        backgroundColor: \"white\"\n      },\n      value: teams\n    }, teams);\n  }) : __jsx(MenuItem, null)), __jsx(Button, {\n    component: ButtonLink,\n    href: \"userprofile\",\n    color: \"inherit\",\n    hrefAs: \"userprofile\"\n  }, props.user), __jsx(Button, {\n    component: ButtonLink,\n    href: \"console\",\n    hrefAs: \"console\",\n    color: \"inherit\"\n  }, \"Console\"), __jsx(Button, {\n    color: \"inherit\",\n    onClick: loggedInStatus\n  }, \"Logout\")))));\n}","map":null,"metadata":{},"sourceType":"module"}