{"ast":null,"code":"var __jsx = React.createElement;\nimport React, { useState, useEffect } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport { withCookies, Cookies } from 'react-cookie';\nimport { instanceOf } from 'prop-types';\nconst useStyles = makeStyles(theme => ({\n  root: {\n    flexGrow: 1\n  },\n  appBar: {\n    top: '0px',\n    left: '0px',\n    background: '#202020',\n    border: '1px solid #707070',\n    opacity: '1',\n    position: \"static\"\n  },\n  rightside: {},\n  leftside: {\n    marginRight: '10%'\n  },\n  menuButton: {\n    marginRight: theme.spacing(2)\n  },\n  title: {\n    flexGrow: 1\n  }\n}));\nexport default function ButtonAppBar(props) {\n  const classes = useStyles();\n  const {\n    0: loggedInUser,\n    1: setLoggedInUser\n  } = useState(null);\n  const {\n    0: loggedIn,\n    1: setLoggedIn\n  } = useState(false);\n  const {\n    0: anchorEl,\n    1: setAnchorEl\n  } = useState(null);\n\n  const handleClick = event => {\n    setAnchorEl(event.currentTarget);\n  };\n\n  let cookies = instanceOf(Cookies).isRequired;\n  console.log(props);\n\n  const handleClose = () => {\n    setAnchorEl(null);\n  };\n\n  const loggedInStatus = () => {\n    setLoggedInUser(null);\n    props.logout(true);\n  };\n\n  useEffect(() => {\n    setLoggedInUser(props.user);\n    setLoggedIn(props.loggedInState);\n  }, []);\n  return __jsx(\"div\", {\n    className: classes.root\n  }, __jsx(AppBar, {\n    className: classes.appBar\n  }, __jsx(Toolbar, null, __jsx(Button, null, \"Disabled\", __jsx(Typography, {\n    variant: \"h6\",\n    className: classes.title\n  })), props.loggedInState == false ? __jsx(Button, {\n    href: \"../login\",\n    color: \"inherit\"\n  }, \"Login\") : __jsx(React.Fragment, null, __jsx(Button, {\n    href: \"../userprofile\",\n    color: \"inherit\"\n  }, props.user), __jsx(Button, {\n    href: \"../console\",\n    color: \"inherit\"\n  }, 'Console'), __jsx(Button, {\n    color: \"inherit\",\n    onClick: loggedInStatus\n  }, \"Logout\")))));\n}","map":{"version":3,"sources":["/Users/salahabdallah/Desktop/Dev/Jargon/components/appbar.js"],"names":["React","useState","useEffect","makeStyles","AppBar","Toolbar","Typography","Button","withCookies","Cookies","instanceOf","useStyles","theme","root","flexGrow","appBar","top","left","background","border","opacity","position","rightside","leftside","marginRight","menuButton","spacing","title","ButtonAppBar","props","classes","loggedInUser","setLoggedInUser","loggedIn","setLoggedIn","anchorEl","setAnchorEl","handleClick","event","currentTarget","cookies","isRequired","console","log","handleClose","loggedInStatus","logout","user","loggedInState"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport { withCookies, Cookies } from 'react-cookie';\nimport { instanceOf } from 'prop-types';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    flexGrow: 1\n  },\n  appBar:{\n    top: '0px',\n    left: '0px',\n    background: '#202020',\n    border: '1px solid #707070',\n    opacity: '1',\n    position: \"static\"\n\n  },\n  rightside:{\n\n\n\n  },\n  leftside:{\n    marginRight:'10%'\n  },\n\n  menuButton: {\n    marginRight: theme.spacing(2),\n  },\n  title: {\n    flexGrow: 1,\n  },\n}));\n\n\nexport default function ButtonAppBar(props) {\n\n  const classes = useStyles();\n\n  const [loggedInUser, setLoggedInUser] = useState(null);\n  const [loggedIn, setLoggedIn] = useState(false);\n\n  const [anchorEl, setAnchorEl] = useState(null);\n\n  const handleClick = (event) => {\n    setAnchorEl(event.currentTarget);\n  };\n  let cookies = instanceOf(Cookies).isRequired\n\n  console.log(props)\n\n  const handleClose = () => {\n    setAnchorEl(null);\n  };\n\n  const loggedInStatus = () =>{\n\n    setLoggedInUser(null)\n\n    props.logout(true)\n\n  }\n\n  useEffect(() => {\n\n    setLoggedInUser(props.user)\n    setLoggedIn(props.loggedInState)\n\n}, []);\n\n\n  return (\n    <div className={classes.root}>\n      <AppBar className={classes.appBar} >\n        <Toolbar>\n        <Button>Disabled\n          <Typography variant=\"h6\" className={classes.title}>\n          </Typography>\n          </Button>\n          {props.loggedInState == false ?\n          <Button href=\"../login\" color=\"inherit\">Login</Button>\n          :\n          <>\n            <Button href=\"../userprofile\" color=\"inherit\">{props.user}</Button>\n            <Button href=\"../console\" color=\"inherit\">{'Console'}</Button>\n            <Button color=\"inherit\"onClick={loggedInStatus}>Logout</Button>\n          </>\n          }\n        </Toolbar>\n      </AppBar>\n    </div>\n  );\n}"]},"metadata":{},"sourceType":"module"}