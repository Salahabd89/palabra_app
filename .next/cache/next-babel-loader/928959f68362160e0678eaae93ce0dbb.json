{"ast":null,"code":"var _jsxFileName = \"/Users/salahabdallah/Desktop/Dev/Jargon/pages/main.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport Head from 'next/head';\nimport Appbar from '../components/appbar';\nimport Searchbar from '../components/search';\nimport Addbtn from '../components/addword';\nimport react, { useEffect, useState } from 'react';\nimport { firestore } from \"../utils/firebase\";\nexport default function Home() {\n  const {\n    0: addedword,\n    1: setWord\n  } = useState([]);\n  const {\n    0: clear,\n    1: setClear\n  } = useState([]);\n\n  const getData = async word => {\n    var clear = false;\n    setClear(clear);\n    setWord(word);\n  };\n\n  useEffect(() => {\n    async function sendtofb() {\n      if (addedword.length != 0 & addedword.word != \"\") {\n        let word = addedword.word;\n        let isAvailable = false;\n        /* await firestore.collection(\"words\").doc(word).get().then(function (doc) {\n           if (doc.exists) {\n             isAvailable = true\n             setClear(true)\n           }else{\n             setClear(false)\n           }\n         }).catch(function (error) {\n           console.log(\"Error getting document:\", error);\n         }); */\n\n        /*\n                if (isAvailable == false) {\n        \n                  await firestore.collection(\"words\").doc(word).set({\n                    definition: addedword.definition,\n                    industry: \"Construction\",\n                    sub_industry: \"Construction\",\n                    user: \"Salah\",\n                    word: addedword.word\n                  })\n                    .then(function () {\n                      console.log(\"Document successfully written!\");\n                      \n        \n                    })\n                    .catch(function (error) {\n                      console.error(\"Error writing document: \", error);\n                    })\n                }*/\n      }\n    }\n\n    sendtofb();\n    const shouldclears = true;\n    setClear(shouldclears);\n  }, [addedword]);\n  useEffect(() => {\n    console.log(clear);\n  }, [clear]);\n  return __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 5\n    }\n  }, __jsx(Head, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 7\n    }\n  }, __jsx(\"link\", {\n    rel: \"stylesheet\",\n    href: \"https://fonts.googleapis.com/icon?family=Material+Icons\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 9\n    }\n  })), __jsx(\"main\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 7\n    }\n  }, __jsx(Appbar, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 9\n    }\n  }), __jsx(Searchbar, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 9\n    }\n  }), __jsx(Addbtn, {\n    returnData: getData,\n    clear: clear,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 9\n    }\n  })));\n}","map":{"version":3,"sources":["/Users/salahabdallah/Desktop/Dev/Jargon/pages/main.js"],"names":["Head","Appbar","Searchbar","Addbtn","react","useEffect","useState","firestore","Home","addedword","setWord","clear","setClear","getData","word","sendtofb","length","isAvailable","shouldclears","console","log"],"mappings":";;;AAAA,OAAOA,IAAP,MAAiB,WAAjB;AACA,OAAOC,MAAP,MAAmB,sBAAnB;AACA,OAAOC,SAAP,MAAsB,sBAAtB;AACA,OAAOC,MAAP,MAAmB,uBAAnB;AACA,OAAOC,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,SAASC,SAAT,QAA0B,mBAA1B;AAGA,eAAe,SAASC,IAAT,GAAgB;AAE7B,QAAM;AAAA,OAACC,SAAD;AAAA,OAAYC;AAAZ,MAAuBJ,QAAQ,CAAC,EAAD,CAArC;AACA,QAAM;AAAA,OAACK,KAAD;AAAA,OAAQC;AAAR,MAAoBN,QAAQ,CAAC,EAAD,CAAlC;;AAEA,QAAMO,OAAO,GAAG,MAAOC,IAAP,IAAgB;AAE9B,QAAIH,KAAK,GAAI,KAAb;AACAC,IAAAA,QAAQ,CAACD,KAAD,CAAR;AACAD,IAAAA,OAAO,CAACI,IAAD,CAAP;AAED,GAND;;AAQAT,EAAAA,SAAS,CAAC,MAAM;AAEd,mBAAeU,QAAf,GAA0B;AAExB,UAAIN,SAAS,CAACO,MAAV,IAAoB,CAApB,GAAwBP,SAAS,CAACK,IAAV,IAAkB,EAA9C,EAAkD;AAEhD,YAAIA,IAAI,GAAGL,SAAS,CAACK,IAArB;AACA,YAAIG,WAAW,GAAG,KAAlB;AAGD;;;;;;;;;;;AAYP;;;;;;;;;;;;;;;;;;;AAmBO;AACF;;AAEDF,IAAAA,QAAQ;AACR,UAAMG,YAAY,GAAG,IAArB;AACAN,IAAAA,QAAQ,CAACM,YAAD,CAAR;AAKD,GAnDQ,EAmDN,CAACT,SAAD,CAnDM,CAAT;AAqDAJ,EAAAA,SAAS,CAAC,MAAI;AACZc,IAAAA,OAAO,CAACC,GAAR,CAAYT,KAAZ;AAED,GAHQ,EAGP,CAACA,KAAD,CAHO,CAAT;AAKA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAM,IAAA,GAAG,EAAC,YAAV;AAAuB,IAAA,IAAI,EAAC,yDAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADF,EAIE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAEE,MAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,EAGE,MAAC,MAAD;AAAQ,IAAA,UAAU,EAAEE,OAApB;AAA6B,IAAA,KAAK,EAAIF,KAAtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAHF,CAJF,CADF;AAYD","sourcesContent":["import Head from 'next/head'\nimport Appbar from '../components/appbar'\nimport Searchbar from '../components/search'\nimport Addbtn from '../components/addword'\nimport react, { useEffect, useState } from 'react'\nimport { firestore } from \"../utils/firebase\"\n\n\nexport default function Home() {\n\n  const [addedword, setWord] = useState([])\n  const [clear, setClear] = useState([])\n\n  const getData = async (word) => {\n\n    var clear  = false\n    setClear(clear)\n    setWord(word)\n\n  }\n\n  useEffect(() => {\n\n    async function sendtofb() {\n\n      if (addedword.length != 0 & addedword.word != \"\") {\n\n        let word = addedword.word\n        let isAvailable = false\n    \n     \n       /* await firestore.collection(\"words\").doc(word).get().then(function (doc) {\n          if (doc.exists) {\n            isAvailable = true\n            setClear(true)\n          }else{\n            setClear(false)\n          }\n        }).catch(function (error) {\n          console.log(\"Error getting document:\", error);\n        }); */\n\n        \n/*\n        if (isAvailable == false) {\n\n          await firestore.collection(\"words\").doc(word).set({\n            definition: addedword.definition,\n            industry: \"Construction\",\n            sub_industry: \"Construction\",\n            user: \"Salah\",\n            word: addedword.word\n          })\n            .then(function () {\n              console.log(\"Document successfully written!\");\n              \n\n            })\n            .catch(function (error) {\n              console.error(\"Error writing document: \", error);\n            })\n        }*/\n      }\n    }\n\n    sendtofb();\n    const shouldclears = true;\n    setClear(shouldclears)\n  \n  \n\n\n  }, [addedword]);\n\n  useEffect(()=>{\n    console.log(clear)\n\n  },[clear])\n\n  return (\n    <div>\n      <Head>\n        <link rel=\"stylesheet\" href=\"https://fonts.googleapis.com/icon?family=Material+Icons\" />\n      </Head>\n      <main>\n        <Appbar></Appbar>\n        <Searchbar></Searchbar>\n        <Addbtn returnData={getData} clear = {clear} ></Addbtn>\n      </main>\n    </div>\n  )\n}"]},"metadata":{},"sourceType":"module"}