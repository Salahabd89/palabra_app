{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime/helpers/esm/toConsumableArray\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\n\nvar _jsxFileName = \"/Users/salahabdallah/Desktop/Dev/Jargon/components/addword.js\",\n    _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { useState, useEffect } from 'react';\nimport Button from '@material-ui/core/Button';\nimport { green } from '@material-ui/core/colors';\nimport Icon from '@material-ui/core/Icon';\nimport { fade, makeStyles } from '@material-ui/core/styles';\nimport Modal from '@material-ui/core/Modal';\nimport Backdrop from '@material-ui/core/Backdrop';\nimport Fade from '@material-ui/core/Fade';\nimport TextField from '@material-ui/core/TextField';\nvar useStyles = makeStyles(function (theme) {\n  return {\n    root: _defineProperty({\n      marginTop: '0%',\n      marginLeft: '0%'\n    }, \"marginLeft\", '50%'),\n    wordtxt: {\n      \"float\": 'top',\n      marginLeft: '10%',\n      display: 'flex'\n    },\n    modal: {\n      display: 'flex',\n      alignItems: 'center',\n      justifyContent: 'center',\n      padding: '0',\n      margin: 0\n    },\n    paper: {\n      backgroundColor: theme.palette.background.paper,\n      width: '50%',\n      height: '50%'\n    },\n    btn: _defineProperty({\n      position: 'relative',\n      borderRadius: theme.shape.borderRadius,\n      backgroundColor: fade(theme.palette.common.white, 0.15),\n      '&:hover': {\n        backgroundColor: fade(theme.palette.common.white, 0.25)\n      },\n      width: '100%',\n      justifyContent: 'center'\n    }, theme.breakpoints.up('sm'), {\n      marginLeft: theme.spacing(3),\n      width: 'auto'\n    })\n  };\n});\nexport default function ContainedButtons(props) {\n  _s();\n\n  var classes = useStyles();\n\n  var _useState = useState(false),\n      open = _useState[0],\n      setOpen = _useState[1];\n\n  var _useState2 = useState({\n    word: \"\",\n    definition: \"\"\n  }),\n      all = _useState2[0],\n      setAll = _useState2[1];\n\n  var _useState3 = useState(null),\n      clearText = _useState3[0],\n      setClear = _useState3[1];\n\n  var handleOpen = function handleOpen() {\n    setOpen(true);\n  };\n\n  var sendWord = function sendWord(e) {\n    e.preventDefault();\n    props.returnData(all);\n  };\n\n  useEffect(function () {\n    setClear(_toConsumableArray(props.clear));\n    console.log(props.clear);\n  }, [props.clear]);\n\n  function clear() {\n    setAll({\n      word: \"\",\n      definition: \"\"\n    });\n  }\n\n  var handleClose = function handleClose() {\n    setOpen(false);\n  };\n\n  return __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 5\n    }\n  }, __jsx(\"div\", {\n    className: classes.root,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 7\n    }\n  }, __jsx(Button, {\n    className: classes.btn,\n    onClick: handleOpen,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 9\n    }\n  }, __jsx(Icon, {\n    style: {\n      fontSize: 40\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 11\n    }\n  }, \"add_circle\"))), __jsx(Modal, {\n    \"aria-labelledby\": \"transition-modal-title\",\n    \"aria-describedby\": \"transition-modal-description\",\n    className: classes.modal,\n    open: open,\n    onClose: handleClose,\n    closeAfterTransition: true,\n    BackdropComponent: Backdrop,\n    BackdropProps: {\n      timeout: 500\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 7\n    }\n  }, __jsx(Fade, {\n    \"in\": open,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 9\n    }\n  }, __jsx(\"div\", {\n    className: classes.paper,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 11\n    }\n  }, __jsx(\"form\", {\n    noValidate: true,\n    autoComplete: \"off\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 13\n    }\n  }, __jsx(\"div\", {\n    className: classes.wordtxt,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 15\n    }\n  }, __jsx(TextField, {\n    id: \"standard-basic\",\n    name: \"word\",\n    value: all.word,\n    onChange: function onChange(e) {\n      return setAll(_objectSpread(_objectSpread({}, all), {}, _defineProperty({}, event.target.name, event.target.value)));\n    },\n    label: \"Word\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 17\n    }\n  }), __jsx(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 17\n    }\n  }), __jsx(TextField, {\n    id: \"standard-basic\",\n    name: \"definition\",\n    value: all.definition,\n    onChange: function onChange(e) {\n      return setAll(_objectSpread(_objectSpread({}, all), {}, _defineProperty({}, event.target.name, event.target.value)));\n    },\n    multiline: true,\n    rows: 10,\n    label: \"Definition\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 17\n    }\n  }), __jsx(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 17\n    }\n  }), __jsx(Button, {\n    className: classes.btn,\n    onClick: sendWord,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 17\n    }\n  }, \"Add\")))))));\n}\n\n_s(ContainedButtons, \"U6Qk2wQlO2UnrOvNvNobxTQlT/A=\", false, function () {\n  return [useStyles];\n});\n\n_c = ContainedButtons;\n\nvar _c;\n\n$RefreshReg$(_c, \"ContainedButtons\");","map":{"version":3,"sources":["/Users/salahabdallah/Desktop/Dev/Jargon/components/addword.js"],"names":["React","useState","useEffect","Button","green","Icon","fade","makeStyles","Modal","Backdrop","Fade","TextField","useStyles","theme","root","marginTop","marginLeft","wordtxt","display","modal","alignItems","justifyContent","padding","margin","paper","backgroundColor","palette","background","width","height","btn","position","borderRadius","shape","common","white","breakpoints","up","spacing","ContainedButtons","props","classes","open","setOpen","word","definition","all","setAll","clearText","setClear","handleOpen","sendWord","e","preventDefault","returnData","clear","console","log","handleClose","fontSize","timeout","event","target","name","value"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport Button from '@material-ui/core/Button';\nimport { green } from '@material-ui/core/colors';\nimport Icon from '@material-ui/core/Icon';\nimport { fade, makeStyles } from '@material-ui/core/styles';\nimport Modal from '@material-ui/core/Modal';\nimport Backdrop from '@material-ui/core/Backdrop';\nimport Fade from '@material-ui/core/Fade';\nimport TextField from '@material-ui/core/TextField';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    marginTop: '0%',\n    marginLeft: '0%',\n    marginLeft: '50%'\n  },\n  wordtxt: {\n    float: 'top',\n    marginLeft: '10%',\n    display: 'flex'\n  },\n  modal: {\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'center',\n    padding: '0',\n    margin: 0\n  },\n\n  paper: {\n    backgroundColor: theme.palette.background.paper,\n    width: '50%',\n    height: '50%'\n  },\n  btn: {\n\n    position: 'relative',\n    borderRadius: theme.shape.borderRadius,\n    backgroundColor: fade(theme.palette.common.white, 0.15),\n    '&:hover': {\n      backgroundColor: fade(theme.palette.common.white, 0.25),\n    },\n    width: '100%',\n    justifyContent: 'center',\n    [theme.breakpoints.up('sm')]: {\n      marginLeft: theme.spacing(3),\n      width: 'auto',\n    },\n  }\n\n}));\n\nexport default function ContainedButtons(props) {\n\n  const classes = useStyles();\n  const [open, setOpen] = useState(false);\n  const [all, setAll] = useState({ word: \"\", definition: \"\" });\n  const [clearText, setClear] = useState(null)\n\n  const handleOpen = () => {\n    setOpen(true);\n  };\n\n  const sendWord = (e) => {\n\n    e.preventDefault();\n \n    props.returnData(all);\n\n\n  }\n\n\n  useEffect(() => {\n\n    setClear([...props.clear])\n    console.log(props.clear)\n\n  },[props.clear])\n\n  function clear(){\n\n    setAll({ word: \"\", definition: \"\" });\n  }\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n  \n\n  return (\n    <div>\n      <div className={classes.root}>\n        <Button className={classes.btn} onClick={handleOpen} >\n          <Icon style={{ fontSize: 40 }} >add_circle</Icon>\n        </Button>\n      </div>\n\n      <Modal\n        aria-labelledby=\"transition-modal-title\"\n        aria-describedby=\"transition-modal-description\"\n        className={classes.modal}\n        open={open}\n        onClose={handleClose}\n        closeAfterTransition\n        BackdropComponent={Backdrop}\n        BackdropProps={{\n          timeout: 500,\n        }}\n      >\n        <Fade in={open}>\n\n          <div className={classes.paper} >\n            <form noValidate autoComplete=\"off\">\n              <div className={classes.wordtxt} >\n\n                <TextField id=\"standard-basic\"  name=\"word\" value = {all.word}  onChange={e => setAll({...all, [event.target.name]: event.target.value})} label=\"Word\" />\n                <br />\n                <TextField id=\"standard-basic\" name=\"definition\" value = {all.definition} onChange={e => setAll({...all, [event.target.name]: event.target.value})} multiline rows={10} label=\"Definition\" />\n                <br />\n                <Button className={classes.btn} onClick={sendWord}  >\n                  Add\n                </Button>\n\n              </div>\n            </form>\n          </div>\n\n\n        </Fade>\n      </Modal>\n    </div>\n  );\n}"]},"metadata":{},"sourceType":"module"}