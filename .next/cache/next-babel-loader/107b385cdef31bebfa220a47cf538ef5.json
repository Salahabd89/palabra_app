{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _s = $RefreshSig$();\n\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { UserContext } from '../providers/userProvider';\n\nfunction MyApp(_ref) {\n  _s();\n\n  var Component = _ref.Component,\n      pageProps = _ref.pageProps;\n\n  var _useState = useState(null),\n      _useState2 = _slicedToArray(_useState, 2),\n      user = _useState2[0],\n      setUser = _useState2[1];\n\n  var value = useMemo(function () {\n    return {\n      user: user,\n      setUser: setUser\n    };\n  }, [user, setUser]);\n  return __jsx(UserContext.Provider, {\n    value: value\n  }, __jsx(Component, pageProps), JSON.stringify({\n    user: user\n  }));\n} // Only uncomment this method if you have blocking data requirements for\n// every single page in your application. This disables the ability to\n// perform automatic static optimization, causing every page in your app to\n// be server-side rendered.\n//\n// MyApp.getInitialProps = async (appContext) => {\n//   // calls page's `getInitialProps` and fills `appProps.pageProps`\n//   const appProps = await App.getInitialProps(appContext);\n//\n//   return { ...appProps }\n// }\n\n\n_s(MyApp, \"+m7beLtAnuVU1u6C3kePTCNrrkk=\");\n\n_c = MyApp;\nexport default MyApp;\n\nvar _c;\n\n$RefreshReg$(_c, \"MyApp\");","map":{"version":3,"sources":["/Users/salahabdallah/Desktop/Dev/Jargon/pages/_app.js"],"names":["UserContext","MyApp","Component","pageProps","useState","user","setUser","value","useMemo","JSON","stringify"],"mappings":";;;;;;AACA,SAAQA,WAAR,QAA0B,2BAA1B;;AAGA,SAASC,KAAT,OAAyC;AAAA;;AAAA,MAAxBC,SAAwB,QAAxBA,SAAwB;AAAA,MAAbC,SAAa,QAAbA,SAAa;;AAAA,kBAEbC,QAAQ,CAAC,IAAD,CAFK;AAAA;AAAA,MAE9BC,IAF8B;AAAA,MAExBC,OAFwB;;AAIrC,MAAMC,KAAK,GAAGC,OAAO,CAAC;AAAA,WAAO;AAAEH,MAAAA,IAAI,EAAJA,IAAF;AAAQC,MAAAA,OAAO,EAAPA;AAAR,KAAP;AAAA,GAAD,EAA4B,CAACD,IAAD,EAAOC,OAAP,CAA5B,CAArB;AAGA,SAAO,MAAC,WAAD,CAAa,QAAb;AAAsB,IAAA,KAAK,EAAEC;AAA7B,KAAqC,MAAC,SAAD,EAAeJ,SAAf,CAArC,EACCM,IAAI,CAACC,SAAL,CAAe;AAACL,IAAAA,IAAI,EAAJA;AAAD,GAAf,CADD,CAAP;AAGD,C,CAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;GAtBOJ,K;;KAAAA,K;AAwBP,eAAeA,KAAf","sourcesContent":["\nimport {UserContext} from '../providers/userProvider';\n\n\nfunction MyApp({ Component, pageProps }) {\n\n    const [user, setUser] = useState(null);\n\n    const value = useMemo(() => ({ user, setUser }), [user, setUser]);\n\n\n    return <UserContext.Provider value={value} ><Component {...pageProps} />\n           {JSON.stringify({user}) }\n           </UserContext.Provider>\n  }\n  \n  // Only uncomment this method if you have blocking data requirements for\n  // every single page in your application. This disables the ability to\n  // perform automatic static optimization, causing every page in your app to\n  // be server-side rendered.\n  //\n  // MyApp.getInitialProps = async (appContext) => {\n  //   // calls page's `getInitialProps` and fills `appProps.pageProps`\n  //   const appProps = await App.getInitialProps(appContext);\n  //\n  //   return { ...appProps }\n  // }\n  \n  export default MyApp"]},"metadata":{},"sourceType":"module"}