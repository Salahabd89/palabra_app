{"ast":null,"code":"var __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React, { useState, useEffect } from 'react';\nimport Button from '@material-ui/core/Button';\nimport { fade, makeStyles } from '@material-ui/core/styles';\nimport TextField from '@material-ui/core/TextField';\nimport Container from '@material-ui/core/Container';\nimport Box from '@material-ui/core/Box';\nimport { Typography } from '@material-ui/core';\nimport Card from '@material-ui/core/Card';\nimport CardActions from '@material-ui/core/CardActions';\nimport CardContent from '@material-ui/core/CardContent';\nimport ShowMoreText from \"react-show-more-text\";\nimport ExpandLess from \"@material-ui/icons/ExpandLess\";\nimport ExpandMore from \"@material-ui/icons/ExpandMore\";\nconst useStyles = makeStyles(theme => ({\n  root: {\n    marginTop: '0%',\n    marginRight: '50%',\n    marginLeft: '50%'\n  },\n  grid: {\n    spacing: 24,\n    direction: \"column\",\n    alignItems: \"center\",\n    justify: \"center\"\n  },\n  defInput: {\n    opacity: '1',\n    marginBottom: '5%'\n  },\n  preview: {\n    width: '105px',\n    height: '25px',\n    background: '#202020 0% 0% no-repeat padding-box',\n    borderRadius: '80px',\n    opacity: '1',\n    display: \"flex\",\n    justifyContent: \"center\",\n    margin: 'auto',\n    marginTop: '5%',\n    color: 'white'\n  },\n  add: {\n    width: '105px',\n    height: '25px',\n    background: '#202020 0% 0% no-repeat padding-box',\n    borderRadius: '80px',\n    opacity: '1',\n    display: \"flex\",\n    justifyContent: \"center\",\n    margin: 'auto',\n    marginBottom: '5%',\n    marginTop: '5%',\n    color: 'white'\n  },\n  card: {\n    display: 'flex',\n    flexDirection: 'column',\n    textAlign: 'center',\n    width: '500px'\n  },\n  termInput: {\n    opacity: '1',\n    marginBottom: '5%'\n  },\n  bullet: {\n    display: 'inline-block',\n    margin: '0 2px',\n    transform: 'scale(0.8)'\n  },\n  title: {\n    fontSize: 38\n  },\n  pos: {\n    marginBottom: 32\n  },\n  box: {\n    display: \"flex\",\n    flexDirection: \"column\",\n    justifyContent: \"center\",\n    marginTop: '5%',\n    marginLeft: '20%',\n    marginRight: '20%',\n    textAlign: \"center\"\n  }\n}));\nexport default function addwordform(props) {\n  const classes = useStyles();\n  const {\n    0: ispreview,\n    1: setPreview\n  } = useState(false);\n  const {\n    0: all,\n    1: setAll\n  } = useState({\n    word: \"\",\n    definition: \"\"\n  });\n\n  const sendPreview = e => {\n    e.preventDefault();\n    console.log(all.definition);\n    setPreview(true);\n  };\n\n  async function addWord(e) {\n    e.preventDefault();\n    props.returnData(all);\n  }\n\n  const cancelPreview = e => {\n    e.preventDefault();\n    setPreview(false);\n  };\n\n  const edit = e => {\n    e.preventDefault();\n    setPreview(false);\n  };\n\n  useEffect(() => {\n    if (props.clear == true) {\n      clear();\n    }\n  }, [props.clear]);\n\n  function clear() {\n    setAll({\n      word: \"\",\n      definition: \"\"\n    });\n  }\n\n  const {\n    0: expand,\n    1: setExpand\n  } = useState(false);\n\n  const onClick = () => {\n    setExpand(!expand);\n  };\n\n  return __jsx(React.Fragment, null, ispreview == false ? __jsx(Box, {\n    Container: true,\n    className: classes.box\n  }, __jsx(TextField, {\n    name: \"word\",\n    variant: \"outlined\",\n    value: all.word,\n    fullWidth: true,\n    className: classes.termInput,\n    onChange: e => setAll(_objectSpread(_objectSpread({}, all), {}, {\n      [event.target.name]: event.target.value\n    })),\n    label: \"Word\"\n  }), __jsx(TextField, {\n    name: \"definition\",\n    variant: \"outlined\",\n    className: classes.defInput,\n    value: all.definition,\n    onChange: e => setAll(_objectSpread(_objectSpread({}, all), {}, {\n      [event.target.name]: event.target.value\n    })),\n    multiline: true,\n    rows: 10,\n    label: \"Definition\"\n  }), __jsx(Button, {\n    variant: \"outlined\",\n    className: classes.preview,\n    onClick: sendPreview\n  }, __jsx(Typography, null, \"Preview\"))) : __jsx(React.Fragment, null, __jsx(Box, {\n    Container: true,\n    className: classes.box\n  }, __jsx(Card, null, __jsx(CardContent, null, __jsx(Typography, {\n    variant: \"h5\",\n    component: \"h1\"\n  }, all.word), __jsx(\"br\", null), __jsx(ShowMoreText, {\n    lines: 30,\n    more: __jsx(ExpandMore, null),\n    less: __jsx(ExpandLess, null),\n    onClick: onClick,\n    expanded: false\n  }, all.definition.split('\\n').map((i, key) => {\n    return __jsx(Typography, {\n      align: \"left\",\n      key: key,\n      paragraph: true,\n      variant: \"body1\"\n    }, i);\n  }))), __jsx(CardActions, null, __jsx(Button, {\n    className: classes.add,\n    variant: \"outlined\",\n    onClick: addWord\n  }, \"add\"), __jsx(Button, {\n    className: classes.add,\n    variant: \"outlined\",\n    onClick: cancelPreview\n  }, \"cancel\"), __jsx(Button, {\n    className: classes.add,\n    variant: \"outlined\",\n    onClick: edit\n  }, \"Edit\"))))));\n}","map":{"version":3,"sources":["/Users/salahabdallah/Desktop/Dev/Jargon/components/add.js"],"names":["React","useState","useEffect","Button","fade","makeStyles","TextField","Container","Box","Typography","Card","CardActions","CardContent","ShowMoreText","ExpandLess","ExpandMore","useStyles","theme","root","marginTop","marginRight","marginLeft","grid","spacing","direction","alignItems","justify","defInput","opacity","marginBottom","preview","width","height","background","borderRadius","display","justifyContent","margin","color","add","card","flexDirection","textAlign","termInput","bullet","transform","title","fontSize","pos","box","addwordform","props","classes","ispreview","setPreview","all","setAll","word","definition","sendPreview","e","preventDefault","console","log","addWord","returnData","cancelPreview","edit","clear","expand","setExpand","onClick","event","target","name","value","split","map","i","key"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport Button from '@material-ui/core/Button';\nimport { fade, makeStyles } from '@material-ui/core/styles';\nimport TextField from '@material-ui/core/TextField';\nimport Container from '@material-ui/core/Container';\nimport Box from '@material-ui/core/Box';\nimport { Typography } from '@material-ui/core';\nimport Card from '@material-ui/core/Card';\nimport CardActions from '@material-ui/core/CardActions';\nimport CardContent from '@material-ui/core/CardContent';\nimport ShowMoreText from \"react-show-more-text\";\nimport ExpandLess from \"@material-ui/icons/ExpandLess\";\nimport ExpandMore from \"@material-ui/icons/ExpandMore\";\n\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    marginTop: '0%',\n    marginRight: '50%',\n    marginLeft: '50%'\n  },\n  grid: {\n    spacing:24,\n    direction: \"column\",\n    alignItems: \"center\",\n    justify: \"center\"\n  },\n  defInput: {\n\n    opacity: '1',\n    marginBottom: '5%'\n\n  },\n  preview: {\n\n    width: '105px',\n    height: '25px',\n    background: '#202020 0% 0% no-repeat padding-box',\n    borderRadius: '80px',\n    opacity: '1',\n    display: \"flex\",\n    justifyContent: \"center\",\n    margin: 'auto',\n    marginTop: '5%',\n    color: 'white'\n\n\n  },\n  add: {\n\n    width: '105px',\n    height: '25px',\n    background: '#202020 0% 0% no-repeat padding-box',\n    borderRadius: '80px',\n    opacity: '1',\n    display: \"flex\",\n    justifyContent: \"center\",\n    margin: 'auto',\n    marginBottom:'5%',\n    marginTop: '5%',\n    color: 'white'\n\n\n  },\n  card: {\n    display: 'flex',\n    flexDirection: 'column',\n    textAlign: 'center',\n    width: '500px'\n  },\n  termInput: {\n\n    opacity: '1',\n    marginBottom: '5%'\n\n  },\n  bullet: {\n    display: 'inline-block',\n    margin: '0 2px',\n    transform: 'scale(0.8)',\n  },\n  title: {\n    fontSize: 38,\n  },\n  pos: {\n    marginBottom: 32,\n  },\n  box:{\n\n    display:\"flex\",\n    flexDirection:\"column\",\n    justifyContent:\"center\",\n    marginTop:'5%',\n    marginLeft:'20%',\n    marginRight:'20%',\n    textAlign:\"center\"\n\n\n  },\n}));\n\nexport default function addwordform(props) {\n\n  const classes = useStyles();\n  const [ispreview, setPreview] = useState(false);\n  const [all, setAll] = useState({ word: \"\", definition: \"\" });\n\n\n  const sendPreview = (e) => {\n\n    e.preventDefault();\n    console.log(all.definition)\n    setPreview(true)\n\n  }\n\n  async function addWord(e) {\n\n    e.preventDefault();\n    props.returnData(all);\n  }\n\n  const cancelPreview = (e) => {\n\n    e.preventDefault();\n    setPreview(false)\n\n  }\n\n  const edit = (e) => {\n\n    e.preventDefault();\n    setPreview(false)\n\n  }\n\n  useEffect(() => {\n\n    if (props.clear == true) {\n      clear()\n    }\n\n  }, [props.clear])\n\n  function clear() {\n\n    setAll({ word: \"\", definition: \"\" });\n  }\n\n  const [expand, setExpand] = useState(false);\n  const onClick = () => {\n    setExpand(!expand);\n  };\n\n  return (\n    <>\n      {ispreview == false ?\n\n        <Box Container className = {classes.box}>\n          <TextField name=\"word\"\n            variant=\"outlined\"\n            value={all.word}\n            fullWidth\n            className={classes.termInput}\n            onChange={e => setAll({ ...all, [event.target.name]: event.target.value })} label=\"Word\" />\n\n          <TextField name=\"definition\"\n            variant=\"outlined\"\n            className={classes.defInput}\n            value={all.definition}\n            onChange={e => setAll({ ...all, [event.target.name]: event.target.value })} multiline rows={10} label=\"Definition\" />\n\n          <Button variant=\"outlined\" className={classes.preview} onClick={sendPreview}  >\n            <Typography >\n              Preview\n          </Typography>\n          </Button>\n        </Box>\n\n        :\n        <>\n          <Box Container className = {classes.box}>\n              <Card>\n                <CardContent>\n                  <Typography variant=\"h5\" component=\"h1\">\n                    {all.word}\n                  </Typography>\n                  <br />\n                  <ShowMoreText\n                  lines={30}\n                  more={<ExpandMore />}\n                  less={<ExpandLess />}\n                  onClick={onClick}\n                  expanded={false}\n                >\n                  {all.definition.split('\\n').map((i, key) => {\n                    return <Typography align='left' key={key} paragraph variant=\"body1\">{i}</Typography>;\n                  })}\n                  </ShowMoreText>\n                </CardContent>\n                <CardActions>\n                  <Button className={classes.add} variant=\"outlined\" onClick={addWord} >\n                    add\n                 </Button>\n                  <Button className={classes.add} variant=\"outlined\" onClick={cancelPreview} >\n                    cancel\n                 </Button>\n                  <Button className={classes.add} variant=\"outlined\" onClick={edit} >\n                    Edit\n                </Button>\n                </CardActions>\n              </Card>\n          </Box>\n        </>\n      }\n    </>\n  );\n}\n\n\n"]},"metadata":{},"sourceType":"module"}