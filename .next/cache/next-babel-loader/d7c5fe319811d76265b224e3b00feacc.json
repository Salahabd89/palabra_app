{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _s = $RefreshSig$();\n\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { UserContext } from '../providers/userProvider';\nimport Appbar from '../components/appbar';\nimport { useState, useEffect } from 'react';\nimport Router from 'next/router';\nimport useLocalStorage from '../utils/useLocalStorage';\nimport router from 'next/router';\nimport { useCookies } from 'react-cookie';\n\nfunction MyApp(_ref) {\n  _s();\n\n  var Component = _ref.Component,\n      pageProps = _ref.pageProps;\n\n  var handleLogout = function handleLogout() {\n    setLoggedUser(localStorage.clear('loggedInUser'));\n    setLoggedUser(\"\");\n    setStatus([false]);\n    router.push('/');\n  };\n\n  var _useState = useState(null),\n      loggedinuser = _useState[0],\n      setLoggedUser = _useState[1];\n\n  var _useCookies = useCookies(['username']),\n      _useCookies2 = _slicedToArray(_useCookies, 2),\n      cookies = _useCookies2[0],\n      setCookie = _useCookies2[1];\n\n  var _useState2 = useState(false),\n      loggedin = _useState2[0],\n      setStatus = _useState2[1];\n\n  useEffect(function () {\n    console.log(Cookies.get('username'));\n    var user = localStorage.getItem('loggedInUser');\n\n    if (user != null) {\n      setLoggedUser(user);\n      setStatus(true);\n    }\n  }, [loggedinuser, loggedin]);\n  return __jsx(React.Fragment, null, __jsx(Appbar, {\n    user: loggedinuser,\n    loggedInState: loggedin,\n    logout: handleLogout\n  }, \"   \"), __jsx(Component, pageProps));\n}\n\n_s(MyApp, \"eEEB2Zz0QQuk4SghBcjddql3Yw8=\", false, function () {\n  return [useCookies];\n});\n\n_c = MyApp;\nexport default MyApp;\n\nvar _c;\n\n$RefreshReg$(_c, \"MyApp\");","map":{"version":3,"sources":["/Users/salahabdallah/Desktop/Dev/Jargon/pages/_app.js"],"names":["UserContext","Appbar","useState","useEffect","Router","useLocalStorage","router","useCookies","MyApp","Component","pageProps","handleLogout","setLoggedUser","localStorage","clear","setStatus","push","loggedinuser","cookies","setCookie","loggedin","console","log","Cookies","get","user","getItem"],"mappings":";;;;;;AACA,SAASA,WAAT,QAA4B,2BAA5B;AACA,OAAOC,MAAP,MAAmB,sBAAnB;AACA,SAASC,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;AACA,OAAOC,MAAP,MAAmB,aAAnB;AACA,OAAOC,eAAP,MAA4B,0BAA5B;AACA,OAAOC,MAAP,MAAmB,aAAnB;AACA,SAASC,UAAT,QAA2B,cAA3B;;AAEA,SAASC,KAAT,OAAyC;AAAA;;AAAA,MAAxBC,SAAwB,QAAxBA,SAAwB;AAAA,MAAbC,SAAa,QAAbA,SAAa;;AAErC,MAAMC,YAAY,GAAG,SAAfA,YAAe,GAAM;AAEvBC,IAAAA,aAAa,CAACC,YAAY,CAACC,KAAb,CAAmB,cAAnB,CAAD,CAAb;AACAF,IAAAA,aAAa,CAAC,EAAD,CAAb;AACAG,IAAAA,SAAS,CAAC,CAAC,KAAD,CAAD,CAAT;AACAT,IAAAA,MAAM,CAACU,IAAP,CAAY,GAAZ;AACH,GAND;;AAFqC,kBAUCd,QAAQ,CAAC,IAAD,CAVT;AAAA,MAU9Be,YAV8B;AAAA,MAUhBL,aAVgB;;AAAA,oBAWRL,UAAU,CAAC,CAAC,UAAD,CAAD,CAXF;AAAA;AAAA,MAW9BW,OAX8B;AAAA,MAWrBC,SAXqB;;AAAA,mBAYPjB,QAAQ,CAAC,KAAD,CAZD;AAAA,MAY9BkB,QAZ8B;AAAA,MAYpBL,SAZoB;;AAcrCZ,EAAAA,SAAS,CAAC,YAAM;AAEZkB,IAAAA,OAAO,CAACC,GAAR,CAAYC,OAAO,CAACC,GAAR,CAAY,UAAZ,CAAZ;AACA,QAAMC,IAAI,GAAIZ,YAAY,CAACa,OAAb,CAAqB,cAArB,CAAd;;AAEA,QAAID,IAAI,IAAI,IAAZ,EAAiB;AAEbb,MAAAA,aAAa,CAACa,IAAD,CAAb;AACAV,MAAAA,SAAS,CAAC,IAAD,CAAT;AACH;AAEJ,GAXQ,EAWN,CAACE,YAAD,EAAcG,QAAd,CAXM,CAAT;AAcA,SACI,4BACI,MAAC,MAAD;AAAQ,IAAA,IAAI,EAAEH,YAAd;AAA4B,IAAA,aAAa,EAAEG,QAA3C;AAAqD,IAAA,MAAM,EAAET;AAA7D,WADJ,EAEI,MAAC,SAAD,EAAeD,SAAf,CAFJ,CADJ;AAMH;;GAlCQF,K;UAWwBD,U;;;KAXxBC,K;AAuCT,eAAeA,KAAf","sourcesContent":["\nimport { UserContext } from '../providers/userProvider';\nimport Appbar from '../components/appbar';\nimport { useState, useEffect } from 'react'\nimport Router from 'next/router';\nimport useLocalStorage from '../utils/useLocalStorage';\nimport router from 'next/router';\nimport { useCookies } from 'react-cookie';\n\nfunction MyApp({ Component, pageProps }) {\n\n    const handleLogout = () => {\n\n        setLoggedUser(localStorage.clear('loggedInUser'));\n        setLoggedUser(\"\");\n        setStatus([false]);\n        router.push('/');\n    }\n    \n    const [loggedinuser, setLoggedUser] = useState(null);\n    const [cookies, setCookie] = useCookies(['username']);\n    const [loggedin, setStatus] = useState(false);\n\n    useEffect(() => {\n\n        console.log(Cookies.get('username'))\n        const user  = localStorage.getItem('loggedInUser');\n\n        if (user != null){\n\n            setLoggedUser(user);\n            setStatus(true);\n        }\n\n    }, [loggedinuser,loggedin]);\n\n    \n    return (\n        <>\n            <Appbar user={loggedinuser} loggedInState={loggedin} logout={handleLogout} >   </Appbar>\n            <Component {...pageProps} ></Component>\n        </>\n    )\n}\n\n\n\n\nexport default MyApp"]},"metadata":{},"sourceType":"module"}