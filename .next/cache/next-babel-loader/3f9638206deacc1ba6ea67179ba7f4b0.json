{"ast":null,"code":"import React from \"react\";\nvar __jsx = React.createElement;\nimport { UserContext } from '../providers/userProvider';\nimport { useState, useMemo } from 'react';\n\nfunction MyApp({\n  Component,\n  pageProps\n}) {\n  const {\n    0: user,\n    1: setUser\n  } = useState(null);\n  const value = useMemo(() => ({\n    user,\n    setUser\n  }), [user, setUser]);\n  return __jsx(UserContext.Provider, {\n    value: value\n  }, __jsx(Component, pageProps));\n} // Only uncomment this method if you have blocking data requirements for\n// every single page in your application. This disables the ability to\n// perform automatic static optimization, causing every page in your app to\n// be server-side rendered.\n//\n// MyApp.getInitialProps = async (appContext) => {\n//   // calls page's `getInitialProps` and fills `appProps.pageProps`\n//   const appProps = await App.getInitialProps(appContext);\n//\n//   return { ...appProps }\n// }\n\n\nexport default MyApp;","map":{"version":3,"sources":["/Users/salahabdallah/Desktop/Dev/Jargon/pages/_app.js"],"names":["UserContext","useState","useMemo","MyApp","Component","pageProps","user","setUser","value"],"mappings":";;AACA,SAAQA,WAAR,QAA0B,2BAA1B;AACA,SAASC,QAAT,EAAmBC,OAAnB,QAAkC,OAAlC;;AAGA,SAASC,KAAT,CAAe;AAAEC,EAAAA,SAAF;AAAaC,EAAAA;AAAb,CAAf,EAAyC;AAErC,QAAM;AAAA,OAACC,IAAD;AAAA,OAAOC;AAAP,MAAkBN,QAAQ,CAAC,IAAD,CAAhC;AAEA,QAAMO,KAAK,GAAGN,OAAO,CAAC,OAAO;AAAEI,IAAAA,IAAF;AAAQC,IAAAA;AAAR,GAAP,CAAD,EAA4B,CAACD,IAAD,EAAOC,OAAP,CAA5B,CAArB;AAGA,SAAO,MAAC,WAAD,CAAa,QAAb;AAAsB,IAAA,KAAK,EAAEC;AAA7B,KAEH,MAAC,SAAD,EAAeH,SAAf,CAFG,CAAP;AAID,C,CAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAEA,eAAeF,KAAf","sourcesContent":["\nimport {UserContext} from '../providers/userProvider';\nimport { useState, useMemo } from 'react'\n\n\nfunction MyApp({ Component, pageProps }) {\n\n    const [user, setUser] = useState(null);\n\n    const value = useMemo(() => ({ user, setUser }), [user, setUser]);\n\n\n    return <UserContext.Provider value={value} >\n        \n        <Component {...pageProps} />\n        </UserContext.Provider>\n  }\n  \n  // Only uncomment this method if you have blocking data requirements for\n  // every single page in your application. This disables the ability to\n  // perform automatic static optimization, causing every page in your app to\n  // be server-side rendered.\n  //\n  // MyApp.getInitialProps = async (appContext) => {\n  //   // calls page's `getInitialProps` and fills `appProps.pageProps`\n  //   const appProps = await App.getInitialProps(appContext);\n  //\n  //   return { ...appProps }\n  // }\n  \n  export default MyApp"]},"metadata":{},"sourceType":"module"}