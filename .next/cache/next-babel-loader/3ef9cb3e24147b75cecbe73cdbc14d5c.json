{"ast":null,"code":"import React from \"react\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport { UserContext } from '../providers/userProvider';\nimport Appbar from '../components/appbar';\nimport { useState, useEffect } from 'react';\n\nfunction MyApp({\n  Component,\n  pageProps\n}) {\n  const {\n    0: user,\n    1: setValue\n  } = useState(null);\n  useEffect(() => {\n    console.log(user);\n    setValue(localStorage.getItem('loggedInUser'));\n  }, _objectSpread({}, user));\n  return __jsx(Appbar, {\n    user: user\n  }, __jsx(Component, pageProps));\n} // Only uncomment this method if you have blocking data requirements for\n// every single page in your application. This disables the ability to\n// perform automatic static optimization, causing every page in your app to\n// be server-side rendered.\n//\n// MyApp.getInitialProps = async (appContext) => {\n//   // calls page's `getInitialProps` and fills `appProps.pageProps`\n//   const appProps = await App.getInitialProps(appContext);\n//\n//   return { ...appProps }\n// }\n\n\nexport default MyApp;","map":{"version":3,"sources":["/Users/salahabdallah/Desktop/Dev/Jargon/pages/_app.js"],"names":["UserContext","Appbar","useState","useEffect","MyApp","Component","pageProps","user","setValue","console","log","localStorage","getItem"],"mappings":";;;;;;;;;AACA,SAAQA,WAAR,QAA0B,2BAA1B;AACA,OAAOC,MAAP,MAAmB,sBAAnB;AACA,SAASC,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;;AAGA,SAASC,KAAT,CAAe;AAAEC,EAAAA,SAAF;AAAaC,EAAAA;AAAb,CAAf,EAAyC;AAErC,QAAM;AAAA,OAACC,IAAD;AAAA,OAAOC;AAAP,MAAmBN,QAAQ,CAAC,IAAD,CAAjC;AACAC,EAAAA,SAAS,CAAC,MAAM;AACZM,IAAAA,OAAO,CAACC,GAAR,CAAYH,IAAZ;AACAC,IAAAA,QAAQ,CAACG,YAAY,CAACC,OAAb,CAAqB,cAArB,CAAD,CAAR;AACD,GAHM,oBAGDL,IAHC,EAAT;AAKA,SACI,MAAC,MAAD;AAAQ,IAAA,IAAI,EAAIA;AAAhB,KACI,MAAC,SAAD,EAAeD,SAAf,CADJ,CADJ;AAMD,C,CAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAEA,eAAeF,KAAf","sourcesContent":["\nimport {UserContext} from '../providers/userProvider';\nimport Appbar from '../components/appbar';\nimport { useState, useEffect } from 'react'\n\n\nfunction MyApp({ Component, pageProps }) {\n\n    const [user, setValue] = useState(null);\n    useEffect(() => {\n        console.log(user)\n        setValue(localStorage.getItem('loggedInUser'))\n      },{...user});\n\n    return (\n        <Appbar user = {user} >\n            <Component {...pageProps} />\n        </Appbar>\n        )\n\n  }\n  \n  // Only uncomment this method if you have blocking data requirements for\n  // every single page in your application. This disables the ability to\n  // perform automatic static optimization, causing every page in your app to\n  // be server-side rendered.\n  //\n  // MyApp.getInitialProps = async (appContext) => {\n  //   // calls page's `getInitialProps` and fills `appProps.pageProps`\n  //   const appProps = await App.getInitialProps(appContext);\n  //\n  //   return { ...appProps }\n  // }\n  \n  export default MyApp"]},"metadata":{},"sourceType":"module"}