{"ast":null,"code":"var __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React, { useState, useEffect } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport TextField from '@material-ui/core/TextField';\nimport Card from '@material-ui/core/Card';\nimport Box from '@material-ui/core/Box';\nimport Button from '@material-ui/core/Button';\nconst useStyles = makeStyles(theme => ({\n  root: {\n    '& > *': {\n      margin: theme.spacing(1),\n      width: '25ch'\n    }\n  },\n  box: {\n    display: \"flex\",\n    flexDirection: \"column\",\n    justifyContent: \"center\",\n    marginTop: '5%',\n    textAlign: \"center\",\n    marginLeft: '10%',\n    marginRight: '10%'\n  },\n  card: {\n    display: \"flex\",\n    flexDirection: \"column\",\n    justifyContent: \"center\",\n    marginTop: '5%',\n    width: '100%',\n    textAlign: \"center\"\n  },\n  textfield: {\n    width: '50%',\n    marginTop: '5%'\n  },\n  button: {\n    width: '155px',\n    height: '45px',\n    background: '#202020 0% 0% no-repeat padding-box',\n    borderRadius: '80px',\n    opacity: '1',\n    display: \"flex\",\n    justifyContent: \"center\",\n    margin: 'auto',\n    marginTop: '10%',\n    marginBottom: '10%',\n    color: 'white'\n  }\n}));\nexport default function AddTeam(props) {\n  async function addTeam(e) {\n    e.preventDefault();\n    console.log(all);\n    props.returnData(all);\n  }\n\n  const {\n    0: all,\n    1: setAll\n  } = useState({\n    org: \"\",\n    dept: \"\",\n    team: \"\",\n    ind: \"\",\n    subind: \"\"\n  });\n  const classes = useStyles();\n  return __jsx(Box, {\n    Container: true,\n    className: classes.box\n  }, __jsx(Card, null, __jsx(TextField, {\n    name: \"org\",\n    value: all.org,\n    onChange: e => setAll(_objectSpread(_objectSpread({}, all), {}, {\n      [event.target.name]: event.target.value\n    })),\n    className: classes.textfield,\n    label: \"Organisation\",\n    variant: \"outlined\"\n  }), __jsx(\"br\", null), __jsx(TextField, {\n    name: \"dept\",\n    value: all.dept,\n    onChange: e => setAll(_objectSpread(_objectSpread({}, all), {}, {\n      [event.target.name]: event.target.value\n    })),\n    className: classes.textfield,\n    className: classes.textfield,\n    label: \"Department\",\n    variant: \"outlined\"\n  }), __jsx(\"br\", null), __jsx(TextField, {\n    name: \"team\",\n    value: all.team,\n    onChange: e => setAll(_objectSpread(_objectSpread({}, all), {}, {\n      [event.target.name]: event.target.value\n    })),\n    className: classes.textfield,\n    className: classes.textfield,\n    label: \"Team Name\",\n    variant: \"outlined\"\n  }), __jsx(\"br\", null), __jsx(TextField, {\n    name: \"ind\",\n    value: all.ind,\n    onChange: e => setAll(_objectSpread(_objectSpread({}, all), {}, {\n      [event.target.name]: event.target.value\n    })),\n    className: classes.textfield,\n    className: classes.textfield,\n    label: \"Industry\",\n    variant: \"outlined\"\n  }), __jsx(\"br\", null), __jsx(TextField, {\n    name: \"subind\",\n    value: all.subind,\n    onChange: e => setAll(_objectSpread(_objectSpread({}, all), {}, {\n      [event.target.name]: event.target.value\n    })),\n    className: classes.textfield,\n    className: classes.textfield,\n    label: \"Sub Industry\",\n    variant: \"outlined\"\n  }), __jsx(\"br\", null), __jsx(Button, {\n    variant: \"contained\",\n    onClick: addTeam,\n    className: classes.button,\n    color: \"primary\"\n  }, \"Create Team\")));\n}","map":null,"metadata":{},"sourceType":"module"}