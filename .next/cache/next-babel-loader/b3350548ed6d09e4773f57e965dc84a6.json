{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { UserContext } from '../providers/userProvider';\nimport Appbar from '../components/appbar';\nimport { useState, useEffect } from 'react';\nimport Router from 'next/router'; // Hook\n\nfunction useLocalStorage(key, initialValue) {\n  _s();\n\n  // State to store our value\n  // Pass initial state function to useState so logic is only executed once\n  var _useState = useState(function () {\n    try {\n      // Get from local storage by key\n      var item = window.localStorage.getItem(key); // Parse stored json or if none return initialValue\n\n      return item ? JSON.parse(item) : initialValue;\n    } catch (error) {\n      // If error also return initialValue\n      console.log(error);\n      return initialValue;\n    }\n  }),\n      storedValue = _useState[0],\n      setStoredValue = _useState[1];\n}\n\n_s(useLocalStorage, \"UFlRr0qGLRvJ5nHqE0XLJTSDBAo=\");\n\nfunction MyApp(_ref) {\n  _s2();\n\n  var Component = _ref.Component,\n      pageProps = _ref.pageProps;\n\n  var handleLogout = function handleLogout() {\n    setLoggedUser(localStorage.clear('loggedInUser'));\n    setLoggedUser(\"\");\n    setStatus([false]);\n  };\n\n  var _useLocalStorage = useLocalStorage('loggedInUser', ''),\n      _useLocalStorage2 = _slicedToArray(_useLocalStorage, 2),\n      user = _useLocalStorage2[0],\n      setUser = _useLocalStorage2[1];\n\n  var _useState2 = useState(user),\n      loggedinuser = _useState2[0],\n      setLoggedUser = _useState2[1];\n\n  var _useState3 = useState(false),\n      loggedin = _useState3[0],\n      setStatus = _useState3[1];\n\n  useEffect(function () {\n    var user = localStorage.getItem('loggedInUser');\n    console.log(user);\n\n    if (user != null) {\n      setLoggedUser(user);\n      setStatus(true);\n    }\n  }, [loggedinuser, loggedin]);\n  useEffect(function () {\n    var user = localStorage.getItem('loggedInUser');\n    console.log(user);\n\n    if (user != null) {\n      setLoggedUser(user);\n      setStatus(true);\n    }\n  }, [loggedinuser]);\n  return __jsx(React.Fragment, null, __jsx(Appbar, {\n    user: loggedinuser,\n    loggedInState: loggedin,\n    logout: handleLogout\n  }, \"   \"), __jsx(Component, pageProps));\n}\n\n_s2(MyApp, \"Jq/24zOjg0bLXT6CpiR/gqXi5Nw=\", false, function () {\n  return [useLocalStorage];\n});\n\n_c = MyApp;\nexport default MyApp;\n\nvar _c;\n\n$RefreshReg$(_c, \"MyApp\");","map":{"version":3,"sources":["/Users/salahabdallah/Desktop/Dev/Jargon/pages/_app.js"],"names":["UserContext","Appbar","useState","useEffect","Router","useLocalStorage","key","initialValue","item","window","localStorage","getItem","JSON","parse","error","console","log","storedValue","setStoredValue","MyApp","Component","pageProps","handleLogout","setLoggedUser","clear","setStatus","user","setUser","loggedinuser","loggedin"],"mappings":";;;;;;;AACA,SAASA,WAAT,QAA4B,2BAA5B;AACA,OAAOC,MAAP,MAAmB,sBAAnB;AACA,SAASC,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;AACA,OAAOC,MAAP,MAAmB,aAAnB,C,CAEA;;AAGA,SAASC,eAAT,CAA0BC,GAA1B,EAA+BC,YAA/B,EAA6C;AAAA;;AAEzC;AAEA;AAJyC,kBAMHL,QAAQ,CAAC,YAAM;AAEnD,QAAI;AAEF;AAEA,UAAMM,IAAI,GAAGC,MAAM,CAACC,YAAP,CAAoBC,OAApB,CAA4BL,GAA5B,CAAb,CAJE,CAMF;;AAEA,aAAOE,IAAI,GAAGI,IAAI,CAACC,KAAL,CAAWL,IAAX,CAAH,GAAsBD,YAAjC;AAED,KAVD,CAUE,OAAOO,KAAP,EAAc;AAEd;AAEAC,MAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AAEA,aAAOP,YAAP;AAED;AAEF,GAtB6C,CANL;AAAA,MAMlCU,WANkC;AAAA,MAMrBC,cANqB;AA6B5C;;GA7BQb,e;;AA+BT,SAASc,KAAT,OAAyC;AAAA;;AAAA,MAAxBC,SAAwB,QAAxBA,SAAwB;AAAA,MAAbC,SAAa,QAAbA,SAAa;;AAErC,MAAMC,YAAY,GAAG,SAAfA,YAAe,GAAM;AAEvBC,IAAAA,aAAa,CAACb,YAAY,CAACc,KAAb,CAAmB,cAAnB,CAAD,CAAb;AACAD,IAAAA,aAAa,CAAC,EAAD,CAAb;AACAE,IAAAA,SAAS,CAAC,CAAC,KAAD,CAAD,CAAT;AACH,GALD;;AAFqC,yBASbpB,eAAe,CAAC,cAAD,EAAiB,EAAjB,CATF;AAAA;AAAA,MAS9BqB,IAT8B;AAAA,MASxBC,OATwB;;AAAA,mBAWCzB,QAAQ,CAACwB,IAAD,CAXT;AAAA,MAW9BE,YAX8B;AAAA,MAWhBL,aAXgB;;AAAA,mBAaPrB,QAAQ,CAAC,KAAD,CAbD;AAAA,MAa9B2B,QAb8B;AAAA,MAapBJ,SAboB;;AAerCtB,EAAAA,SAAS,CAAC,YAAM;AAEZ,QAAMuB,IAAI,GAAIhB,YAAY,CAACC,OAAb,CAAqB,cAArB,CAAd;AACAI,IAAAA,OAAO,CAACC,GAAR,CAAYU,IAAZ;;AACA,QAAIA,IAAI,IAAI,IAAZ,EAAiB;AAEbH,MAAAA,aAAa,CAACG,IAAD,CAAb;AACAD,MAAAA,SAAS,CAAC,IAAD,CAAT;AACH;AAEJ,GAVQ,EAUN,CAACG,YAAD,EAAcC,QAAd,CAVM,CAAT;AAYA1B,EAAAA,SAAS,CAAC,YAAM;AAEZ,QAAMuB,IAAI,GAAIhB,YAAY,CAACC,OAAb,CAAqB,cAArB,CAAd;AACAI,IAAAA,OAAO,CAACC,GAAR,CAAYU,IAAZ;;AACA,QAAIA,IAAI,IAAI,IAAZ,EAAiB;AAEbH,MAAAA,aAAa,CAACG,IAAD,CAAb;AACAD,MAAAA,SAAS,CAAC,IAAD,CAAT;AACH;AAEJ,GAVQ,EAUN,CAACG,YAAD,CAVM,CAAT;AAaA,SACI,4BACI,MAAC,MAAD;AAAQ,IAAA,IAAI,EAAEA,YAAd;AAA4B,IAAA,aAAa,EAAEC,QAA3C;AAAqD,IAAA,MAAM,EAAEP;AAA7D,WADJ,EAEI,MAAC,SAAD,EAAeD,SAAf,CAFJ,CADJ;AAQH;;IAhDQF,K;UASmBd,e;;;KATnBc,K;AAoDT,eAAeA,KAAf","sourcesContent":["\nimport { UserContext } from '../providers/userProvider';\nimport Appbar from '../components/appbar';\nimport { useState, useEffect } from 'react'\nimport Router from 'next/router';\n\n// Hook\n\n\nfunction useLocalStorage (key, initialValue) {\n\n    // State to store our value\n  \n    // Pass initial state function to useState so logic is only executed once\n  \n    const [storedValue, setStoredValue] = useState(() => {\n  \n      try {\n  \n        // Get from local storage by key\n  \n        const item = window.localStorage.getItem(key);\n  \n        // Parse stored json or if none return initialValue\n  \n        return item ? JSON.parse(item) : initialValue;\n  \n      } catch (error) {\n  \n        // If error also return initialValue\n  \n        console.log(error);\n  \n        return initialValue;\n  \n      }\n  \n    });\n}\n\nfunction MyApp({ Component, pageProps }) {\n\n    const handleLogout = () => {\n\n        setLoggedUser(localStorage.clear('loggedInUser'));\n        setLoggedUser(\"\");\n        setStatus([false]);\n    }\n\n    const [user, setUser] = useLocalStorage('loggedInUser', '');\n    \n    const [loggedinuser, setLoggedUser] = useState(user);\n\n    const [loggedin, setStatus] = useState(false);\n\n    useEffect(() => {\n\n        const user  = localStorage.getItem('loggedInUser');\n        console.log(user)\n        if (user != null){\n\n            setLoggedUser(user);\n            setStatus(true);\n        }\n\n    }, [loggedinuser,loggedin]);\n\n    useEffect(() => {\n\n        const user  = localStorage.getItem('loggedInUser');\n        console.log(user)\n        if (user != null){\n\n            setLoggedUser(user);\n            setStatus(true);\n        }\n\n    }, [loggedinuser]);\n    \n\n    return (\n        <>\n            <Appbar user={loggedinuser} loggedInState={loggedin} logout={handleLogout} >   </Appbar>\n            <Component {...pageProps} ></Component>\n        </>\n\n    )\n\n}\n\n\n\nexport default MyApp"]},"metadata":{},"sourceType":"module"}