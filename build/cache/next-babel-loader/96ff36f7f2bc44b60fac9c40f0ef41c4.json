{"ast":null,"code":"import React from \"react\";\nvar __jsx = React.createElement;\nimport { UserContext } from '../providers/userProvider';\nimport Appbar from '../components/appbar';\nimport { useState, useEffect } from 'react';\nimport Router from 'next/router';\nimport useLocalStorage from '../utils/useLocalStorage';\nimport router from 'next/router';\nimport { useCookies } from 'react-cookie';\nimport { CookiesProvider } from 'react-cookie';\n\nfunction MyApp({\n  Component,\n  pageProps\n}) {\n  function removeCookies() {\n    var res = document.cookie;\n    var multiple = res.split(\";\");\n\n    for (var i = 0; i < multiple.length; i++) {\n      var key = multiple[i].split(\"=\");\n      document.cookie = key[0] + \" =; expires = Thu, 01 Jan 1970 00:00:00 UTC\";\n    }\n  }\n\n  const handleLogout = () => {\n    removeCookies();\n    setLoggedUser(\"\");\n    setStatus([false]);\n    router.push('/');\n    router.reload();\n  };\n\n  const {\n    0: loggedinuser,\n    1: setLoggedUser\n  } = useState(null);\n  const {\n    0: loggedin,\n    1: setStatus\n  } = useState(false);\n  useEffect(() => {\n    let user = null;\n\n    if (document.cookie.length > 0) {\n      user = document.cookie.split('; ').find(row => row.startsWith('username')).split('=')[1];\n    }\n\n    if (user != null) {\n      setLoggedUser(user);\n      setStatus(true);\n    }\n  }, [loggedinuser, loggedin]);\n  return __jsx(React.Fragment, null, __jsx(Appbar, {\n    user: loggedinuser,\n    loggedInState: loggedin,\n    logout: handleLogout\n  }, \"   \"), __jsx(Component, pageProps));\n}\n\nexport default MyApp;","map":null,"metadata":{},"sourceType":"module"}